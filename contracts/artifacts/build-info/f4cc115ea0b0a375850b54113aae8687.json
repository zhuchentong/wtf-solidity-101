{
	"id": "f4cc115ea0b0a375850b54113aae8687",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/34_ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// EIP & ERC\n// ERC是EIP的一部分\n\n// ERC165: 智能合约可以声明它支持的接口供别人检查, 可以用它来检查合约是否支持了ERC721，ERC1155的接口。\n// supportsInterface\n\n// IERC721: 使用tokenId来标识特定的非同质化代币，授权转账需要明确的tokenId，而ERC20只需要转账数额\n\n// IERC721事件:\n// Transfer\n// Approval\n// ApprovalForAll\n\n// IERC721函数：\n// balanceOf\n// ownerOf\n// transferFrom\n// safeTransferFrom\n// approve\n// getApproved\n// setApprovalForAll\n// isApprovedForAll\n// safeTransferFrom\n\n// address(to).isContract() 可以来判断地址是否是合约地址\n\n// ERC721使用_checkOnERC721Received来检查目标合约是否实现了onERC721Received函数（selector）\n\n// IERC721Metadata 是 ERC721 的扩展接口，实现了三个metadata的查询\n// name() 返回代币名称\n// symbol() 返回代币代号\n// tokenURI() 通过tokenId查询metadata的链接URL, ERC721特有的函数 \n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ERC721 is IERC721, IERC721Metadata{\n    using Address for address; // 使用Address库，用isContract来判断地址是否为合约\n    using Strings for uint256; // 使用String库，\n\n    // Token名称\n    string public override name;\n    // Token代号\n    string public override symbol;\n    // tokenId 到 owner address 的持有人映射\n    mapping(uint => address) private _owners;\n    // address 到 持仓数量 的持仓量映射\n    mapping(address => uint) private _balances;\n    // tokenID 到 授权地址 的授权映射\n    mapping(uint => address) private _tokenApprovals;\n    //  owner地址。到operator地址 的批量授权映射\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * 构造函数，初始化`name` 和`symbol` .\n     */\n    constructor(string memory name_, string memory symbol_) {\n        name = name_;\n        symbol = symbol_;\n    }\n\n    // 实现IERC165接口supportsInterface\n    function supportsInterface(bytes4 interfaceId)\n        external\n        pure\n        override\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC165).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId;\n    }\n\n    function isContract(address _addr) public  view returns (bool){\n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return (size > 0);\n    }\n\n    // 实现IERC721的balanceOf，利用_balances变量查询owner地址的balance。\n    function balanceOf(address owner) external view override returns (uint) {\n        require(owner != address(0), \"owner = zero address\");\n        return _balances[owner];\n    }\n\n    // 实现IERC721的ownerOf，利用_owners变量查询tokenId的owner。\n    function ownerOf(uint tokenId) public view override returns (address owner) {\n        owner = _owners[tokenId];\n        require(owner != address(0), \"token doesn't exist\");\n    }\n\n    // 实现IERC721的isApprovedForAll，利用_operatorApprovals变量查询owner地址是否将所持NFT批量授权给了operator地址。\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    // 实现IERC721的setApprovalForAll，将持有代币全部授权给operator地址。调用_setApprovalForAll函数。\n    function setApprovalForAll(address operator, bool approved) external override {\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    // 实现IERC721的getApproved，利用_tokenApprovals变量查询tokenId的授权地址。\n    function getApproved(uint tokenId) external view override returns (address) {\n        require(_owners[tokenId] != address(0), \"token doesn't exist\");\n        return _tokenApprovals[tokenId];\n    }\n     \n    // 授权函数。通过调整_tokenApprovals来，授权 to 地址操作 tokenId，同时释放Approval事件。\n    function _approve(\n        address owner,\n        address to,\n        uint tokenId\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // 实现IERC721的approve，将tokenId授权给 to 地址。条件：to不是owner，且msg.sender是owner或授权地址。调用_approve函数。\n    function approve(address to, uint tokenId) external override {\n        address owner = _owners[tokenId];\n        require(\n            msg.sender == owner || _operatorApprovals[owner][msg.sender],\n            \"not owner nor approved for all\"\n        );\n        _approve(owner, to, tokenId);\n    }\n\n    // 查询 spender地址是否可以使用tokenId（他是owner或被授权地址）。\n    function _isApprovedOrOwner(\n        address owner,\n        address spender,\n        uint tokenId\n    ) private view returns (bool) {\n        return (spender == owner ||\n            _tokenApprovals[tokenId] == spender ||\n            _operatorApprovals[owner][spender]);\n    }\n\n    /*\n     * 转账函数。通过调整_balances和_owner变量将 tokenId 从 from 转账给 to，同时释放Transfer事件。\n     * 条件:\n     * 1. tokenId 被 from 拥有\n     * 2. to 不是0地址\n     */\n    function _transfer(\n        address owner,\n        address from,\n        address to,\n        uint tokenId\n    ) private {\n        require(from == owner, \"not owner\");\n        require(to != address(0), \"transfer to the zero address\");\n\n        _approve(owner, address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n    \n    // 实现IERC721的transferFrom，非安全转账，不建议使用。调用_transfer函数\n    function transferFrom(\n        address from,\n        address to,\n        uint tokenId\n    ) external override {\n        address owner = ownerOf(tokenId);\n        require(\n            _isApprovedOrOwner(owner, msg.sender, tokenId),\n            \"not owner nor approved\"\n        );\n        _transfer(owner, from, to, tokenId);\n    }\n\n    /**\n     * 安全转账，安全地将 tokenId 代币从 from 转移到 to，会检查合约接收者是否了解 ERC721 协议，以防止代币被永久锁定。调用了_transfer函数和_checkOnERC721Received函数。条件：\n     * from 不能是0地址.\n     * to 不能是0地址.\n     * tokenId 代币必须存在，并且被 from拥有.\n     * 如果 to 是智能合约, 他必须支持 IERC721Receiver-onERC721Received.\n     */\n    function _safeTransfer(\n        address owner,\n        address from,\n        address to,\n        uint tokenId,\n        bytes memory _data\n    ) private {\n        _transfer(owner, from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"not ERC721Receiver\");\n    }\n\n    /**\n     * 实现IERC721的safeTransferFrom，安全转账，调用了_safeTransfer函数。\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint tokenId,\n        bytes memory _data\n    ) public override {\n        address owner = ownerOf(tokenId);\n        require(\n            _isApprovedOrOwner(owner, msg.sender, tokenId),\n            \"not owner nor approved\"\n        );\n        _safeTransfer(owner, from, to, tokenId, _data);\n    }\n\n    // safeTransferFrom重载函数\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint tokenId\n    ) external override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /** \n     * 铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。\n     * 这个mint函数所有人都能调用，实际使用需要开发人员重写，加上一些条件。\n     * 条件:\n     * 1. tokenId尚不存在。\n     * 2. to不是0地址.\n     */\n    function _mint(address to, uint tokenId)  public {\n        require(to != address(0), \"mint to zero address\");\n        require(_owners[tokenId] == address(0), \"token already minted\");\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    // 销毁函数，通过调整_balances和_owners变量来销毁tokenId，同时释放Transfer事件。条件：tokenId存在。\n    function _burn(uint tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n        require(msg.sender == owner, \"not owner of token\");\n\n        _approve(owner, address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    // _checkOnERC721Received：函数，用于在 to 为合约的时候调用IERC721Receiver-onERC721Received, 以防 tokenId 被不小心转入黑洞。\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (isContract(to)) {\n            return\n                IERC721Receiver(to).onERC721Received(\n                    msg.sender,\n                    from,\n                    tokenId,\n                    _data\n                ) == IERC721Receiver.onERC721Received.selector;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * 实现IERC721Metadata的tokenURI函数，查询metadata。\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_owners[tokenId] != address(0), \"Token Not Exist\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * 计算{tokenURI}的BaseURI，tokenURI就是把baseURI和tokenId拼接在一起，需要开发重写。\n     * BAYC的baseURI为ipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/ \n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "berlin"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204889728fa00352b73fe8ec0ad66895eb5b0e6226aa5949e21413c9ae599d35ca64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204889728fa00352b73fe8ec0ad66895eb5b0e6226aa5949e21413c9ae599d35ca64736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DUP10 PUSH19 0x8FA00352B73FE8EC0AD66895EB5B0E6226AA59 BLOBHASH 0xE2 EQ SGT 0xC9 0xAE MSIZE SWAP14 CALLDATALOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204889728fa00352b73fe8ec0ad66895eb5b0e6226aa5949e21413c9ae599d35ca64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DUP10 PUSH19 0x8FA00352B73FE8EC0AD66895EB5B0E6226AA59 BLOBHASH 0xE2 EQ SGT 0xC9 0xAE MSIZE SWAP14 CALLDATALOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204889728fa00352b73fe8ec0ad66895eb5b0e6226aa5949e21413c9ae599d35ca64736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/34_ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220892ca312a67e85f313748fadaf10018c93d0c07797810eb0b1a086e905f2bd0a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220892ca312a67e85f313748fadaf10018c93d0c07797810eb0b1a086e905f2bd0a64736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x2C LOG3 SLT 0xA6 PUSH31 0x85F313748FADAF10018C93D0C07797810EB0B1A086E905F2BD0A64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "251:2847:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220892ca312a67e85f313748fadaf10018c93d0c07797810eb0b1a086e905f2bd0a64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x2C LOG3 SLT 0xA6 PUSH31 0x85F313748FADAF10018C93D0C07797810EB0B1A086E905F2BD0A64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "251:2847:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220892ca312a67e85f313748fadaf10018c93d0c07797810eb0b1a086e905f2bd0a64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/34_ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016a1c7afa0ba25cff390b83e22e74067d77422b012d149ba03f2b87c96bf98bf64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016a1c7afa0ba25cff390b83e22e74067d77422b012d149ba03f2b87c96bf98bf64736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND LOG1 0xC7 0xAF LOG0 0xBA 0x25 0xCF RETURN SWAP1 0xB8 RETURNDATACOPY 0x22 0xE7 BLOCKHASH PUSH8 0xD77422B012D149BA SUB CALLCODE 0xB8 PUSH29 0x96BF98BF64736F6C634300081900330000000000000000000000000000 ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016a1c7afa0ba25cff390b83e22e74067d77422b012d149ba03f2b87c96bf98bf64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND LOG1 0xC7 0xAF LOG0 0xBA 0x25 0xCF RETURN SWAP1 0xB8 RETURNDATACOPY 0x22 0xE7 BLOCKHASH PUSH8 0xD77422B012D149BA SUB CALLCODE 0xB8 PUSH29 0x96BF98BF64736F6C634300081900330000000000000000000000000000 ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016a1c7afa0ba25cff390b83e22e74067d77422b012d149ba03f2b87c96bf98bf64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/34_ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122019eacd28c85a2cbcb335f551de7707e7d9768417913a8312187da48797b52eac64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019eacd28c85a2cbcb335f551de7707e7d9768417913a8312187da48797b52eac64736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xEA 0xCD 0x28 0xC8 GAS 0x2C 0xBC 0xB3 CALLDATALOAD CREATE2 MLOAD 0xDE PUSH24 0x7E7D9768417913A8312187DA48797B52EAC64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122019eacd28c85a2cbcb335f551de7707e7d9768417913a8312187da48797b52eac64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xEA 0xCD 0x28 0xC8 GAS 0x2C 0xBC 0xB3 CALLDATALOAD CREATE2 MLOAD 0xDE PUSH24 0x7E7D9768417913A8312187DA48797B52EAC64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122019eacd28c85a2cbcb335f551de7707e7d9768417913a8312187da48797b52eac64736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/34_ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/34_ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"stateVariables": {
							"name": {
								"details": "Returns the token collection name."
							},
							"symbol": {
								"details": "Returns the token collection symbol."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/34_ERC721.sol\":1333:10527  contract ERC721 is IERC721, IERC721Metadata{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/34_ERC721.sol\":2146:2257  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/34_ERC721.sol\":2219:2224  name_ */\n  dup2\n    /* \"contracts/34_ERC721.sol\":2212:2216  name */\n  0x00\n    /* \"contracts/34_ERC721.sol\":2212:2224  name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/34_ERC721.sol\":2243:2250  symbol_ */\n  dup1\n    /* \"contracts/34_ERC721.sol\":2234:2240  symbol */\n  0x01\n    /* \"contracts/34_ERC721.sol\":2234:2250  symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/34_ERC721.sol\":2146:2257  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/34_ERC721.sol\":1333:10527  contract ERC721 is IERC721, IERC721Metadata{... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1858   */\ntag_20:\n    /* \"#utility.yul\":1692:1693   */\n  0x00\n    /* \"#utility.yul\":1702:1815   */\ntag_62:\n    /* \"#utility.yul\":1716:1722   */\n  dup4\n    /* \"#utility.yul\":1713:1714   */\n  dup2\n    /* \"#utility.yul\":1710:1723   */\n  lt\n    /* \"#utility.yul\":1702:1815   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1801:1802   */\n  dup1\n    /* \"#utility.yul\":1796:1799   */\n  dup3\n    /* \"#utility.yul\":1792:1803   */\n  add\n    /* \"#utility.yul\":1786:1804   */\n  mload\n    /* \"#utility.yul\":1782:1783   */\n  dup2\n    /* \"#utility.yul\":1777:1780   */\n  dup5\n    /* \"#utility.yul\":1773:1784   */\n  add\n    /* \"#utility.yul\":1766:1805   */\n  mstore\n    /* \"#utility.yul\":1738:1740   */\n  0x20\n    /* \"#utility.yul\":1735:1736   */\n  dup2\n    /* \"#utility.yul\":1731:1741   */\n  add\n    /* \"#utility.yul\":1726:1741   */\n  swap1\n  pop\n    /* \"#utility.yul\":1702:1815   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1849:1850   */\n  0x00\n    /* \"#utility.yul\":1840:1846   */\n  dup5\n    /* \"#utility.yul\":1835:1838   */\n  dup5\n    /* \"#utility.yul\":1831:1847   */\n  add\n    /* \"#utility.yul\":1824:1851   */\n  mstore\n    /* \"#utility.yul\":1672:1858   */\n  pop\n    /* \"#utility.yul\":1610:1858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1864:2298   */\ntag_21:\n    /* \"#utility.yul\":1953:1958   */\n  0x00\n    /* \"#utility.yul\":1978:2044   */\n  tag_66\n    /* \"#utility.yul\":1994:2043   */\n  tag_67\n    /* \"#utility.yul\":2036:2042   */\n  dup5\n    /* \"#utility.yul\":1994:2043   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1978:2044   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1969:2044   */\n  swap1\n  pop\n    /* \"#utility.yul\":2067:2073   */\n  dup3\n    /* \"#utility.yul\":2060:2065   */\n  dup2\n    /* \"#utility.yul\":2053:2074   */\n  mstore\n    /* \"#utility.yul\":2105:2109   */\n  0x20\n    /* \"#utility.yul\":2098:2103   */\n  dup2\n    /* \"#utility.yul\":2094:2110   */\n  add\n    /* \"#utility.yul\":2143:2146   */\n  dup5\n    /* \"#utility.yul\":2134:2140   */\n  dup5\n    /* \"#utility.yul\":2129:2132   */\n  dup5\n    /* \"#utility.yul\":2125:2141   */\n  add\n    /* \"#utility.yul\":2122:2147   */\n  gt\n    /* \"#utility.yul\":2119:2231   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2150:2229   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2119:2231   */\ntag_68:\n    /* \"#utility.yul\":2240:2292   */\n  tag_70\n    /* \"#utility.yul\":2285:2291   */\n  dup5\n    /* \"#utility.yul\":2280:2283   */\n  dup3\n    /* \"#utility.yul\":2275:2278   */\n  dup6\n    /* \"#utility.yul\":2240:2292   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1959:2298   */\n  pop\n    /* \"#utility.yul\":1864:2298   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2318:2673   */\ntag_22:\n    /* \"#utility.yul\":2385:2390   */\n  0x00\n    /* \"#utility.yul\":2434:2437   */\n  dup3\n    /* \"#utility.yul\":2427:2431   */\n  0x1f\n    /* \"#utility.yul\":2419:2425   */\n  dup4\n    /* \"#utility.yul\":2415:2432   */\n  add\n    /* \"#utility.yul\":2411:2438   */\n  slt\n    /* \"#utility.yul\":2401:2523   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2442:2521   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2401:2523   */\ntag_72:\n    /* \"#utility.yul\":2552:2558   */\n  dup2\n    /* \"#utility.yul\":2546:2559   */\n  mload\n    /* \"#utility.yul\":2577:2667   */\n  tag_74\n    /* \"#utility.yul\":2663:2666   */\n  dup5\n    /* \"#utility.yul\":2655:2661   */\n  dup3\n    /* \"#utility.yul\":2648:2652   */\n  0x20\n    /* \"#utility.yul\":2640:2646   */\n  dup7\n    /* \"#utility.yul\":2636:2653   */\n  add\n    /* \"#utility.yul\":2577:2667   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2568:2667   */\n  swap2\n  pop\n    /* \"#utility.yul\":2391:2673   */\n  pop\n    /* \"#utility.yul\":2318:2673   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2679:3532   */\ntag_3:\n    /* \"#utility.yul\":2778:2784   */\n  0x00\n    /* \"#utility.yul\":2786:2792   */\n  dup1\n    /* \"#utility.yul\":2835:2837   */\n  0x40\n    /* \"#utility.yul\":2823:2832   */\n  dup4\n    /* \"#utility.yul\":2814:2821   */\n  dup6\n    /* \"#utility.yul\":2810:2833   */\n  sub\n    /* \"#utility.yul\":2806:2838   */\n  slt\n    /* \"#utility.yul\":2803:2922   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2841:2920   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2803:2922   */\ntag_76:\n    /* \"#utility.yul\":2982:2983   */\n  0x00\n    /* \"#utility.yul\":2971:2980   */\n  dup4\n    /* \"#utility.yul\":2967:2984   */\n  add\n    /* \"#utility.yul\":2961:2985   */\n  mload\n    /* \"#utility.yul\":3012:3030   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3004:3010   */\n  dup2\n    /* \"#utility.yul\":3001:3031   */\n  gt\n    /* \"#utility.yul\":2998:3115   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3034:3113   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2998:3115   */\ntag_78:\n    /* \"#utility.yul\":3139:3213   */\n  tag_80\n    /* \"#utility.yul\":3205:3212   */\n  dup6\n    /* \"#utility.yul\":3196:3202   */\n  dup3\n    /* \"#utility.yul\":3185:3194   */\n  dup7\n    /* \"#utility.yul\":3181:3203   */\n  add\n    /* \"#utility.yul\":3139:3213   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3129:3213   */\n  swap3\n  pop\n    /* \"#utility.yul\":2932:3223   */\n  pop\n    /* \"#utility.yul\":3283:3285   */\n  0x20\n    /* \"#utility.yul\":3272:3281   */\n  dup4\n    /* \"#utility.yul\":3268:3286   */\n  add\n    /* \"#utility.yul\":3262:3287   */\n  mload\n    /* \"#utility.yul\":3314:3332   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3306:3312   */\n  dup2\n    /* \"#utility.yul\":3303:3333   */\n  gt\n    /* \"#utility.yul\":3300:3417   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3336:3415   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3300:3417   */\ntag_81:\n    /* \"#utility.yul\":3441:3515   */\n  tag_83\n    /* \"#utility.yul\":3507:3514   */\n  dup6\n    /* \"#utility.yul\":3498:3504   */\n  dup3\n    /* \"#utility.yul\":3487:3496   */\n  dup7\n    /* \"#utility.yul\":3483:3505   */\n  add\n    /* \"#utility.yul\":3441:3515   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3431:3515   */\n  swap2\n  pop\n    /* \"#utility.yul\":3233:3525   */\n  pop\n    /* \"#utility.yul\":2679:3532   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3538:3637   */\ntag_23:\n    /* \"#utility.yul\":3590:3596   */\n  0x00\n    /* \"#utility.yul\":3624:3629   */\n  dup2\n    /* \"#utility.yul\":3618:3630   */\n  mload\n    /* \"#utility.yul\":3608:3630   */\n  swap1\n  pop\n    /* \"#utility.yul\":3538:3637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3643:3823   */\ntag_24:\n    /* \"#utility.yul\":3691:3768   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3688:3689   */\n  0x00\n    /* \"#utility.yul\":3681:3769   */\n  mstore\n    /* \"#utility.yul\":3788:3792   */\n  0x22\n    /* \"#utility.yul\":3785:3786   */\n  0x04\n    /* \"#utility.yul\":3778:3793   */\n  mstore\n    /* \"#utility.yul\":3812:3816   */\n  0x24\n    /* \"#utility.yul\":3809:3810   */\n  0x00\n    /* \"#utility.yul\":3802:3817   */\n  revert\n    /* \"#utility.yul\":3829:4149   */\ntag_25:\n    /* \"#utility.yul\":3873:3879   */\n  0x00\n    /* \"#utility.yul\":3910:3911   */\n  0x02\n    /* \"#utility.yul\":3904:3908   */\n  dup3\n    /* \"#utility.yul\":3900:3912   */\n  div\n    /* \"#utility.yul\":3890:3912   */\n  swap1\n  pop\n    /* \"#utility.yul\":3957:3958   */\n  0x01\n    /* \"#utility.yul\":3951:3955   */\n  dup3\n    /* \"#utility.yul\":3947:3959   */\n  and\n    /* \"#utility.yul\":3978:3996   */\n  dup1\n    /* \"#utility.yul\":3968:4049   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4034:4038   */\n  0x7f\n    /* \"#utility.yul\":4026:4032   */\n  dup3\n    /* \"#utility.yul\":4022:4039   */\n  and\n    /* \"#utility.yul\":4012:4039   */\n  swap2\n  pop\n    /* \"#utility.yul\":3968:4049   */\ntag_87:\n    /* \"#utility.yul\":4096:4098   */\n  0x20\n    /* \"#utility.yul\":4088:4094   */\n  dup3\n    /* \"#utility.yul\":4085:4099   */\n  lt\n    /* \"#utility.yul\":4065:4083   */\n  dup2\n    /* \"#utility.yul\":4062:4100   */\n  sub\n    /* \"#utility.yul\":4059:4143   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4115:4133   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4059:4143   */\ntag_88:\n    /* \"#utility.yul\":3880:4149   */\n  pop\n    /* \"#utility.yul\":3829:4149   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4155:4296   */\ntag_26:\n    /* \"#utility.yul\":4204:4208   */\n  0x00\n    /* \"#utility.yul\":4227:4230   */\n  dup2\n    /* \"#utility.yul\":4219:4230   */\n  swap1\n  pop\n    /* \"#utility.yul\":4250:4253   */\n  dup2\n    /* \"#utility.yul\":4247:4248   */\n  0x00\n    /* \"#utility.yul\":4240:4254   */\n  mstore\n    /* \"#utility.yul\":4284:4288   */\n  0x20\n    /* \"#utility.yul\":4281:4282   */\n  0x00\n    /* \"#utility.yul\":4271:4289   */\n  keccak256\n    /* \"#utility.yul\":4263:4289   */\n  swap1\n  pop\n    /* \"#utility.yul\":4155:4296   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4302:4395   */\ntag_27:\n    /* \"#utility.yul\":4339:4345   */\n  0x00\n    /* \"#utility.yul\":4386:4388   */\n  0x20\n    /* \"#utility.yul\":4381:4383   */\n  0x1f\n    /* \"#utility.yul\":4374:4379   */\n  dup4\n    /* \"#utility.yul\":4370:4384   */\n  add\n    /* \"#utility.yul\":4366:4389   */\n  div\n    /* \"#utility.yul\":4356:4389   */\n  swap1\n  pop\n    /* \"#utility.yul\":4302:4395   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4401:4508   */\ntag_28:\n    /* \"#utility.yul\":4445:4453   */\n  0x00\n    /* \"#utility.yul\":4495:4500   */\n  dup3\n    /* \"#utility.yul\":4489:4493   */\n  dup3\n    /* \"#utility.yul\":4485:4501   */\n  shl\n    /* \"#utility.yul\":4464:4501   */\n  swap1\n  pop\n    /* \"#utility.yul\":4401:4508   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4514:4907   */\ntag_29:\n    /* \"#utility.yul\":4583:4589   */\n  0x00\n    /* \"#utility.yul\":4633:4634   */\n  0x08\n    /* \"#utility.yul\":4621:4631   */\n  dup4\n    /* \"#utility.yul\":4617:4635   */\n  mul\n    /* \"#utility.yul\":4656:4753   */\n  tag_94\n    /* \"#utility.yul\":4686:4752   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4675:4684   */\n  dup3\n    /* \"#utility.yul\":4656:4753   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4774:4813   */\n  tag_95\n    /* \"#utility.yul\":4804:4812   */\n  dup7\n    /* \"#utility.yul\":4793:4802   */\n  dup4\n    /* \"#utility.yul\":4774:4813   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4762:4813   */\n  swap6\n  pop\n    /* \"#utility.yul\":4846:4850   */\n  dup1\n    /* \"#utility.yul\":4842:4851   */\n  not\n    /* \"#utility.yul\":4835:4840   */\n  dup5\n    /* \"#utility.yul\":4831:4852   */\n  and\n    /* \"#utility.yul\":4822:4852   */\n  swap4\n  pop\n    /* \"#utility.yul\":4895:4899   */\n  dup1\n    /* \"#utility.yul\":4885:4893   */\n  dup7\n    /* \"#utility.yul\":4881:4900   */\n  and\n    /* \"#utility.yul\":4874:4879   */\n  dup5\n    /* \"#utility.yul\":4871:4901   */\n  or\n    /* \"#utility.yul\":4861:4901   */\n  swap3\n  pop\n    /* \"#utility.yul\":4590:4907   */\n  pop\n  pop\n    /* \"#utility.yul\":4514:4907   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:4990   */\ntag_30:\n    /* \"#utility.yul\":4950:4957   */\n  0x00\n    /* \"#utility.yul\":4979:4984   */\n  dup2\n    /* \"#utility.yul\":4968:4984   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:4990   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4996:5056   */\ntag_31:\n    /* \"#utility.yul\":5024:5027   */\n  0x00\n    /* \"#utility.yul\":5045:5050   */\n  dup2\n    /* \"#utility.yul\":5038:5050   */\n  swap1\n  pop\n    /* \"#utility.yul\":4996:5056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5062:5204   */\ntag_32:\n    /* \"#utility.yul\":5112:5121   */\n  0x00\n    /* \"#utility.yul\":5145:5198   */\n  tag_99\n    /* \"#utility.yul\":5163:5197   */\n  tag_100\n    /* \"#utility.yul\":5172:5196   */\n  tag_101\n    /* \"#utility.yul\":5190:5195   */\n  dup5\n    /* \"#utility.yul\":5172:5196   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5163:5197   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5145:5198   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5132:5198   */\n  swap1\n  pop\n    /* \"#utility.yul\":5062:5204   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5210:5285   */\ntag_33:\n    /* \"#utility.yul\":5253:5256   */\n  0x00\n    /* \"#utility.yul\":5274:5279   */\n  dup2\n    /* \"#utility.yul\":5267:5279   */\n  swap1\n  pop\n    /* \"#utility.yul\":5210:5285   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5291:5560   */\ntag_34:\n    /* \"#utility.yul\":5401:5440   */\n  tag_104\n    /* \"#utility.yul\":5432:5439   */\n  dup4\n    /* \"#utility.yul\":5401:5440   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5462:5553   */\n  tag_105\n    /* \"#utility.yul\":5511:5552   */\n  tag_106\n    /* \"#utility.yul\":5535:5551   */\n  dup3\n    /* \"#utility.yul\":5511:5552   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5503:5509   */\n  dup5\n    /* \"#utility.yul\":5496:5500   */\n  dup5\n    /* \"#utility.yul\":5490:5501   */\n  sload\n    /* \"#utility.yul\":5462:5553   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5456:5460   */\n  dup3\n    /* \"#utility.yul\":5449:5554   */\n  sstore\n    /* \"#utility.yul\":5367:5560   */\n  pop\n    /* \"#utility.yul\":5291:5560   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5566:5639   */\ntag_35:\n    /* \"#utility.yul\":5611:5614   */\n  0x00\n    /* \"#utility.yul\":5566:5639   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5645:5834   */\ntag_36:\n    /* \"#utility.yul\":5722:5754   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5763:5828   */\n  tag_110\n    /* \"#utility.yul\":5821:5827   */\n  dup2\n    /* \"#utility.yul\":5813:5819   */\n  dup5\n    /* \"#utility.yul\":5807:5811   */\n  dup5\n    /* \"#utility.yul\":5763:5828   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5698:5834   */\n  pop\n    /* \"#utility.yul\":5645:5834   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5840:6026   */\ntag_37:\n    /* \"#utility.yul\":5900:6020   */\ntag_112:\n    /* \"#utility.yul\":5917:5920   */\n  dup2\n    /* \"#utility.yul\":5910:5915   */\n  dup2\n    /* \"#utility.yul\":5907:5921   */\n  lt\n    /* \"#utility.yul\":5900:6020   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5971:6010   */\n  tag_115\n    /* \"#utility.yul\":6008:6009   */\n  0x00\n    /* \"#utility.yul\":6001:6006   */\n  dup3\n    /* \"#utility.yul\":5971:6010   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5944:5945   */\n  0x01\n    /* \"#utility.yul\":5937:5942   */\n  dup2\n    /* \"#utility.yul\":5933:5946   */\n  add\n    /* \"#utility.yul\":5924:5946   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:6020   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5840:6026   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6032:6575   */\ntag_38:\n    /* \"#utility.yul\":6133:6135   */\n  0x1f\n    /* \"#utility.yul\":6128:6131   */\n  dup3\n    /* \"#utility.yul\":6125:6136   */\n  gt\n    /* \"#utility.yul\":6122:6568   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6167:6205   */\n  tag_118\n    /* \"#utility.yul\":6199:6204   */\n  dup2\n    /* \"#utility.yul\":6167:6205   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6251:6280   */\n  tag_119\n    /* \"#utility.yul\":6269:6279   */\n  dup5\n    /* \"#utility.yul\":6251:6280   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6241:6249   */\n  dup2\n    /* \"#utility.yul\":6237:6281   */\n  add\n    /* \"#utility.yul\":6434:6436   */\n  0x20\n    /* \"#utility.yul\":6422:6432   */\n  dup6\n    /* \"#utility.yul\":6419:6437   */\n  lt\n    /* \"#utility.yul\":6416:6465   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6455:6463   */\n  dup2\n    /* \"#utility.yul\":6440:6463   */\n  swap1\n  pop\n    /* \"#utility.yul\":6416:6465   */\ntag_120:\n    /* \"#utility.yul\":6478:6558   */\n  tag_121\n    /* \"#utility.yul\":6534:6556   */\n  tag_122\n    /* \"#utility.yul\":6552:6555   */\n  dup6\n    /* \"#utility.yul\":6534:6556   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6524:6532   */\n  dup4\n    /* \"#utility.yul\":6520:6557   */\n  add\n    /* \"#utility.yul\":6507:6518   */\n  dup3\n    /* \"#utility.yul\":6478:6558   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6137:6568   */\n  pop\n  pop\n    /* \"#utility.yul\":6122:6568   */\ntag_117:\n    /* \"#utility.yul\":6032:6575   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6581:6698   */\ntag_39:\n    /* \"#utility.yul\":6635:6643   */\n  0x00\n    /* \"#utility.yul\":6685:6690   */\n  dup3\n    /* \"#utility.yul\":6679:6683   */\n  dup3\n    /* \"#utility.yul\":6675:6691   */\n  shr\n    /* \"#utility.yul\":6654:6691   */\n  swap1\n  pop\n    /* \"#utility.yul\":6581:6698   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6704:6873   */\ntag_40:\n    /* \"#utility.yul\":6748:6754   */\n  0x00\n    /* \"#utility.yul\":6781:6832   */\n  tag_125\n    /* \"#utility.yul\":6829:6830   */\n  0x00\n    /* \"#utility.yul\":6825:6831   */\n  not\n    /* \"#utility.yul\":6817:6822   */\n  dup5\n    /* \"#utility.yul\":6814:6815   */\n  0x08\n    /* \"#utility.yul\":6810:6823   */\n  mul\n    /* \"#utility.yul\":6781:6832   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6777:6833   */\n  not\n    /* \"#utility.yul\":6862:6866   */\n  dup1\n    /* \"#utility.yul\":6856:6860   */\n  dup4\n    /* \"#utility.yul\":6852:6867   */\n  and\n    /* \"#utility.yul\":6842:6867   */\n  swap2\n  pop\n    /* \"#utility.yul\":6755:6873   */\n  pop\n    /* \"#utility.yul\":6704:6873   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6878:7173   */\ntag_41:\n    /* \"#utility.yul\":6954:6958   */\n  0x00\n    /* \"#utility.yul\":7100:7129   */\n  tag_127\n    /* \"#utility.yul\":7125:7128   */\n  dup4\n    /* \"#utility.yul\":7119:7123   */\n  dup4\n    /* \"#utility.yul\":7100:7129   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7092:7129   */\n  swap2\n  pop\n    /* \"#utility.yul\":7162:7165   */\n  dup3\n    /* \"#utility.yul\":7159:7160   */\n  0x02\n    /* \"#utility.yul\":7155:7166   */\n  mul\n    /* \"#utility.yul\":7149:7153   */\n  dup3\n    /* \"#utility.yul\":7146:7167   */\n  or\n    /* \"#utility.yul\":7138:7167   */\n  swap1\n  pop\n    /* \"#utility.yul\":6878:7173   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7178:8573   */\ntag_7:\n    /* \"#utility.yul\":7295:7332   */\n  tag_129\n    /* \"#utility.yul\":7328:7331   */\n  dup3\n    /* \"#utility.yul\":7295:7332   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7397:7415   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7389:7395   */\n  dup2\n    /* \"#utility.yul\":7386:7416   */\n  gt\n    /* \"#utility.yul\":7383:7439   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7419:7437   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7383:7439   */\ntag_130:\n    /* \"#utility.yul\":7463:7501   */\n  tag_132\n    /* \"#utility.yul\":7495:7499   */\n  dup3\n    /* \"#utility.yul\":7489:7500   */\n  sload\n    /* \"#utility.yul\":7463:7501   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7548:7615   */\n  tag_133\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7600:7606   */\n  dup3\n    /* \"#utility.yul\":7594:7598   */\n  dup6\n    /* \"#utility.yul\":7548:7615   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7642:7643   */\n  0x00\n    /* \"#utility.yul\":7666:7670   */\n  0x20\n    /* \"#utility.yul\":7653:7670   */\n  swap1\n  pop\n    /* \"#utility.yul\":7698:7700   */\n  0x1f\n    /* \"#utility.yul\":7690:7696   */\n  dup4\n    /* \"#utility.yul\":7687:7701   */\n  gt\n    /* \"#utility.yul\":7715:7716   */\n  0x01\n    /* \"#utility.yul\":7710:8328   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8372:8373   */\n  0x00\n    /* \"#utility.yul\":8389:8395   */\n  dup5\n    /* \"#utility.yul\":8386:8463   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8438:8447   */\n  dup3\n    /* \"#utility.yul\":8433:8436   */\n  dup8\n    /* \"#utility.yul\":8429:8448   */\n  add\n    /* \"#utility.yul\":8423:8449   */\n  mload\n    /* \"#utility.yul\":8414:8449   */\n  swap1\n  pop\n    /* \"#utility.yul\":8386:8463   */\ntag_136:\n    /* \"#utility.yul\":8489:8556   */\n  tag_137\n    /* \"#utility.yul\":8549:8555   */\n  dup6\n    /* \"#utility.yul\":8542:8547   */\n  dup3\n    /* \"#utility.yul\":8489:8556   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8483:8487   */\n  dup7\n    /* \"#utility.yul\":8476:8557   */\n  sstore\n    /* \"#utility.yul\":8345:8567   */\n  pop\n    /* \"#utility.yul\":7680:8567   */\n  jump(tag_134)\n    /* \"#utility.yul\":7710:8328   */\ntag_135:\n    /* \"#utility.yul\":7762:7766   */\n  0x1f\n    /* \"#utility.yul\":7758:7767   */\n  not\n    /* \"#utility.yul\":7750:7756   */\n  dup5\n    /* \"#utility.yul\":7746:7768   */\n  and\n    /* \"#utility.yul\":7796:7833   */\n  tag_138\n    /* \"#utility.yul\":7828:7832   */\n  dup7\n    /* \"#utility.yul\":7796:7833   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7855:7856   */\n  0x00\n    /* \"#utility.yul\":7869:8077   */\ntag_139:\n    /* \"#utility.yul\":7883:7890   */\n  dup3\n    /* \"#utility.yul\":7880:7881   */\n  dup2\n    /* \"#utility.yul\":7877:7891   */\n  lt\n    /* \"#utility.yul\":7869:8077   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7962:7971   */\n  dup5\n    /* \"#utility.yul\":7957:7960   */\n  dup10\n    /* \"#utility.yul\":7953:7972   */\n  add\n    /* \"#utility.yul\":7947:7973   */\n  mload\n    /* \"#utility.yul\":7939:7945   */\n  dup3\n    /* \"#utility.yul\":7932:7974   */\n  sstore\n    /* \"#utility.yul\":8013:8014   */\n  0x01\n    /* \"#utility.yul\":8005:8011   */\n  dup3\n    /* \"#utility.yul\":8001:8015   */\n  add\n    /* \"#utility.yul\":7991:8015   */\n  swap2\n  pop\n    /* \"#utility.yul\":8060:8062   */\n  0x20\n    /* \"#utility.yul\":8049:8058   */\n  dup6\n    /* \"#utility.yul\":8045:8063   */\n  add\n    /* \"#utility.yul\":8032:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7906:7910   */\n  0x20\n    /* \"#utility.yul\":7903:7904   */\n  dup2\n    /* \"#utility.yul\":7899:7911   */\n  add\n    /* \"#utility.yul\":7894:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7869:8077   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8105:8111   */\n  dup7\n    /* \"#utility.yul\":8096:8103   */\n  dup4\n    /* \"#utility.yul\":8093:8112   */\n  lt\n    /* \"#utility.yul\":8090:8269   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8163:8172   */\n  dup5\n    /* \"#utility.yul\":8158:8161   */\n  dup10\n    /* \"#utility.yul\":8154:8173   */\n  add\n    /* \"#utility.yul\":8148:8174   */\n  mload\n    /* \"#utility.yul\":8206:8254   */\n  tag_143\n    /* \"#utility.yul\":8248:8252   */\n  0x1f\n    /* \"#utility.yul\":8240:8246   */\n  dup10\n    /* \"#utility.yul\":8236:8253   */\n  and\n    /* \"#utility.yul\":8225:8234   */\n  dup3\n    /* \"#utility.yul\":8206:8254   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8198:8204   */\n  dup4\n    /* \"#utility.yul\":8191:8255   */\n  sstore\n    /* \"#utility.yul\":8113:8269   */\n  pop\n    /* \"#utility.yul\":8090:8269   */\ntag_142:\n    /* \"#utility.yul\":8315:8316   */\n  0x01\n    /* \"#utility.yul\":8311:8312   */\n  0x02\n    /* \"#utility.yul\":8303:8309   */\n  dup9\n    /* \"#utility.yul\":8299:8313   */\n  mul\n    /* \"#utility.yul\":8295:8317   */\n  add\n    /* \"#utility.yul\":8289:8293   */\n  dup9\n    /* \"#utility.yul\":8282:8318   */\n  sstore\n    /* \"#utility.yul\":7717:8328   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7680:8567   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7270:8573   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7178:8573   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/34_ERC721.sol\":1333:10527  contract ERC721 is IERC721, IERC721Metadata{... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/34_ERC721.sol\":1333:10527  contract ERC721 is IERC721, IERC721Metadata{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e6ec247\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x4e6ec247\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x16279055\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/34_ERC721.sol\":2307:2624  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":1552:1579  string public override name */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":4123:4319  function getApproved(uint tokenId) external view override returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":4793:5088  function approve(address to, uint tokenId) external override {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/34_ERC721.sol\":2630:2815  function isContract(address _addr) public  view returns (bool){... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":6206:6535  function transferFrom(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/34_ERC721.sol\":7800:7970  function safeTransferFrom(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/34_ERC721.sol\":8414:8711  function _mint(address to, uint tokenId)  public {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/34_ERC721.sol\":3165:3343  function ownerOf(uint tokenId) public view override returns (address owner) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":2908:3082  function balanceOf(address owner) external view override returns (uint) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":1604:1633  string public override symbol */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":3814:4021  function setApprovalForAll(address operator, bool approved) external override {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/34_ERC721.sol\":7388:7758  function safeTransferFrom(... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/34_ERC721.sol\":9910:10221  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":3492:3684  function isApprovedForAll(address owner, address operator)... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/34_ERC721.sol\":2307:2624  function supportsInterface(bytes4 interfaceId)... */\n    tag_24:\n        /* \"contracts/34_ERC721.sol\":2418:2422  bool */\n      0x00\n        /* \"contracts/34_ERC721.sol\":2472:2497  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/34_ERC721.sol\":2457:2497  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/34_ERC721.sol\":2457:2468  interfaceId */\n      dup3\n        /* \"contracts/34_ERC721.sol\":2457:2497  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":2457:2553  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/34_ERC721.sol\":2528:2553  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/34_ERC721.sol\":2513:2553  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/34_ERC721.sol\":2513:2524  interfaceId */\n      dup3\n        /* \"contracts/34_ERC721.sol\":2513:2553  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":2457:2553  interfaceId == type(IERC721).interfaceId ||... */\n    tag_86:\n        /* \"contracts/34_ERC721.sol\":2457:2617  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"contracts/34_ERC721.sol\":2584:2617  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/34_ERC721.sol\":2569:2617  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/34_ERC721.sol\":2569:2580  interfaceId */\n      dup3\n        /* \"contracts/34_ERC721.sol\":2569:2617  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":2457:2617  interfaceId == type(IERC721).interfaceId ||... */\n    tag_87:\n        /* \"contracts/34_ERC721.sol\":2438:2617  return... */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":2307:2624  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":1552:1579  string public override name */\n    tag_28:\n      0x00\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":4123:4319  function getApproved(uint tokenId) external view override returns (address) {... */\n    tag_34:\n        /* \"contracts/34_ERC721.sol\":4190:4197  address */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4245:4246  0 */\n      dup1\n        /* \"contracts/34_ERC721.sol\":4217:4247  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4217:4224  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":4217:4233  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4225:4232  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":4217:4233  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4217:4247  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":4209:4271  require(_owners[tokenId] != address(0), \"token doesn't exist\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/34_ERC721.sol\":4288:4303  _tokenApprovals */\n      0x04\n        /* \"contracts/34_ERC721.sol\":4288:4312  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4304:4311  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":4288:4312  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4281:4312  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":4123:4319  function getApproved(uint tokenId) external view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":4793:5088  function approve(address to, uint tokenId) external override {... */\n    tag_40:\n        /* \"contracts/34_ERC721.sol\":4864:4877  address owner */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4880:4887  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":4880:4896  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4888:4895  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":4880:4896  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4864:4896  address owner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":4941:4946  owner */\n      dup1\n        /* \"contracts/34_ERC721.sol\":4927:4946  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4927:4937  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":4927:4946  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":4927:4987  msg.sender == owner || _operatorApprovals[owner][msg.sender] */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"contracts/34_ERC721.sol\":4950:4968  _operatorApprovals */\n      0x05\n        /* \"contracts/34_ERC721.sol\":4950:4975  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4969:4974  owner */\n      dup3\n        /* \"contracts/34_ERC721.sol\":4950:4975  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/34_ERC721.sol\":4950:4987  _operatorApprovals[owner][msg.sender] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4976:4986  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":4950:4987  _operatorApprovals[owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/34_ERC721.sol\":4927:4987  msg.sender == owner || _operatorApprovals[owner][msg.sender] */\n    tag_99:\n        /* \"contracts/34_ERC721.sol\":4906:5043  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/34_ERC721.sol\":5053:5081  _approve(owner, to, tokenId) */\n      tag_103\n        /* \"contracts/34_ERC721.sol\":5062:5067  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":5069:5071  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":5073:5080  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":5053:5061  _approve */\n      tag_104\n        /* \"contracts/34_ERC721.sol\":5053:5081  _approve(owner, to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/34_ERC721.sol\":4854:5088  {... */\n      pop\n        /* \"contracts/34_ERC721.sol\":4793:5088  function approve(address to, uint tokenId) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":2630:2815  function isContract(address _addr) public  view returns (bool){... */\n    tag_44:\n        /* \"contracts/34_ERC721.sol\":2687:2691  bool */\n      0x00\n        /* \"contracts/34_ERC721.sol\":2702:2713  uint32 size */\n      dup1\n        /* \"contracts/34_ERC721.sol\":2766:2771  _addr */\n      dup3\n        /* \"contracts/34_ERC721.sol\":2754:2772  extcodesize(_addr) */\n      extcodesize\n        /* \"contracts/34_ERC721.sol\":2746:2772  size := extcodesize(_addr) */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":2806:2807  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":2799:2803  size */\n      dup2\n        /* \"contracts/34_ERC721.sol\":2799:2807  size > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/34_ERC721.sol\":2791:2808  return (size > 0) */\n      swap2\n      pop\n      pop\n        /* \"contracts/34_ERC721.sol\":2630:2815  function isContract(address _addr) public  view returns (bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":6206:6535  function transferFrom(... */\n    tag_49:\n        /* \"contracts/34_ERC721.sol\":6326:6339  address owner */\n      0x00\n        /* \"contracts/34_ERC721.sol\":6342:6358  ownerOf(tokenId) */\n      tag_107\n        /* \"contracts/34_ERC721.sol\":6350:6357  tokenId */\n      dup3\n        /* \"contracts/34_ERC721.sol\":6342:6349  ownerOf */\n      tag_58\n        /* \"contracts/34_ERC721.sol\":6342:6358  ownerOf(tokenId) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/34_ERC721.sol\":6326:6358  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":6389:6435  _isApprovedOrOwner(owner, msg.sender, tokenId) */\n      tag_108\n        /* \"contracts/34_ERC721.sol\":6408:6413  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":6415:6425  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":6427:6434  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":6389:6407  _isApprovedOrOwner */\n      tag_109\n        /* \"contracts/34_ERC721.sol\":6389:6435  _isApprovedOrOwner(owner, msg.sender, tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/34_ERC721.sol\":6368:6483  require(... */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/34_ERC721.sol\":6493:6528  _transfer(owner, from, to, tokenId) */\n      tag_113\n        /* \"contracts/34_ERC721.sol\":6503:6508  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":6510:6514  from */\n      dup6\n        /* \"contracts/34_ERC721.sol\":6516:6518  to */\n      dup6\n        /* \"contracts/34_ERC721.sol\":6520:6527  tokenId */\n      dup6\n        /* \"contracts/34_ERC721.sol\":6493:6502  _transfer */\n      tag_114\n        /* \"contracts/34_ERC721.sol\":6493:6528  _transfer(owner, from, to, tokenId) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/34_ERC721.sol\":6316:6535  {... */\n      pop\n        /* \"contracts/34_ERC721.sol\":6206:6535  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":7800:7970  function safeTransferFrom(... */\n    tag_52:\n        /* \"contracts/34_ERC721.sol\":7924:7963  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_116\n        /* \"contracts/34_ERC721.sol\":7941:7945  from */\n      dup4\n        /* \"contracts/34_ERC721.sol\":7947:7949  to */\n      dup4\n        /* \"contracts/34_ERC721.sol\":7951:7958  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":7924:7963  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/34_ERC721.sol\":7924:7940  safeTransferFrom */\n      tag_75\n        /* \"contracts/34_ERC721.sol\":7924:7963  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_116:\n        /* \"contracts/34_ERC721.sol\":7800:7970  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":8414:8711  function _mint(address to, uint tokenId)  public {... */\n    tag_55:\n        /* \"contracts/34_ERC721.sol\":8495:8496  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8481:8497  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":8481:8483  to */\n      dup3\n        /* \"contracts/34_ERC721.sol\":8481:8497  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":8473:8522  require(to != address(0), \"mint to zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/34_ERC721.sol\":8568:8569  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8540:8570  _owners[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":8540:8547  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":8540:8556  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8548:8555  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":8540:8556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":8540:8570  _owners[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":8532:8595  require(_owners[tokenId] == address(0), \"token already minted\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/34_ERC721.sol\":8623:8624  1 */\n      0x01\n        /* \"contracts/34_ERC721.sol\":8606:8615  _balances */\n      0x03\n        /* \"contracts/34_ERC721.sol\":8606:8619  _balances[to] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8616:8618  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":8606:8619  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":8606:8624  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":8653:8655  to */\n      dup2\n        /* \"contracts/34_ERC721.sol\":8634:8641  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":8634:8650  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8642:8649  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":8634:8650  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":8634:8655  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":8696:8703  tokenId */\n      dup1\n        /* \"contracts/34_ERC721.sol\":8692:8694  to */\n      dup3\n        /* \"contracts/34_ERC721.sol\":8671:8704  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":8688:8689  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":8671:8704  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/34_ERC721.sol\":8414:8711  function _mint(address to, uint tokenId)  public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":3165:3343  function ownerOf(uint tokenId) public view override returns (address owner) {... */\n    tag_58:\n        /* \"contracts/34_ERC721.sol\":3226:3239  address owner */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3259:3266  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":3259:3275  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3267:3274  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":3259:3275  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":3251:3275  owner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":3310:3311  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3293:3312  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":3293:3298  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":3293:3312  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":3285:3336  require(owner != address(0), \"token doesn't exist\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_97\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/34_ERC721.sol\":3165:3343  function ownerOf(uint tokenId) public view override returns (address owner) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":2908:3082  function balanceOf(address owner) external view override returns (uint) {... */\n    tag_62:\n        /* \"contracts/34_ERC721.sol\":2974:2978  uint */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3015:3016  0 */\n      dup1\n        /* \"contracts/34_ERC721.sol\":2998:3017  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":2998:3003  owner */\n      dup3\n        /* \"contracts/34_ERC721.sol\":2998:3017  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":2990:3042  require(owner != address(0), \"owner = zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/34_ERC721.sol\":3059:3068  _balances */\n      0x03\n        /* \"contracts/34_ERC721.sol\":3059:3075  _balances[owner] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3069:3074  owner */\n      dup4\n        /* \"contracts/34_ERC721.sol\":3059:3075  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/34_ERC721.sol\":3052:3075  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":2908:3082  function balanceOf(address owner) external view override returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":1604:1633  string public override symbol */\n    tag_66:\n      0x01\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_89\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":3814:4021  function setApprovalForAll(address operator, bool approved) external override {... */\n    tag_71:\n        /* \"contracts/34_ERC721.sol\":3945:3953  approved */\n      dup1\n        /* \"contracts/34_ERC721.sol\":3902:3920  _operatorApprovals */\n      0x05\n        /* \"contracts/34_ERC721.sol\":3902:3932  _operatorApprovals[msg.sender] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3921:3931  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":3902:3932  _operatorApprovals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/34_ERC721.sol\":3902:3942  _operatorApprovals[msg.sender][operator] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3933:3941  operator */\n      dup5\n        /* \"contracts/34_ERC721.sol\":3902:3942  _operatorApprovals[msg.sender][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":3902:3953  _operatorApprovals[msg.sender][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":3995:4003  operator */\n      dup2\n        /* \"contracts/34_ERC721.sol\":3968:4014  ApprovalForAll(msg.sender, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":3983:3993  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":3968:4014  ApprovalForAll(msg.sender, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/34_ERC721.sol\":4005:4013  approved */\n      dup4\n        /* \"contracts/34_ERC721.sol\":3968:4014  ApprovalForAll(msg.sender, operator, approved) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/34_ERC721.sol\":3814:4021  function setApprovalForAll(address operator, bool approved) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":7388:7758  function safeTransferFrom(... */\n    tag_75:\n        /* \"contracts/34_ERC721.sol\":7538:7551  address owner */\n      0x00\n        /* \"contracts/34_ERC721.sol\":7554:7570  ownerOf(tokenId) */\n      tag_141\n        /* \"contracts/34_ERC721.sol\":7562:7569  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":7554:7561  ownerOf */\n      tag_58\n        /* \"contracts/34_ERC721.sol\":7554:7570  ownerOf(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/34_ERC721.sol\":7538:7570  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":7601:7647  _isApprovedOrOwner(owner, msg.sender, tokenId) */\n      tag_142\n        /* \"contracts/34_ERC721.sol\":7620:7625  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":7627:7637  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":7639:7646  tokenId */\n      dup6\n        /* \"contracts/34_ERC721.sol\":7601:7619  _isApprovedOrOwner */\n      tag_109\n        /* \"contracts/34_ERC721.sol\":7601:7647  _isApprovedOrOwner(owner, msg.sender, tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/34_ERC721.sol\":7580:7695  require(... */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_112\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/34_ERC721.sol\":7705:7751  _safeTransfer(owner, from, to, tokenId, _data) */\n      tag_145\n        /* \"contracts/34_ERC721.sol\":7719:7724  owner */\n      dup2\n        /* \"contracts/34_ERC721.sol\":7726:7730  from */\n      dup7\n        /* \"contracts/34_ERC721.sol\":7732:7734  to */\n      dup7\n        /* \"contracts/34_ERC721.sol\":7736:7743  tokenId */\n      dup7\n        /* \"contracts/34_ERC721.sol\":7745:7750  _data */\n      dup7\n        /* \"contracts/34_ERC721.sol\":7705:7718  _safeTransfer */\n      tag_146\n        /* \"contracts/34_ERC721.sol\":7705:7751  _safeTransfer(owner, from, to, tokenId, _data) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/34_ERC721.sol\":7528:7758  {... */\n      pop\n        /* \"contracts/34_ERC721.sol\":7388:7758  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":9910:10221  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_78:\n        /* \"contracts/34_ERC721.sol\":9983:9996  string memory */\n      0x60\n        /* \"contracts/34_ERC721.sol\":10044:10045  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":10016:10046  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":10016:10023  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":10016:10032  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":10024:10031  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":10016:10032  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":10016:10046  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":10008:10066  require(_owners[tokenId] != address(0), \"Token Not Exist\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/34_ERC721.sol\":10077:10098  string memory baseURI */\n      0x00\n        /* \"contracts/34_ERC721.sol\":10101:10111  _baseURI() */\n      tag_151\n        /* \"contracts/34_ERC721.sol\":10101:10109  _baseURI */\n      tag_152\n        /* \"contracts/34_ERC721.sol\":10101:10111  _baseURI() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/34_ERC721.sol\":10077:10111  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":10152:10153  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":10134:10141  baseURI */\n      dup2\n        /* \"contracts/34_ERC721.sol\":10128:10149  bytes(baseURI).length */\n      mload\n        /* \"contracts/34_ERC721.sol\":10128:10153  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/34_ERC721.sol\":10128:10214  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_153\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_154)\n    tag_153:\n        /* \"contracts/34_ERC721.sol\":10180:10187  baseURI */\n      dup1\n        /* \"contracts/34_ERC721.sol\":10189:10207  tokenId.toString() */\n      tag_155\n        /* \"contracts/34_ERC721.sol\":10189:10196  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":10189:10205  tokenId.toString */\n      tag_156\n        /* \"contracts/34_ERC721.sol\":10189:10207  tokenId.toString() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/34_ERC721.sol\":10163:10208  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/34_ERC721.sol\":10128:10214  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_154:\n        /* \"contracts/34_ERC721.sol\":10121:10214  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/34_ERC721.sol\":9910:10221  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":3492:3684  function isApprovedForAll(address owner, address operator)... */\n    tag_83:\n        /* \"contracts/34_ERC721.sol\":3615:3619  bool */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3642:3660  _operatorApprovals */\n      0x05\n        /* \"contracts/34_ERC721.sol\":3642:3667  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3661:3666  owner */\n      dup5\n        /* \"contracts/34_ERC721.sol\":3642:3667  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/34_ERC721.sol\":3642:3677  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":3668:3676  operator */\n      dup4\n        /* \"contracts/34_ERC721.sol\":3642:3677  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/34_ERC721.sol\":3635:3677  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":3492:3684  function isApprovedForAll(address owner, address operator)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":4448:4634  function _approve(... */\n    tag_104:\n        /* \"contracts/34_ERC721.sol\":4582:4584  to */\n      dup2\n        /* \"contracts/34_ERC721.sol\":4555:4570  _tokenApprovals */\n      0x04\n        /* \"contracts/34_ERC721.sol\":4555:4579  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":4571:4578  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":4555:4579  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":4555:4584  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":4619:4626  tokenId */\n      dup1\n        /* \"contracts/34_ERC721.sol\":4615:4617  to */\n      dup3\n        /* \"contracts/34_ERC721.sol\":4599:4627  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":4608:4613  owner */\n      dup5\n        /* \"contracts/34_ERC721.sol\":4599:4627  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/34_ERC721.sol\":4448:4634  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":5185:5460  function _isApprovedOrOwner(... */\n    tag_109:\n        /* \"contracts/34_ERC721.sol\":5311:5315  bool */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5346:5351  owner */\n      dup4\n        /* \"contracts/34_ERC721.sol\":5335:5351  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":5335:5342  spender */\n      dup4\n        /* \"contracts/34_ERC721.sol\":5335:5351  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":5335:5402  spender == owner ||... */\n      dup1\n      tag_162\n      jumpi\n      pop\n        /* \"contracts/34_ERC721.sol\":5395:5402  spender */\n      dup3\n        /* \"contracts/34_ERC721.sol\":5367:5402  _tokenApprovals[tokenId] == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":5367:5382  _tokenApprovals */\n      0x04\n        /* \"contracts/34_ERC721.sol\":5367:5391  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5383:5390  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":5367:5391  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":5367:5402  _tokenApprovals[tokenId] == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":5335:5402  spender == owner ||... */\n    tag_162:\n        /* \"contracts/34_ERC721.sol\":5335:5452  spender == owner ||... */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"contracts/34_ERC721.sol\":5418:5436  _operatorApprovals */\n      0x05\n        /* \"contracts/34_ERC721.sol\":5418:5443  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5437:5442  owner */\n      dup6\n        /* \"contracts/34_ERC721.sol\":5418:5443  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/34_ERC721.sol\":5418:5452  _operatorApprovals[owner][spender] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5444:5451  spender */\n      dup5\n        /* \"contracts/34_ERC721.sol\":5418:5452  _operatorApprovals[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/34_ERC721.sol\":5335:5452  spender == owner ||... */\n    tag_163:\n        /* \"contracts/34_ERC721.sol\":5327:5453  return (spender == owner ||... */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":5185:5460  function _isApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":5681:6100  function _transfer(... */\n    tag_114:\n        /* \"contracts/34_ERC721.sol\":5827:5832  owner */\n      dup4\n        /* \"contracts/34_ERC721.sol\":5819:5832  from == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":5819:5823  from */\n      dup4\n        /* \"contracts/34_ERC721.sol\":5819:5832  from == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":5811:5846  require(from == owner, \"not owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/34_ERC721.sol\":5878:5879  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5864:5880  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":5864:5866  to */\n      dup3\n        /* \"contracts/34_ERC721.sol\":5864:5880  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/34_ERC721.sol\":5856:5913  require(to != address(0), \"transfer to the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/34_ERC721.sol\":5924:5960  _approve(owner, address(0), tokenId) */\n      tag_171\n        /* \"contracts/34_ERC721.sol\":5933:5938  owner */\n      dup5\n        /* \"contracts/34_ERC721.sol\":5948:5949  0 */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5952:5959  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":5924:5932  _approve */\n      tag_104\n        /* \"contracts/34_ERC721.sol\":5924:5960  _approve(owner, address(0), tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/34_ERC721.sol\":5990:5991  1 */\n      0x01\n        /* \"contracts/34_ERC721.sol\":5971:5980  _balances */\n      0x03\n        /* \"contracts/34_ERC721.sol\":5971:5986  _balances[from] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":5981:5985  from */\n      dup6\n        /* \"contracts/34_ERC721.sol\":5971:5986  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":5971:5991  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":6018:6019  1 */\n      0x01\n        /* \"contracts/34_ERC721.sol\":6001:6010  _balances */\n      0x03\n        /* \"contracts/34_ERC721.sol\":6001:6014  _balances[to] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":6011:6013  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":6001:6014  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":6001:6019  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_174:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":6048:6050  to */\n      dup2\n        /* \"contracts/34_ERC721.sol\":6029:6036  _owners */\n      0x02\n        /* \"contracts/34_ERC721.sol\":6029:6045  _owners[tokenId] */\n      0x00\n        /* \"contracts/34_ERC721.sol\":6037:6044  tokenId */\n      dup4\n        /* \"contracts/34_ERC721.sol\":6029:6045  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/34_ERC721.sol\":6029:6050  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/34_ERC721.sol\":6085:6092  tokenId */\n      dup1\n        /* \"contracts/34_ERC721.sol\":6081:6083  to */\n      dup3\n        /* \"contracts/34_ERC721.sol\":6066:6093  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/34_ERC721.sol\":6075:6079  from */\n      dup5\n        /* \"contracts/34_ERC721.sol\":6066:6093  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/34_ERC721.sol\":5681:6100  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":6984:7277  function _safeTransfer(... */\n    tag_146:\n        /* \"contracts/34_ERC721.sol\":7146:7181  _transfer(owner, from, to, tokenId) */\n      tag_176\n        /* \"contracts/34_ERC721.sol\":7156:7161  owner */\n      dup6\n        /* \"contracts/34_ERC721.sol\":7163:7167  from */\n      dup6\n        /* \"contracts/34_ERC721.sol\":7169:7171  to */\n      dup6\n        /* \"contracts/34_ERC721.sol\":7173:7180  tokenId */\n      dup6\n        /* \"contracts/34_ERC721.sol\":7146:7155  _transfer */\n      tag_114\n        /* \"contracts/34_ERC721.sol\":7146:7181  _transfer(owner, from, to, tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/34_ERC721.sol\":7199:7247  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_177\n        /* \"contracts/34_ERC721.sol\":7222:7226  from */\n      dup5\n        /* \"contracts/34_ERC721.sol\":7228:7230  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":7232:7239  tokenId */\n      dup5\n        /* \"contracts/34_ERC721.sol\":7241:7246  _data */\n      dup5\n        /* \"contracts/34_ERC721.sol\":7199:7221  _checkOnERC721Received */\n      tag_178\n        /* \"contracts/34_ERC721.sol\":7199:7247  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/34_ERC721.sol\":7191:7270  require(_checkOnERC721Received(from, to, tokenId, _data), \"not ERC721Receiver\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/34_ERC721.sol\":6984:7277  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":10433:10525  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_152:\n        /* \"contracts/34_ERC721.sol\":10484:10497  string memory */\n      0x60\n        /* \"contracts/34_ERC721.sol\":10509:10518  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":10433:10525  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_185\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_186\n      jumpi\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n    tag_186:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_189:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_192\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n    tag_192:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/34_ERC721.sol\":9330:9822  function _checkOnERC721Received(... */\n    tag_178:\n        /* \"contracts/34_ERC721.sol\":9477:9481  bool */\n      0x00\n        /* \"contracts/34_ERC721.sol\":9497:9511  isContract(to) */\n      tag_197\n        /* \"contracts/34_ERC721.sol\":9508:9510  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":9497:9507  isContract */\n      tag_44\n        /* \"contracts/34_ERC721.sol\":9497:9511  isContract(to) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/34_ERC721.sol\":9493:9816  if (isContract(to)) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/34_ERC721.sol\":9722:9763  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/34_ERC721.sol\":9550:9763  IERC721Receiver(to).onERC721Received(... */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/34_ERC721.sol\":9566:9568  to */\n      dup5\n        /* \"contracts/34_ERC721.sol\":9550:9586  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/34_ERC721.sol\":9608:9618  msg.sender */\n      caller\n        /* \"contracts/34_ERC721.sol\":9640:9644  from */\n      dup9\n        /* \"contracts/34_ERC721.sol\":9666:9673  tokenId */\n      dup8\n        /* \"contracts/34_ERC721.sol\":9695:9700  _data */\n      dup8\n        /* \"contracts/34_ERC721.sol\":9550:9718  IERC721Receiver(to).onERC721Received(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"contracts/34_ERC721.sol\":9550:9763  IERC721Receiver(to).onERC721Received(... */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/34_ERC721.sol\":9527:9763  return... */\n      swap1\n      pop\n      jump(tag_196)\n        /* \"contracts/34_ERC721.sol\":9493:9816  if (isContract(to)) {... */\n    tag_198:\n        /* \"contracts/34_ERC721.sol\":9801:9805  true */\n      0x01\n        /* \"contracts/34_ERC721.sol\":9794:9805  return true */\n      swap1\n      pop\n        /* \"contracts/34_ERC721.sol\":9330:9822  function _checkOnERC721Received(... */\n    tag_196:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_208\n      jumpi\n      tag_209\n      tag_194\n      jump\t// in\n    tag_209:\n    tag_208:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_211\n      jumpi\n      tag_212\n      tag_194\n      jump\t// in\n    tag_212:\n    tag_211:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_214\n      jumpi\n      tag_215\n      tag_194\n      jump\t// in\n    tag_215:\n    tag_214:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_217\n      jumpi\n      tag_218\n      tag_194\n      jump\t// in\n    tag_218:\n    tag_217:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_220\n      jumpi\n      tag_221\n      tag_194\n      jump\t// in\n    tag_221:\n    tag_220:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_223\n      jumpi\n      tag_224\n      tag_194\n      jump\t// in\n    tag_224:\n    tag_223:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_226:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_227:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_228:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_229:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_230:\n        /* \"#utility.yul\":561:584   */\n      tag_292\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_229\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_293:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_231:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_295\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_230\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_298\n      tag_227\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":833:952   */\n    tag_297:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_299\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_231\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_232:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_233:\n        /* \"#utility.yul\":1268:1289   */\n      tag_302\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_232\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_304\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_233\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_234:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_235:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2046   */\n    tag_236:\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1890:2003   */\n    tag_308:\n        /* \"#utility.yul\":1904:1910   */\n      dup4\n        /* \"#utility.yul\":1901:1902   */\n      dup2\n        /* \"#utility.yul\":1898:1911   */\n      lt\n        /* \"#utility.yul\":1890:2003   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1989:1990   */\n      dup1\n        /* \"#utility.yul\":1984:1987   */\n      dup3\n        /* \"#utility.yul\":1980:1991   */\n      add\n        /* \"#utility.yul\":1974:1992   */\n      mload\n        /* \"#utility.yul\":1970:1971   */\n      dup2\n        /* \"#utility.yul\":1965:1968   */\n      dup5\n        /* \"#utility.yul\":1961:1972   */\n      add\n        /* \"#utility.yul\":1954:1993   */\n      mstore\n        /* \"#utility.yul\":1926:1928   */\n      0x20\n        /* \"#utility.yul\":1923:1924   */\n      dup2\n        /* \"#utility.yul\":1919:1929   */\n      add\n        /* \"#utility.yul\":1914:1929   */\n      swap1\n      pop\n        /* \"#utility.yul\":1890:2003   */\n      jump(tag_308)\n    tag_310:\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2028:2034   */\n      dup5\n        /* \"#utility.yul\":2023:2026   */\n      dup5\n        /* \"#utility.yul\":2019:2035   */\n      add\n        /* \"#utility.yul\":2012:2039   */\n      mstore\n        /* \"#utility.yul\":1860:2046   */\n      pop\n        /* \"#utility.yul\":1798:2046   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2154   */\n    tag_237:\n        /* \"#utility.yul\":2093:2099   */\n      0x00\n        /* \"#utility.yul\":2144:2146   */\n      0x1f\n        /* \"#utility.yul\":2140:2147   */\n      not\n        /* \"#utility.yul\":2135:2137   */\n      0x1f\n        /* \"#utility.yul\":2128:2133   */\n      dup4\n        /* \"#utility.yul\":2124:2138   */\n      add\n        /* \"#utility.yul\":2120:2148   */\n      and\n        /* \"#utility.yul\":2110:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2052:2154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2160:2537   */\n    tag_238:\n        /* \"#utility.yul\":2248:2251   */\n      0x00\n        /* \"#utility.yul\":2276:2315   */\n      tag_313\n        /* \"#utility.yul\":2309:2314   */\n      dup3\n        /* \"#utility.yul\":2276:2315   */\n      tag_234\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2331:2402   */\n      tag_314\n        /* \"#utility.yul\":2395:2401   */\n      dup2\n        /* \"#utility.yul\":2390:2393   */\n      dup6\n        /* \"#utility.yul\":2331:2402   */\n      tag_235\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2324:2402   */\n      swap4\n      pop\n        /* \"#utility.yul\":2411:2476   */\n      tag_315\n        /* \"#utility.yul\":2469:2475   */\n      dup2\n        /* \"#utility.yul\":2464:2467   */\n      dup6\n        /* \"#utility.yul\":2457:2461   */\n      0x20\n        /* \"#utility.yul\":2450:2455   */\n      dup7\n        /* \"#utility.yul\":2446:2462   */\n      add\n        /* \"#utility.yul\":2411:2476   */\n      tag_236\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2501:2530   */\n      tag_316\n        /* \"#utility.yul\":2523:2529   */\n      dup2\n        /* \"#utility.yul\":2501:2530   */\n      tag_237\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2496:2499   */\n      dup5\n        /* \"#utility.yul\":2492:2531   */\n      add\n        /* \"#utility.yul\":2485:2531   */\n      swap2\n      pop\n        /* \"#utility.yul\":2252:2537   */\n      pop\n        /* \"#utility.yul\":2160:2537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2856   */\n    tag_30:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2743:2752   */\n      dup2\n        /* \"#utility.yul\":2737:2741   */\n      dup2\n        /* \"#utility.yul\":2733:2753   */\n      sub\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2718:2727   */\n      dup4\n        /* \"#utility.yul\":2714:2731   */\n      add\n        /* \"#utility.yul\":2707:2754   */\n      mstore\n        /* \"#utility.yul\":2771:2849   */\n      tag_318\n        /* \"#utility.yul\":2844:2848   */\n      dup2\n        /* \"#utility.yul\":2835:2841   */\n      dup5\n        /* \"#utility.yul\":2771:2849   */\n      tag_238\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2763:2849   */\n      swap1\n      pop\n        /* \"#utility.yul\":2543:2856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2862:2939   */\n    tag_239:\n        /* \"#utility.yul\":2899:2906   */\n      0x00\n        /* \"#utility.yul\":2928:2933   */\n      dup2\n        /* \"#utility.yul\":2917:2933   */\n      swap1\n      pop\n        /* \"#utility.yul\":2862:2939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2945:3067   */\n    tag_240:\n        /* \"#utility.yul\":3018:3042   */\n      tag_321\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3018:3042   */\n      tag_239\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3011:3016   */\n      dup2\n        /* \"#utility.yul\":3008:3043   */\n      eq\n        /* \"#utility.yul\":2998:3061   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3057:3058   */\n      0x00\n        /* \"#utility.yul\":3054:3055   */\n      dup1\n        /* \"#utility.yul\":3047:3059   */\n      revert\n        /* \"#utility.yul\":2998:3061   */\n    tag_322:\n        /* \"#utility.yul\":2945:3067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3073:3212   */\n    tag_241:\n        /* \"#utility.yul\":3119:3124   */\n      0x00\n        /* \"#utility.yul\":3157:3163   */\n      dup2\n        /* \"#utility.yul\":3144:3164   */\n      calldataload\n        /* \"#utility.yul\":3135:3164   */\n      swap1\n      pop\n        /* \"#utility.yul\":3173:3206   */\n      tag_324\n        /* \"#utility.yul\":3200:3205   */\n      dup2\n        /* \"#utility.yul\":3173:3206   */\n      tag_240\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3073:3212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3218:3547   */\n    tag_33:\n        /* \"#utility.yul\":3277:3283   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3305:3312   */\n      dup5\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3413   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3332:3411   */\n      tag_327\n      tag_227\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3294:3413   */\n    tag_326:\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3477:3530   */\n      tag_328\n        /* \"#utility.yul\":3522:3529   */\n      dup5\n        /* \"#utility.yul\":3513:3519   */\n      dup3\n        /* \"#utility.yul\":3502:3511   */\n      dup6\n        /* \"#utility.yul\":3498:3520   */\n      add\n        /* \"#utility.yul\":3477:3530   */\n      tag_241\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3467:3530   */\n      swap2\n      pop\n        /* \"#utility.yul\":3423:3540   */\n      pop\n        /* \"#utility.yul\":3218:3547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3553:3679   */\n    tag_242:\n        /* \"#utility.yul\":3590:3597   */\n      0x00\n        /* \"#utility.yul\":3630:3672   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3623:3628   */\n      dup3\n        /* \"#utility.yul\":3619:3673   */\n      and\n        /* \"#utility.yul\":3608:3673   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3781   */\n    tag_243:\n        /* \"#utility.yul\":3722:3729   */\n      0x00\n        /* \"#utility.yul\":3751:3775   */\n      tag_331\n        /* \"#utility.yul\":3769:3774   */\n      dup3\n        /* \"#utility.yul\":3751:3775   */\n      tag_242\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3740:3775   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3787:3905   */\n    tag_244:\n        /* \"#utility.yul\":3874:3898   */\n      tag_333\n        /* \"#utility.yul\":3892:3897   */\n      dup2\n        /* \"#utility.yul\":3874:3898   */\n      tag_243\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3869:3872   */\n      dup3\n        /* \"#utility.yul\":3862:3899   */\n      mstore\n        /* \"#utility.yul\":3787:3905   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3911:4133   */\n    tag_36:\n        /* \"#utility.yul\":4004:4008   */\n      0x00\n        /* \"#utility.yul\":4042:4044   */\n      0x20\n        /* \"#utility.yul\":4031:4040   */\n      dup3\n        /* \"#utility.yul\":4027:4045   */\n      add\n        /* \"#utility.yul\":4019:4045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4055:4126   */\n      tag_335\n        /* \"#utility.yul\":4123:4124   */\n      0x00\n        /* \"#utility.yul\":4112:4121   */\n      dup4\n        /* \"#utility.yul\":4108:4125   */\n      add\n        /* \"#utility.yul\":4099:4105   */\n      dup5\n        /* \"#utility.yul\":4055:4126   */\n      tag_244\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3911:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4261   */\n    tag_245:\n        /* \"#utility.yul\":4212:4236   */\n      tag_337\n        /* \"#utility.yul\":4230:4235   */\n      dup2\n        /* \"#utility.yul\":4212:4236   */\n      tag_243\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4205:4210   */\n      dup2\n        /* \"#utility.yul\":4202:4237   */\n      eq\n        /* \"#utility.yul\":4192:4255   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4251:4252   */\n      0x00\n        /* \"#utility.yul\":4248:4249   */\n      dup1\n        /* \"#utility.yul\":4241:4253   */\n      revert\n        /* \"#utility.yul\":4192:4255   */\n    tag_338:\n        /* \"#utility.yul\":4139:4261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4267:4406   */\n    tag_246:\n        /* \"#utility.yul\":4313:4318   */\n      0x00\n        /* \"#utility.yul\":4351:4357   */\n      dup2\n        /* \"#utility.yul\":4338:4358   */\n      calldataload\n        /* \"#utility.yul\":4329:4358   */\n      swap1\n      pop\n        /* \"#utility.yul\":4367:4400   */\n      tag_340\n        /* \"#utility.yul\":4394:4399   */\n      dup2\n        /* \"#utility.yul\":4367:4400   */\n      tag_245\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4267:4406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4412:4886   */\n    tag_39:\n        /* \"#utility.yul\":4480:4486   */\n      0x00\n        /* \"#utility.yul\":4488:4494   */\n      dup1\n        /* \"#utility.yul\":4537:4539   */\n      0x40\n        /* \"#utility.yul\":4525:4534   */\n      dup4\n        /* \"#utility.yul\":4516:4523   */\n      dup6\n        /* \"#utility.yul\":4512:4535   */\n      sub\n        /* \"#utility.yul\":4508:4540   */\n      slt\n        /* \"#utility.yul\":4505:4624   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4543:4622   */\n      tag_343\n      tag_227\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4505:4624   */\n    tag_342:\n        /* \"#utility.yul\":4663:4664   */\n      0x00\n        /* \"#utility.yul\":4688:4741   */\n      tag_344\n        /* \"#utility.yul\":4733:4740   */\n      dup6\n        /* \"#utility.yul\":4724:4730   */\n      dup3\n        /* \"#utility.yul\":4713:4722   */\n      dup7\n        /* \"#utility.yul\":4709:4731   */\n      add\n        /* \"#utility.yul\":4688:4741   */\n      tag_246\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4678:4741   */\n      swap3\n      pop\n        /* \"#utility.yul\":4634:4751   */\n      pop\n        /* \"#utility.yul\":4790:4792   */\n      0x20\n        /* \"#utility.yul\":4816:4869   */\n      tag_345\n        /* \"#utility.yul\":4861:4868   */\n      dup6\n        /* \"#utility.yul\":4852:4858   */\n      dup3\n        /* \"#utility.yul\":4841:4850   */\n      dup7\n        /* \"#utility.yul\":4837:4859   */\n      add\n        /* \"#utility.yul\":4816:4869   */\n      tag_241\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4806:4869   */\n      swap2\n      pop\n        /* \"#utility.yul\":4761:4879   */\n      pop\n        /* \"#utility.yul\":4412:4886   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4892:5221   */\n    tag_43:\n        /* \"#utility.yul\":4951:4957   */\n      0x00\n        /* \"#utility.yul\":5000:5002   */\n      0x20\n        /* \"#utility.yul\":4988:4997   */\n      dup3\n        /* \"#utility.yul\":4979:4986   */\n      dup5\n        /* \"#utility.yul\":4975:4998   */\n      sub\n        /* \"#utility.yul\":4971:5003   */\n      slt\n        /* \"#utility.yul\":4968:5087   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5006:5085   */\n      tag_348\n      tag_227\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4968:5087   */\n    tag_347:\n        /* \"#utility.yul\":5126:5127   */\n      0x00\n        /* \"#utility.yul\":5151:5204   */\n      tag_349\n        /* \"#utility.yul\":5196:5203   */\n      dup5\n        /* \"#utility.yul\":5187:5193   */\n      dup3\n        /* \"#utility.yul\":5176:5185   */\n      dup6\n        /* \"#utility.yul\":5172:5194   */\n      add\n        /* \"#utility.yul\":5151:5204   */\n      tag_246\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5141:5204   */\n      swap2\n      pop\n        /* \"#utility.yul\":5097:5214   */\n      pop\n        /* \"#utility.yul\":4892:5221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5227:5846   */\n    tag_48:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5320:5326   */\n      0x00\n        /* \"#utility.yul\":5369:5371   */\n      0x60\n        /* \"#utility.yul\":5357:5366   */\n      dup5\n        /* \"#utility.yul\":5348:5355   */\n      dup7\n        /* \"#utility.yul\":5344:5367   */\n      sub\n        /* \"#utility.yul\":5340:5372   */\n      slt\n        /* \"#utility.yul\":5337:5456   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5375:5454   */\n      tag_352\n      tag_227\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5337:5456   */\n    tag_351:\n        /* \"#utility.yul\":5495:5496   */\n      0x00\n        /* \"#utility.yul\":5520:5573   */\n      tag_353\n        /* \"#utility.yul\":5565:5572   */\n      dup7\n        /* \"#utility.yul\":5556:5562   */\n      dup3\n        /* \"#utility.yul\":5545:5554   */\n      dup8\n        /* \"#utility.yul\":5541:5563   */\n      add\n        /* \"#utility.yul\":5520:5573   */\n      tag_246\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5510:5573   */\n      swap4\n      pop\n        /* \"#utility.yul\":5466:5583   */\n      pop\n        /* \"#utility.yul\":5622:5624   */\n      0x20\n        /* \"#utility.yul\":5648:5701   */\n      tag_354\n        /* \"#utility.yul\":5693:5700   */\n      dup7\n        /* \"#utility.yul\":5684:5690   */\n      dup3\n        /* \"#utility.yul\":5673:5682   */\n      dup8\n        /* \"#utility.yul\":5669:5691   */\n      add\n        /* \"#utility.yul\":5648:5701   */\n      tag_246\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5638:5701   */\n      swap3\n      pop\n        /* \"#utility.yul\":5593:5711   */\n      pop\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5776:5829   */\n      tag_355\n        /* \"#utility.yul\":5821:5828   */\n      dup7\n        /* \"#utility.yul\":5812:5818   */\n      dup3\n        /* \"#utility.yul\":5801:5810   */\n      dup8\n        /* \"#utility.yul\":5797:5819   */\n      add\n        /* \"#utility.yul\":5776:5829   */\n      tag_241\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5766:5829   */\n      swap2\n      pop\n        /* \"#utility.yul\":5721:5839   */\n      pop\n        /* \"#utility.yul\":5227:5846   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5852:5970   */\n    tag_247:\n        /* \"#utility.yul\":5939:5963   */\n      tag_357\n        /* \"#utility.yul\":5957:5962   */\n      dup2\n        /* \"#utility.yul\":5939:5963   */\n      tag_239\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5934:5937   */\n      dup3\n        /* \"#utility.yul\":5927:5964   */\n      mstore\n        /* \"#utility.yul\":5852:5970   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5976:6198   */\n    tag_64:\n        /* \"#utility.yul\":6069:6073   */\n      0x00\n        /* \"#utility.yul\":6107:6109   */\n      0x20\n        /* \"#utility.yul\":6096:6105   */\n      dup3\n        /* \"#utility.yul\":6092:6110   */\n      add\n        /* \"#utility.yul\":6084:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":6120:6191   */\n      tag_359\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6177:6186   */\n      dup4\n        /* \"#utility.yul\":6173:6190   */\n      add\n        /* \"#utility.yul\":6164:6170   */\n      dup5\n        /* \"#utility.yul\":6120:6191   */\n      tag_247\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5976:6198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6320   */\n    tag_248:\n        /* \"#utility.yul\":6274:6295   */\n      tag_361\n        /* \"#utility.yul\":6289:6294   */\n      dup2\n        /* \"#utility.yul\":6274:6295   */\n      tag_232\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6267:6272   */\n      dup2\n        /* \"#utility.yul\":6264:6296   */\n      eq\n        /* \"#utility.yul\":6254:6314   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6310:6311   */\n      0x00\n        /* \"#utility.yul\":6307:6308   */\n      dup1\n        /* \"#utility.yul\":6300:6312   */\n      revert\n        /* \"#utility.yul\":6254:6314   */\n    tag_362:\n        /* \"#utility.yul\":6204:6320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6459   */\n    tag_249:\n        /* \"#utility.yul\":6369:6374   */\n      0x00\n        /* \"#utility.yul\":6407:6413   */\n      dup2\n        /* \"#utility.yul\":6394:6414   */\n      calldataload\n        /* \"#utility.yul\":6385:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6423:6453   */\n      tag_364\n        /* \"#utility.yul\":6447:6452   */\n      dup2\n        /* \"#utility.yul\":6423:6453   */\n      tag_248\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6326:6459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6933   */\n    tag_70:\n        /* \"#utility.yul\":6530:6536   */\n      0x00\n        /* \"#utility.yul\":6538:6544   */\n      dup1\n        /* \"#utility.yul\":6587:6589   */\n      0x40\n        /* \"#utility.yul\":6575:6584   */\n      dup4\n        /* \"#utility.yul\":6566:6573   */\n      dup6\n        /* \"#utility.yul\":6562:6585   */\n      sub\n        /* \"#utility.yul\":6558:6590   */\n      slt\n        /* \"#utility.yul\":6555:6674   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":6593:6672   */\n      tag_367\n      tag_227\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6555:6674   */\n    tag_366:\n        /* \"#utility.yul\":6713:6714   */\n      0x00\n        /* \"#utility.yul\":6738:6791   */\n      tag_368\n        /* \"#utility.yul\":6783:6790   */\n      dup6\n        /* \"#utility.yul\":6774:6780   */\n      dup3\n        /* \"#utility.yul\":6763:6772   */\n      dup7\n        /* \"#utility.yul\":6759:6781   */\n      add\n        /* \"#utility.yul\":6738:6791   */\n      tag_246\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6728:6791   */\n      swap3\n      pop\n        /* \"#utility.yul\":6684:6801   */\n      pop\n        /* \"#utility.yul\":6840:6842   */\n      0x20\n        /* \"#utility.yul\":6866:6916   */\n      tag_369\n        /* \"#utility.yul\":6908:6915   */\n      dup6\n        /* \"#utility.yul\":6899:6905   */\n      dup3\n        /* \"#utility.yul\":6888:6897   */\n      dup7\n        /* \"#utility.yul\":6884:6906   */\n      add\n        /* \"#utility.yul\":6866:6916   */\n      tag_249\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6856:6916   */\n      swap2\n      pop\n        /* \"#utility.yul\":6811:6926   */\n      pop\n        /* \"#utility.yul\":6465:6933   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6939:7056   */\n    tag_250:\n        /* \"#utility.yul\":7048:7049   */\n      0x00\n        /* \"#utility.yul\":7045:7046   */\n      dup1\n        /* \"#utility.yul\":7038:7050   */\n      revert\n        /* \"#utility.yul\":7062:7179   */\n    tag_251:\n        /* \"#utility.yul\":7171:7172   */\n      0x00\n        /* \"#utility.yul\":7168:7169   */\n      dup1\n        /* \"#utility.yul\":7161:7173   */\n      revert\n        /* \"#utility.yul\":7185:7365   */\n    tag_188:\n        /* \"#utility.yul\":7233:7310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7230:7231   */\n      0x00\n        /* \"#utility.yul\":7223:7311   */\n      mstore\n        /* \"#utility.yul\":7330:7334   */\n      0x41\n        /* \"#utility.yul\":7327:7328   */\n      0x04\n        /* \"#utility.yul\":7320:7335   */\n      mstore\n        /* \"#utility.yul\":7354:7358   */\n      0x24\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7344:7359   */\n      revert\n        /* \"#utility.yul\":7371:7652   */\n    tag_252:\n        /* \"#utility.yul\":7454:7481   */\n      tag_374\n        /* \"#utility.yul\":7476:7480   */\n      dup3\n        /* \"#utility.yul\":7454:7481   */\n      tag_237\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7446:7452   */\n      dup2\n        /* \"#utility.yul\":7442:7482   */\n      add\n        /* \"#utility.yul\":7584:7590   */\n      dup2\n        /* \"#utility.yul\":7572:7582   */\n      dup2\n        /* \"#utility.yul\":7569:7591   */\n      lt\n        /* \"#utility.yul\":7548:7566   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7536:7546   */\n      dup3\n        /* \"#utility.yul\":7533:7567   */\n      gt\n        /* \"#utility.yul\":7530:7592   */\n      or\n        /* \"#utility.yul\":7527:7615   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7595:7613   */\n      tag_376\n      tag_188\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7527:7615   */\n    tag_375:\n        /* \"#utility.yul\":7635:7645   */\n      dup1\n        /* \"#utility.yul\":7631:7633   */\n      0x40\n        /* \"#utility.yul\":7624:7646   */\n      mstore\n        /* \"#utility.yul\":7414:7652   */\n      pop\n        /* \"#utility.yul\":7371:7652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:7787   */\n    tag_253:\n        /* \"#utility.yul\":7692:7698   */\n      0x00\n        /* \"#utility.yul\":7719:7739   */\n      tag_378\n      tag_226\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7709:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7748:7781   */\n      tag_379\n        /* \"#utility.yul\":7776:7780   */\n      dup3\n        /* \"#utility.yul\":7768:7774   */\n      dup3\n        /* \"#utility.yul\":7748:7781   */\n      tag_252\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7658:7787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7793:8100   */\n    tag_254:\n        /* \"#utility.yul\":7854:7858   */\n      0x00\n        /* \"#utility.yul\":7944:7962   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7936:7942   */\n      dup3\n        /* \"#utility.yul\":7933:7963   */\n      gt\n        /* \"#utility.yul\":7930:7986   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7966:7984   */\n      tag_382\n      tag_188\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7930:7986   */\n    tag_381:\n        /* \"#utility.yul\":8004:8033   */\n      tag_383\n        /* \"#utility.yul\":8026:8032   */\n      dup3\n        /* \"#utility.yul\":8004:8033   */\n      tag_237\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7996:8033   */\n      swap1\n      pop\n        /* \"#utility.yul\":8088:8092   */\n      0x20\n        /* \"#utility.yul\":8082:8086   */\n      dup2\n        /* \"#utility.yul\":8078:8093   */\n      add\n        /* \"#utility.yul\":8070:8093   */\n      swap1\n      pop\n        /* \"#utility.yul\":7793:8100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8106:8254   */\n    tag_255:\n        /* \"#utility.yul\":8204:8210   */\n      dup3\n        /* \"#utility.yul\":8199:8202   */\n      dup2\n        /* \"#utility.yul\":8194:8197   */\n      dup4\n        /* \"#utility.yul\":8181:8211   */\n      calldatacopy\n        /* \"#utility.yul\":8245:8246   */\n      0x00\n        /* \"#utility.yul\":8236:8242   */\n      dup4\n        /* \"#utility.yul\":8231:8234   */\n      dup4\n        /* \"#utility.yul\":8227:8243   */\n      add\n        /* \"#utility.yul\":8220:8247   */\n      mstore\n        /* \"#utility.yul\":8106:8254   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8683   */\n    tag_256:\n        /* \"#utility.yul\":8337:8342   */\n      0x00\n        /* \"#utility.yul\":8362:8427   */\n      tag_386\n        /* \"#utility.yul\":8378:8426   */\n      tag_387\n        /* \"#utility.yul\":8419:8425   */\n      dup5\n        /* \"#utility.yul\":8378:8426   */\n      tag_254\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8362:8427   */\n      tag_253\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8353:8427   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8456   */\n      dup3\n        /* \"#utility.yul\":8443:8448   */\n      dup2\n        /* \"#utility.yul\":8436:8457   */\n      mstore\n        /* \"#utility.yul\":8488:8492   */\n      0x20\n        /* \"#utility.yul\":8481:8486   */\n      dup2\n        /* \"#utility.yul\":8477:8493   */\n      add\n        /* \"#utility.yul\":8526:8529   */\n      dup5\n        /* \"#utility.yul\":8517:8523   */\n      dup5\n        /* \"#utility.yul\":8512:8515   */\n      dup5\n        /* \"#utility.yul\":8508:8524   */\n      add\n        /* \"#utility.yul\":8505:8530   */\n      gt\n        /* \"#utility.yul\":8502:8614   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8533:8612   */\n      tag_389\n      tag_251\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8502:8614   */\n    tag_388:\n        /* \"#utility.yul\":8623:8677   */\n      tag_390\n        /* \"#utility.yul\":8670:8676   */\n      dup5\n        /* \"#utility.yul\":8665:8668   */\n      dup3\n        /* \"#utility.yul\":8660:8663   */\n      dup6\n        /* \"#utility.yul\":8623:8677   */\n      tag_255\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8343:8683   */\n      pop\n        /* \"#utility.yul\":8260:8683   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8702:9040   */\n    tag_257:\n        /* \"#utility.yul\":8757:8762   */\n      0x00\n        /* \"#utility.yul\":8806:8809   */\n      dup3\n        /* \"#utility.yul\":8799:8803   */\n      0x1f\n        /* \"#utility.yul\":8791:8797   */\n      dup4\n        /* \"#utility.yul\":8787:8804   */\n      add\n        /* \"#utility.yul\":8783:8810   */\n      slt\n        /* \"#utility.yul\":8773:8895   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":8814:8893   */\n      tag_393\n      tag_250\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8773:8895   */\n    tag_392:\n        /* \"#utility.yul\":8931:8937   */\n      dup2\n        /* \"#utility.yul\":8918:8938   */\n      calldataload\n        /* \"#utility.yul\":8956:9034   */\n      tag_394\n        /* \"#utility.yul\":9030:9033   */\n      dup5\n        /* \"#utility.yul\":9022:9028   */\n      dup3\n        /* \"#utility.yul\":9015:9019   */\n      0x20\n        /* \"#utility.yul\":9007:9013   */\n      dup7\n        /* \"#utility.yul\":9003:9020   */\n      add\n        /* \"#utility.yul\":8956:9034   */\n      tag_256\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8947:9034   */\n      swap2\n      pop\n        /* \"#utility.yul\":8763:9040   */\n      pop\n        /* \"#utility.yul\":8702:9040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9989   */\n    tag_74:\n        /* \"#utility.yul\":9141:9147   */\n      0x00\n        /* \"#utility.yul\":9149:9155   */\n      dup1\n        /* \"#utility.yul\":9157:9163   */\n      0x00\n        /* \"#utility.yul\":9165:9171   */\n      dup1\n        /* \"#utility.yul\":9214:9217   */\n      0x80\n        /* \"#utility.yul\":9202:9211   */\n      dup6\n        /* \"#utility.yul\":9193:9200   */\n      dup8\n        /* \"#utility.yul\":9189:9212   */\n      sub\n        /* \"#utility.yul\":9185:9218   */\n      slt\n        /* \"#utility.yul\":9182:9302   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":9221:9300   */\n      tag_397\n      tag_227\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9182:9302   */\n    tag_396:\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9366:9419   */\n      tag_398\n        /* \"#utility.yul\":9411:9418   */\n      dup8\n        /* \"#utility.yul\":9402:9408   */\n      dup3\n        /* \"#utility.yul\":9391:9400   */\n      dup9\n        /* \"#utility.yul\":9387:9409   */\n      add\n        /* \"#utility.yul\":9366:9419   */\n      tag_246\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9356:9419   */\n      swap5\n      pop\n        /* \"#utility.yul\":9312:9429   */\n      pop\n        /* \"#utility.yul\":9468:9470   */\n      0x20\n        /* \"#utility.yul\":9494:9547   */\n      tag_399\n        /* \"#utility.yul\":9539:9546   */\n      dup8\n        /* \"#utility.yul\":9530:9536   */\n      dup3\n        /* \"#utility.yul\":9519:9528   */\n      dup9\n        /* \"#utility.yul\":9515:9537   */\n      add\n        /* \"#utility.yul\":9494:9547   */\n      tag_246\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9484:9547   */\n      swap4\n      pop\n        /* \"#utility.yul\":9439:9557   */\n      pop\n        /* \"#utility.yul\":9596:9598   */\n      0x40\n        /* \"#utility.yul\":9622:9675   */\n      tag_400\n        /* \"#utility.yul\":9667:9674   */\n      dup8\n        /* \"#utility.yul\":9658:9664   */\n      dup3\n        /* \"#utility.yul\":9647:9656   */\n      dup9\n        /* \"#utility.yul\":9643:9665   */\n      add\n        /* \"#utility.yul\":9622:9675   */\n      tag_241\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9612:9675   */\n      swap3\n      pop\n        /* \"#utility.yul\":9567:9685   */\n      pop\n        /* \"#utility.yul\":9752:9754   */\n      0x60\n        /* \"#utility.yul\":9741:9750   */\n      dup6\n        /* \"#utility.yul\":9737:9755   */\n      add\n        /* \"#utility.yul\":9724:9756   */\n      calldataload\n        /* \"#utility.yul\":9783:9801   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9775:9781   */\n      dup2\n        /* \"#utility.yul\":9772:9802   */\n      gt\n        /* \"#utility.yul\":9769:9886   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9805:9884   */\n      tag_402\n      tag_228\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9769:9886   */\n    tag_401:\n        /* \"#utility.yul\":9910:9972   */\n      tag_403\n        /* \"#utility.yul\":9964:9971   */\n      dup8\n        /* \"#utility.yul\":9955:9961   */\n      dup3\n        /* \"#utility.yul\":9944:9953   */\n      dup9\n        /* \"#utility.yul\":9940:9962   */\n      add\n        /* \"#utility.yul\":9910:9972   */\n      tag_257\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9900:9972   */\n      swap2\n      pop\n        /* \"#utility.yul\":9695:9982   */\n      pop\n        /* \"#utility.yul\":9046:9989   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9995:10469   */\n    tag_82:\n        /* \"#utility.yul\":10063:10069   */\n      0x00\n        /* \"#utility.yul\":10071:10077   */\n      dup1\n        /* \"#utility.yul\":10120:10122   */\n      0x40\n        /* \"#utility.yul\":10108:10117   */\n      dup4\n        /* \"#utility.yul\":10099:10106   */\n      dup6\n        /* \"#utility.yul\":10095:10118   */\n      sub\n        /* \"#utility.yul\":10091:10123   */\n      slt\n        /* \"#utility.yul\":10088:10207   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10126:10205   */\n      tag_406\n      tag_227\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10088:10207   */\n    tag_405:\n        /* \"#utility.yul\":10246:10247   */\n      0x00\n        /* \"#utility.yul\":10271:10324   */\n      tag_407\n        /* \"#utility.yul\":10316:10323   */\n      dup6\n        /* \"#utility.yul\":10307:10313   */\n      dup3\n        /* \"#utility.yul\":10296:10305   */\n      dup7\n        /* \"#utility.yul\":10292:10314   */\n      add\n        /* \"#utility.yul\":10271:10324   */\n      tag_246\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10261:10324   */\n      swap3\n      pop\n        /* \"#utility.yul\":10217:10334   */\n      pop\n        /* \"#utility.yul\":10373:10375   */\n      0x20\n        /* \"#utility.yul\":10399:10452   */\n      tag_408\n        /* \"#utility.yul\":10444:10451   */\n      dup6\n        /* \"#utility.yul\":10435:10441   */\n      dup3\n        /* \"#utility.yul\":10424:10433   */\n      dup7\n        /* \"#utility.yul\":10420:10442   */\n      add\n        /* \"#utility.yul\":10399:10452   */\n      tag_246\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10389:10452   */\n      swap2\n      pop\n        /* \"#utility.yul\":10344:10462   */\n      pop\n        /* \"#utility.yul\":9995:10469   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10475:10655   */\n    tag_258:\n        /* \"#utility.yul\":10523:10600   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10520:10521   */\n      0x00\n        /* \"#utility.yul\":10513:10601   */\n      mstore\n        /* \"#utility.yul\":10620:10624   */\n      0x22\n        /* \"#utility.yul\":10617:10618   */\n      0x04\n        /* \"#utility.yul\":10610:10625   */\n      mstore\n        /* \"#utility.yul\":10644:10648   */\n      0x24\n        /* \"#utility.yul\":10641:10642   */\n      0x00\n        /* \"#utility.yul\":10634:10649   */\n      revert\n        /* \"#utility.yul\":10661:10981   */\n    tag_89:\n        /* \"#utility.yul\":10705:10711   */\n      0x00\n        /* \"#utility.yul\":10742:10743   */\n      0x02\n        /* \"#utility.yul\":10736:10740   */\n      dup3\n        /* \"#utility.yul\":10732:10744   */\n      div\n        /* \"#utility.yul\":10722:10744   */\n      swap1\n      pop\n        /* \"#utility.yul\":10789:10790   */\n      0x01\n        /* \"#utility.yul\":10783:10787   */\n      dup3\n        /* \"#utility.yul\":10779:10791   */\n      and\n        /* \"#utility.yul\":10810:10828   */\n      dup1\n        /* \"#utility.yul\":10800:10881   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10866:10870   */\n      0x7f\n        /* \"#utility.yul\":10858:10864   */\n      dup3\n        /* \"#utility.yul\":10854:10871   */\n      and\n        /* \"#utility.yul\":10844:10871   */\n      swap2\n      pop\n        /* \"#utility.yul\":10800:10881   */\n    tag_411:\n        /* \"#utility.yul\":10928:10930   */\n      0x20\n        /* \"#utility.yul\":10920:10926   */\n      dup3\n        /* \"#utility.yul\":10917:10931   */\n      lt\n        /* \"#utility.yul\":10897:10915   */\n      dup2\n        /* \"#utility.yul\":10894:10932   */\n      sub\n        /* \"#utility.yul\":10891:10975   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":10947:10965   */\n      tag_413\n      tag_258\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10891:10975   */\n    tag_412:\n        /* \"#utility.yul\":10712:10981   */\n      pop\n        /* \"#utility.yul\":10661:10981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10987:11156   */\n    tag_259:\n        /* \"#utility.yul\":11127:11148   */\n      0x746f6b656e20646f65736e277420657869737400000000000000000000000000\n        /* \"#utility.yul\":11123:11124   */\n      0x00\n        /* \"#utility.yul\":11115:11121   */\n      dup3\n        /* \"#utility.yul\":11111:11125   */\n      add\n        /* \"#utility.yul\":11104:11149   */\n      mstore\n        /* \"#utility.yul\":10987:11156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11162:11528   */\n    tag_260:\n        /* \"#utility.yul\":11304:11307   */\n      0x00\n        /* \"#utility.yul\":11325:11392   */\n      tag_416\n        /* \"#utility.yul\":11389:11391   */\n      0x13\n        /* \"#utility.yul\":11384:11387   */\n      dup4\n        /* \"#utility.yul\":11325:11392   */\n      tag_235\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11318:11392   */\n      swap2\n      pop\n        /* \"#utility.yul\":11401:11494   */\n      tag_417\n        /* \"#utility.yul\":11490:11493   */\n      dup3\n        /* \"#utility.yul\":11401:11494   */\n      tag_259\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11519:11521   */\n      0x20\n        /* \"#utility.yul\":11514:11517   */\n      dup3\n        /* \"#utility.yul\":11510:11522   */\n      add\n        /* \"#utility.yul\":11503:11522   */\n      swap1\n      pop\n        /* \"#utility.yul\":11162:11528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11534:11953   */\n    tag_97:\n        /* \"#utility.yul\":11700:11704   */\n      0x00\n        /* \"#utility.yul\":11738:11740   */\n      0x20\n        /* \"#utility.yul\":11727:11736   */\n      dup3\n        /* \"#utility.yul\":11723:11741   */\n      add\n        /* \"#utility.yul\":11715:11741   */\n      swap1\n      pop\n        /* \"#utility.yul\":11787:11796   */\n      dup2\n        /* \"#utility.yul\":11781:11785   */\n      dup2\n        /* \"#utility.yul\":11777:11797   */\n      sub\n        /* \"#utility.yul\":11773:11774   */\n      0x00\n        /* \"#utility.yul\":11762:11771   */\n      dup4\n        /* \"#utility.yul\":11758:11775   */\n      add\n        /* \"#utility.yul\":11751:11798   */\n      mstore\n        /* \"#utility.yul\":11815:11946   */\n      tag_419\n        /* \"#utility.yul\":11941:11945   */\n      dup2\n        /* \"#utility.yul\":11815:11946   */\n      tag_260\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11807:11946   */\n      swap1\n      pop\n        /* \"#utility.yul\":11534:11953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11959:12139   */\n    tag_261:\n        /* \"#utility.yul\":12099:12131   */\n      0x6e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c0000\n        /* \"#utility.yul\":12095:12096   */\n      0x00\n        /* \"#utility.yul\":12087:12093   */\n      dup3\n        /* \"#utility.yul\":12083:12097   */\n      add\n        /* \"#utility.yul\":12076:12132   */\n      mstore\n        /* \"#utility.yul\":11959:12139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12145:12511   */\n    tag_262:\n        /* \"#utility.yul\":12287:12290   */\n      0x00\n        /* \"#utility.yul\":12308:12375   */\n      tag_422\n        /* \"#utility.yul\":12372:12374   */\n      0x1e\n        /* \"#utility.yul\":12367:12370   */\n      dup4\n        /* \"#utility.yul\":12308:12375   */\n      tag_235\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12301:12375   */\n      swap2\n      pop\n        /* \"#utility.yul\":12384:12477   */\n      tag_423\n        /* \"#utility.yul\":12473:12476   */\n      dup3\n        /* \"#utility.yul\":12384:12477   */\n      tag_261\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12502:12504   */\n      0x20\n        /* \"#utility.yul\":12497:12500   */\n      dup3\n        /* \"#utility.yul\":12493:12505   */\n      add\n        /* \"#utility.yul\":12486:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12145:12511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12517:12936   */\n    tag_102:\n        /* \"#utility.yul\":12683:12687   */\n      0x00\n        /* \"#utility.yul\":12721:12723   */\n      0x20\n        /* \"#utility.yul\":12710:12719   */\n      dup3\n        /* \"#utility.yul\":12706:12724   */\n      add\n        /* \"#utility.yul\":12698:12724   */\n      swap1\n      pop\n        /* \"#utility.yul\":12770:12779   */\n      dup2\n        /* \"#utility.yul\":12764:12768   */\n      dup2\n        /* \"#utility.yul\":12760:12780   */\n      sub\n        /* \"#utility.yul\":12756:12757   */\n      0x00\n        /* \"#utility.yul\":12745:12754   */\n      dup4\n        /* \"#utility.yul\":12741:12758   */\n      add\n        /* \"#utility.yul\":12734:12781   */\n      mstore\n        /* \"#utility.yul\":12798:12929   */\n      tag_425\n        /* \"#utility.yul\":12924:12928   */\n      dup2\n        /* \"#utility.yul\":12798:12929   */\n      tag_262\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12790:12929   */\n      swap1\n      pop\n        /* \"#utility.yul\":12517:12936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12942:13114   */\n    tag_263:\n        /* \"#utility.yul\":13082:13106   */\n      0x6e6f74206f776e6572206e6f7220617070726f76656400000000000000000000\n        /* \"#utility.yul\":13078:13079   */\n      0x00\n        /* \"#utility.yul\":13070:13076   */\n      dup3\n        /* \"#utility.yul\":13066:13080   */\n      add\n        /* \"#utility.yul\":13059:13107   */\n      mstore\n        /* \"#utility.yul\":12942:13114   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13120:13486   */\n    tag_264:\n        /* \"#utility.yul\":13262:13265   */\n      0x00\n        /* \"#utility.yul\":13283:13350   */\n      tag_428\n        /* \"#utility.yul\":13347:13349   */\n      0x16\n        /* \"#utility.yul\":13342:13345   */\n      dup4\n        /* \"#utility.yul\":13283:13350   */\n      tag_235\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13276:13350   */\n      swap2\n      pop\n        /* \"#utility.yul\":13359:13452   */\n      tag_429\n        /* \"#utility.yul\":13448:13451   */\n      dup3\n        /* \"#utility.yul\":13359:13452   */\n      tag_263\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13477:13479   */\n      0x20\n        /* \"#utility.yul\":13472:13475   */\n      dup3\n        /* \"#utility.yul\":13468:13480   */\n      add\n        /* \"#utility.yul\":13461:13480   */\n      swap1\n      pop\n        /* \"#utility.yul\":13120:13486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13492:13911   */\n    tag_112:\n        /* \"#utility.yul\":13658:13662   */\n      0x00\n        /* \"#utility.yul\":13696:13698   */\n      0x20\n        /* \"#utility.yul\":13685:13694   */\n      dup3\n        /* \"#utility.yul\":13681:13699   */\n      add\n        /* \"#utility.yul\":13673:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13745:13754   */\n      dup2\n        /* \"#utility.yul\":13739:13743   */\n      dup2\n        /* \"#utility.yul\":13735:13755   */\n      sub\n        /* \"#utility.yul\":13731:13732   */\n      0x00\n        /* \"#utility.yul\":13720:13729   */\n      dup4\n        /* \"#utility.yul\":13716:13733   */\n      add\n        /* \"#utility.yul\":13709:13756   */\n      mstore\n        /* \"#utility.yul\":13773:13904   */\n      tag_431\n        /* \"#utility.yul\":13899:13903   */\n      dup2\n        /* \"#utility.yul\":13773:13904   */\n      tag_264\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13765:13904   */\n      swap1\n      pop\n        /* \"#utility.yul\":13492:13911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13917:14087   */\n    tag_265:\n        /* \"#utility.yul\":14057:14079   */\n      0x6d696e7420746f207a65726f2061646472657373000000000000000000000000\n        /* \"#utility.yul\":14053:14054   */\n      0x00\n        /* \"#utility.yul\":14045:14051   */\n      dup3\n        /* \"#utility.yul\":14041:14055   */\n      add\n        /* \"#utility.yul\":14034:14080   */\n      mstore\n        /* \"#utility.yul\":13917:14087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14093:14459   */\n    tag_266:\n        /* \"#utility.yul\":14235:14238   */\n      0x00\n        /* \"#utility.yul\":14256:14323   */\n      tag_434\n        /* \"#utility.yul\":14320:14322   */\n      0x14\n        /* \"#utility.yul\":14315:14318   */\n      dup4\n        /* \"#utility.yul\":14256:14323   */\n      tag_235\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14249:14323   */\n      swap2\n      pop\n        /* \"#utility.yul\":14332:14425   */\n      tag_435\n        /* \"#utility.yul\":14421:14424   */\n      dup3\n        /* \"#utility.yul\":14332:14425   */\n      tag_265\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14450:14452   */\n      0x20\n        /* \"#utility.yul\":14445:14448   */\n      dup3\n        /* \"#utility.yul\":14441:14453   */\n      add\n        /* \"#utility.yul\":14434:14453   */\n      swap1\n      pop\n        /* \"#utility.yul\":14093:14459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14465:14884   */\n    tag_120:\n        /* \"#utility.yul\":14631:14635   */\n      0x00\n        /* \"#utility.yul\":14669:14671   */\n      0x20\n        /* \"#utility.yul\":14658:14667   */\n      dup3\n        /* \"#utility.yul\":14654:14672   */\n      add\n        /* \"#utility.yul\":14646:14672   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:14727   */\n      dup2\n        /* \"#utility.yul\":14712:14716   */\n      dup2\n        /* \"#utility.yul\":14708:14728   */\n      sub\n        /* \"#utility.yul\":14704:14705   */\n      0x00\n        /* \"#utility.yul\":14693:14702   */\n      dup4\n        /* \"#utility.yul\":14689:14706   */\n      add\n        /* \"#utility.yul\":14682:14729   */\n      mstore\n        /* \"#utility.yul\":14746:14877   */\n      tag_437\n        /* \"#utility.yul\":14872:14876   */\n      dup2\n        /* \"#utility.yul\":14746:14877   */\n      tag_266\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14738:14877   */\n      swap1\n      pop\n        /* \"#utility.yul\":14465:14884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14890:15060   */\n    tag_267:\n        /* \"#utility.yul\":15030:15052   */\n      0x746f6b656e20616c7265616479206d696e746564000000000000000000000000\n        /* \"#utility.yul\":15026:15027   */\n      0x00\n        /* \"#utility.yul\":15018:15024   */\n      dup3\n        /* \"#utility.yul\":15014:15028   */\n      add\n        /* \"#utility.yul\":15007:15053   */\n      mstore\n        /* \"#utility.yul\":14890:15060   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15066:15432   */\n    tag_268:\n        /* \"#utility.yul\":15208:15211   */\n      0x00\n        /* \"#utility.yul\":15229:15296   */\n      tag_440\n        /* \"#utility.yul\":15293:15295   */\n      0x14\n        /* \"#utility.yul\":15288:15291   */\n      dup4\n        /* \"#utility.yul\":15229:15296   */\n      tag_235\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15222:15296   */\n      swap2\n      pop\n        /* \"#utility.yul\":15305:15398   */\n      tag_441\n        /* \"#utility.yul\":15394:15397   */\n      dup3\n        /* \"#utility.yul\":15305:15398   */\n      tag_267\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15423:15425   */\n      0x20\n        /* \"#utility.yul\":15418:15421   */\n      dup3\n        /* \"#utility.yul\":15414:15426   */\n      add\n        /* \"#utility.yul\":15407:15426   */\n      swap1\n      pop\n        /* \"#utility.yul\":15066:15432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15438:15857   */\n    tag_123:\n        /* \"#utility.yul\":15604:15608   */\n      0x00\n        /* \"#utility.yul\":15642:15644   */\n      0x20\n        /* \"#utility.yul\":15631:15640   */\n      dup3\n        /* \"#utility.yul\":15627:15645   */\n      add\n        /* \"#utility.yul\":15619:15645   */\n      swap1\n      pop\n        /* \"#utility.yul\":15691:15700   */\n      dup2\n        /* \"#utility.yul\":15685:15689   */\n      dup2\n        /* \"#utility.yul\":15681:15701   */\n      sub\n        /* \"#utility.yul\":15677:15678   */\n      0x00\n        /* \"#utility.yul\":15666:15675   */\n      dup4\n        /* \"#utility.yul\":15662:15679   */\n      add\n        /* \"#utility.yul\":15655:15702   */\n      mstore\n        /* \"#utility.yul\":15719:15850   */\n      tag_443\n        /* \"#utility.yul\":15845:15849   */\n      dup2\n        /* \"#utility.yul\":15719:15850   */\n      tag_268\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15711:15850   */\n      swap1\n      pop\n        /* \"#utility.yul\":15438:15857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15863:16043   */\n    tag_269:\n        /* \"#utility.yul\":15911:15988   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15908:15909   */\n      0x00\n        /* \"#utility.yul\":15901:15989   */\n      mstore\n        /* \"#utility.yul\":16008:16012   */\n      0x11\n        /* \"#utility.yul\":16005:16006   */\n      0x04\n        /* \"#utility.yul\":15998:16013   */\n      mstore\n        /* \"#utility.yul\":16032:16036   */\n      0x24\n        /* \"#utility.yul\":16029:16030   */\n      0x00\n        /* \"#utility.yul\":16022:16037   */\n      revert\n        /* \"#utility.yul\":16049:16240   */\n    tag_125:\n        /* \"#utility.yul\":16089:16092   */\n      0x00\n        /* \"#utility.yul\":16108:16128   */\n      tag_446\n        /* \"#utility.yul\":16126:16127   */\n      dup3\n        /* \"#utility.yul\":16108:16128   */\n      tag_239\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16103:16128   */\n      swap2\n      pop\n        /* \"#utility.yul\":16142:16162   */\n      tag_447\n        /* \"#utility.yul\":16160:16161   */\n      dup4\n        /* \"#utility.yul\":16142:16162   */\n      tag_239\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16137:16162   */\n      swap3\n      pop\n        /* \"#utility.yul\":16185:16186   */\n      dup3\n        /* \"#utility.yul\":16182:16183   */\n      dup3\n        /* \"#utility.yul\":16178:16187   */\n      add\n        /* \"#utility.yul\":16171:16187   */\n      swap1\n      pop\n        /* \"#utility.yul\":16206:16209   */\n      dup1\n        /* \"#utility.yul\":16203:16204   */\n      dup3\n        /* \"#utility.yul\":16200:16210   */\n      gt\n        /* \"#utility.yul\":16197:16233   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":16213:16231   */\n      tag_449\n      tag_269\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16197:16233   */\n    tag_448:\n        /* \"#utility.yul\":16049:16240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16246:16416   */\n    tag_270:\n        /* \"#utility.yul\":16386:16408   */\n      0x6f776e6572203d207a65726f2061646472657373000000000000000000000000\n        /* \"#utility.yul\":16382:16383   */\n      0x00\n        /* \"#utility.yul\":16374:16380   */\n      dup3\n        /* \"#utility.yul\":16370:16384   */\n      add\n        /* \"#utility.yul\":16363:16409   */\n      mstore\n        /* \"#utility.yul\":16246:16416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16422:16788   */\n    tag_271:\n        /* \"#utility.yul\":16564:16567   */\n      0x00\n        /* \"#utility.yul\":16585:16652   */\n      tag_452\n        /* \"#utility.yul\":16649:16651   */\n      0x14\n        /* \"#utility.yul\":16644:16647   */\n      dup4\n        /* \"#utility.yul\":16585:16652   */\n      tag_235\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16578:16652   */\n      swap2\n      pop\n        /* \"#utility.yul\":16661:16754   */\n      tag_453\n        /* \"#utility.yul\":16750:16753   */\n      dup3\n        /* \"#utility.yul\":16661:16754   */\n      tag_270\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16779:16781   */\n      0x20\n        /* \"#utility.yul\":16774:16777   */\n      dup3\n        /* \"#utility.yul\":16770:16782   */\n      add\n        /* \"#utility.yul\":16763:16782   */\n      swap1\n      pop\n        /* \"#utility.yul\":16422:16788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16794:17213   */\n    tag_132:\n        /* \"#utility.yul\":16960:16964   */\n      0x00\n        /* \"#utility.yul\":16998:17000   */\n      0x20\n        /* \"#utility.yul\":16987:16996   */\n      dup3\n        /* \"#utility.yul\":16983:17001   */\n      add\n        /* \"#utility.yul\":16975:17001   */\n      swap1\n      pop\n        /* \"#utility.yul\":17047:17056   */\n      dup2\n        /* \"#utility.yul\":17041:17045   */\n      dup2\n        /* \"#utility.yul\":17037:17057   */\n      sub\n        /* \"#utility.yul\":17033:17034   */\n      0x00\n        /* \"#utility.yul\":17022:17031   */\n      dup4\n        /* \"#utility.yul\":17018:17035   */\n      add\n        /* \"#utility.yul\":17011:17058   */\n      mstore\n        /* \"#utility.yul\":17075:17206   */\n      tag_455\n        /* \"#utility.yul\":17201:17205   */\n      dup2\n        /* \"#utility.yul\":17075:17206   */\n      tag_271\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":17067:17206   */\n      swap1\n      pop\n        /* \"#utility.yul\":16794:17213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17219:17384   */\n    tag_272:\n        /* \"#utility.yul\":17359:17376   */\n      0x546f6b656e204e6f742045786973740000000000000000000000000000000000\n        /* \"#utility.yul\":17355:17356   */\n      0x00\n        /* \"#utility.yul\":17347:17353   */\n      dup3\n        /* \"#utility.yul\":17343:17357   */\n      add\n        /* \"#utility.yul\":17336:17377   */\n      mstore\n        /* \"#utility.yul\":17219:17384   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17390:17756   */\n    tag_273:\n        /* \"#utility.yul\":17532:17535   */\n      0x00\n        /* \"#utility.yul\":17553:17620   */\n      tag_458\n        /* \"#utility.yul\":17617:17619   */\n      0x0f\n        /* \"#utility.yul\":17612:17615   */\n      dup4\n        /* \"#utility.yul\":17553:17620   */\n      tag_235\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":17546:17620   */\n      swap2\n      pop\n        /* \"#utility.yul\":17629:17722   */\n      tag_459\n        /* \"#utility.yul\":17718:17721   */\n      dup3\n        /* \"#utility.yul\":17629:17722   */\n      tag_272\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17747:17749   */\n      0x20\n        /* \"#utility.yul\":17742:17745   */\n      dup3\n        /* \"#utility.yul\":17738:17750   */\n      add\n        /* \"#utility.yul\":17731:17750   */\n      swap1\n      pop\n        /* \"#utility.yul\":17390:17756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17762:18181   */\n    tag_150:\n        /* \"#utility.yul\":17928:17932   */\n      0x00\n        /* \"#utility.yul\":17966:17968   */\n      0x20\n        /* \"#utility.yul\":17955:17964   */\n      dup3\n        /* \"#utility.yul\":17951:17969   */\n      add\n        /* \"#utility.yul\":17943:17969   */\n      swap1\n      pop\n        /* \"#utility.yul\":18015:18024   */\n      dup2\n        /* \"#utility.yul\":18009:18013   */\n      dup2\n        /* \"#utility.yul\":18005:18025   */\n      sub\n        /* \"#utility.yul\":18001:18002   */\n      0x00\n        /* \"#utility.yul\":17990:17999   */\n      dup4\n        /* \"#utility.yul\":17986:18003   */\n      add\n        /* \"#utility.yul\":17979:18026   */\n      mstore\n        /* \"#utility.yul\":18043:18174   */\n      tag_461\n        /* \"#utility.yul\":18169:18173   */\n      dup2\n        /* \"#utility.yul\":18043:18174   */\n      tag_273\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18035:18174   */\n      swap1\n      pop\n        /* \"#utility.yul\":17762:18181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18187:18335   */\n    tag_274:\n        /* \"#utility.yul\":18289:18300   */\n      0x00\n        /* \"#utility.yul\":18326:18329   */\n      dup2\n        /* \"#utility.yul\":18311:18329   */\n      swap1\n      pop\n        /* \"#utility.yul\":18187:18335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18341:18731   */\n    tag_275:\n        /* \"#utility.yul\":18447:18450   */\n      0x00\n        /* \"#utility.yul\":18475:18514   */\n      tag_464\n        /* \"#utility.yul\":18508:18513   */\n      dup3\n        /* \"#utility.yul\":18475:18514   */\n      tag_234\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":18530:18619   */\n      tag_465\n        /* \"#utility.yul\":18612:18618   */\n      dup2\n        /* \"#utility.yul\":18607:18610   */\n      dup6\n        /* \"#utility.yul\":18530:18619   */\n      tag_274\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18523:18619   */\n      swap4\n      pop\n        /* \"#utility.yul\":18628:18693   */\n      tag_466\n        /* \"#utility.yul\":18686:18692   */\n      dup2\n        /* \"#utility.yul\":18681:18684   */\n      dup6\n        /* \"#utility.yul\":18674:18678   */\n      0x20\n        /* \"#utility.yul\":18667:18672   */\n      dup7\n        /* \"#utility.yul\":18663:18679   */\n      add\n        /* \"#utility.yul\":18628:18693   */\n      tag_236\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18718:18724   */\n      dup1\n        /* \"#utility.yul\":18713:18716   */\n      dup5\n        /* \"#utility.yul\":18709:18725   */\n      add\n        /* \"#utility.yul\":18702:18725   */\n      swap2\n      pop\n        /* \"#utility.yul\":18451:18731   */\n      pop\n        /* \"#utility.yul\":18341:18731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18737:19172   */\n    tag_158:\n        /* \"#utility.yul\":18917:18920   */\n      0x00\n        /* \"#utility.yul\":18939:19034   */\n      tag_468\n        /* \"#utility.yul\":19030:19033   */\n      dup3\n        /* \"#utility.yul\":19021:19027   */\n      dup6\n        /* \"#utility.yul\":18939:19034   */\n      tag_275\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":18932:19034   */\n      swap2\n      pop\n        /* \"#utility.yul\":19051:19146   */\n      tag_469\n        /* \"#utility.yul\":19142:19145   */\n      dup3\n        /* \"#utility.yul\":19133:19139   */\n      dup5\n        /* \"#utility.yul\":19051:19146   */\n      tag_275\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19044:19146   */\n      swap2\n      pop\n        /* \"#utility.yul\":19163:19166   */\n      dup2\n        /* \"#utility.yul\":19156:19166   */\n      swap1\n      pop\n        /* \"#utility.yul\":18737:19172   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19178:19337   */\n    tag_276:\n        /* \"#utility.yul\":19318:19329   */\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19314:19315   */\n      0x00\n        /* \"#utility.yul\":19306:19312   */\n      dup3\n        /* \"#utility.yul\":19302:19316   */\n      add\n        /* \"#utility.yul\":19295:19330   */\n      mstore\n        /* \"#utility.yul\":19178:19337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19343:19708   */\n    tag_277:\n        /* \"#utility.yul\":19485:19488   */\n      0x00\n        /* \"#utility.yul\":19506:19572   */\n      tag_472\n        /* \"#utility.yul\":19570:19571   */\n      0x09\n        /* \"#utility.yul\":19565:19568   */\n      dup4\n        /* \"#utility.yul\":19506:19572   */\n      tag_235\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":19499:19572   */\n      swap2\n      pop\n        /* \"#utility.yul\":19581:19674   */\n      tag_473\n        /* \"#utility.yul\":19670:19673   */\n      dup3\n        /* \"#utility.yul\":19581:19674   */\n      tag_276\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19699:19701   */\n      0x20\n        /* \"#utility.yul\":19694:19697   */\n      dup3\n        /* \"#utility.yul\":19690:19702   */\n      add\n        /* \"#utility.yul\":19683:19702   */\n      swap1\n      pop\n        /* \"#utility.yul\":19343:19708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19714:20133   */\n    tag_167:\n        /* \"#utility.yul\":19880:19884   */\n      0x00\n        /* \"#utility.yul\":19918:19920   */\n      0x20\n        /* \"#utility.yul\":19907:19916   */\n      dup3\n        /* \"#utility.yul\":19903:19921   */\n      add\n        /* \"#utility.yul\":19895:19921   */\n      swap1\n      pop\n        /* \"#utility.yul\":19967:19976   */\n      dup2\n        /* \"#utility.yul\":19961:19965   */\n      dup2\n        /* \"#utility.yul\":19957:19977   */\n      sub\n        /* \"#utility.yul\":19953:19954   */\n      0x00\n        /* \"#utility.yul\":19942:19951   */\n      dup4\n        /* \"#utility.yul\":19938:19955   */\n      add\n        /* \"#utility.yul\":19931:19978   */\n      mstore\n        /* \"#utility.yul\":19995:20126   */\n      tag_475\n        /* \"#utility.yul\":20121:20125   */\n      dup2\n        /* \"#utility.yul\":19995:20126   */\n      tag_277\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19987:20126   */\n      swap1\n      pop\n        /* \"#utility.yul\":19714:20133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20139:20317   */\n    tag_278:\n        /* \"#utility.yul\":20279:20309   */\n      0x7472616e7366657220746f20746865207a65726f206164647265737300000000\n        /* \"#utility.yul\":20275:20276   */\n      0x00\n        /* \"#utility.yul\":20267:20273   */\n      dup3\n        /* \"#utility.yul\":20263:20277   */\n      add\n        /* \"#utility.yul\":20256:20310   */\n      mstore\n        /* \"#utility.yul\":20139:20317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20323:20689   */\n    tag_279:\n        /* \"#utility.yul\":20465:20468   */\n      0x00\n        /* \"#utility.yul\":20486:20553   */\n      tag_478\n        /* \"#utility.yul\":20550:20552   */\n      0x1c\n        /* \"#utility.yul\":20545:20548   */\n      dup4\n        /* \"#utility.yul\":20486:20553   */\n      tag_235\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20479:20553   */\n      swap2\n      pop\n        /* \"#utility.yul\":20562:20655   */\n      tag_479\n        /* \"#utility.yul\":20651:20654   */\n      dup3\n        /* \"#utility.yul\":20562:20655   */\n      tag_278\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20680:20682   */\n      0x20\n        /* \"#utility.yul\":20675:20678   */\n      dup3\n        /* \"#utility.yul\":20671:20683   */\n      add\n        /* \"#utility.yul\":20664:20683   */\n      swap1\n      pop\n        /* \"#utility.yul\":20323:20689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20695:21114   */\n    tag_170:\n        /* \"#utility.yul\":20861:20865   */\n      0x00\n        /* \"#utility.yul\":20899:20901   */\n      0x20\n        /* \"#utility.yul\":20888:20897   */\n      dup3\n        /* \"#utility.yul\":20884:20902   */\n      add\n        /* \"#utility.yul\":20876:20902   */\n      swap1\n      pop\n        /* \"#utility.yul\":20948:20957   */\n      dup2\n        /* \"#utility.yul\":20942:20946   */\n      dup2\n        /* \"#utility.yul\":20938:20958   */\n      sub\n        /* \"#utility.yul\":20934:20935   */\n      0x00\n        /* \"#utility.yul\":20923:20932   */\n      dup4\n        /* \"#utility.yul\":20919:20936   */\n      add\n        /* \"#utility.yul\":20912:20959   */\n      mstore\n        /* \"#utility.yul\":20976:21107   */\n      tag_481\n        /* \"#utility.yul\":21102:21106   */\n      dup2\n        /* \"#utility.yul\":20976:21107   */\n      tag_279\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20968:21107   */\n      swap1\n      pop\n        /* \"#utility.yul\":20695:21114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21120:21314   */\n    tag_173:\n        /* \"#utility.yul\":21160:21164   */\n      0x00\n        /* \"#utility.yul\":21180:21200   */\n      tag_483\n        /* \"#utility.yul\":21198:21199   */\n      dup3\n        /* \"#utility.yul\":21180:21200   */\n      tag_239\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21175:21200   */\n      swap2\n      pop\n        /* \"#utility.yul\":21214:21234   */\n      tag_484\n        /* \"#utility.yul\":21232:21233   */\n      dup4\n        /* \"#utility.yul\":21214:21234   */\n      tag_239\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":21209:21234   */\n      swap3\n      pop\n        /* \"#utility.yul\":21258:21259   */\n      dup3\n        /* \"#utility.yul\":21255:21256   */\n      dup3\n        /* \"#utility.yul\":21251:21260   */\n      sub\n        /* \"#utility.yul\":21243:21260   */\n      swap1\n      pop\n        /* \"#utility.yul\":21282:21283   */\n      dup2\n        /* \"#utility.yul\":21276:21280   */\n      dup2\n        /* \"#utility.yul\":21273:21284   */\n      gt\n        /* \"#utility.yul\":21270:21307   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":21287:21305   */\n      tag_486\n      tag_269\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":21270:21307   */\n    tag_485:\n        /* \"#utility.yul\":21120:21314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21320:21488   */\n    tag_280:\n        /* \"#utility.yul\":21460:21480   */\n      0x6e6f742045524337323152656365697665720000000000000000000000000000\n        /* \"#utility.yul\":21456:21457   */\n      0x00\n        /* \"#utility.yul\":21448:21454   */\n      dup3\n        /* \"#utility.yul\":21444:21458   */\n      add\n        /* \"#utility.yul\":21437:21481   */\n      mstore\n        /* \"#utility.yul\":21320:21488   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21494:21860   */\n    tag_281:\n        /* \"#utility.yul\":21636:21639   */\n      0x00\n        /* \"#utility.yul\":21657:21724   */\n      tag_489\n        /* \"#utility.yul\":21721:21723   */\n      0x12\n        /* \"#utility.yul\":21716:21719   */\n      dup4\n        /* \"#utility.yul\":21657:21724   */\n      tag_235\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":21650:21724   */\n      swap2\n      pop\n        /* \"#utility.yul\":21733:21826   */\n      tag_490\n        /* \"#utility.yul\":21822:21825   */\n      dup3\n        /* \"#utility.yul\":21733:21826   */\n      tag_280\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":21851:21853   */\n      0x20\n        /* \"#utility.yul\":21846:21849   */\n      dup3\n        /* \"#utility.yul\":21842:21854   */\n      add\n        /* \"#utility.yul\":21835:21854   */\n      swap1\n      pop\n        /* \"#utility.yul\":21494:21860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21866:22285   */\n    tag_181:\n        /* \"#utility.yul\":22032:22036   */\n      0x00\n        /* \"#utility.yul\":22070:22072   */\n      0x20\n        /* \"#utility.yul\":22059:22068   */\n      dup3\n        /* \"#utility.yul\":22055:22073   */\n      add\n        /* \"#utility.yul\":22047:22073   */\n      swap1\n      pop\n        /* \"#utility.yul\":22119:22128   */\n      dup2\n        /* \"#utility.yul\":22113:22117   */\n      dup2\n        /* \"#utility.yul\":22109:22129   */\n      sub\n        /* \"#utility.yul\":22105:22106   */\n      0x00\n        /* \"#utility.yul\":22094:22103   */\n      dup4\n        /* \"#utility.yul\":22090:22107   */\n      add\n        /* \"#utility.yul\":22083:22130   */\n      mstore\n        /* \"#utility.yul\":22147:22278   */\n      tag_492\n        /* \"#utility.yul\":22273:22277   */\n      dup2\n        /* \"#utility.yul\":22147:22278   */\n      tag_281\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":22139:22278   */\n      swap1\n      pop\n        /* \"#utility.yul\":21866:22285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22291:22471   */\n    tag_194:\n        /* \"#utility.yul\":22339:22416   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22336:22337   */\n      0x00\n        /* \"#utility.yul\":22329:22417   */\n      mstore\n        /* \"#utility.yul\":22436:22440   */\n      0x12\n        /* \"#utility.yul\":22433:22434   */\n      0x04\n        /* \"#utility.yul\":22426:22441   */\n      mstore\n        /* \"#utility.yul\":22460:22464   */\n      0x24\n        /* \"#utility.yul\":22457:22458   */\n      0x00\n        /* \"#utility.yul\":22450:22465   */\n      revert\n        /* \"#utility.yul\":22477:22575   */\n    tag_282:\n        /* \"#utility.yul\":22528:22534   */\n      0x00\n        /* \"#utility.yul\":22562:22567   */\n      dup2\n        /* \"#utility.yul\":22556:22568   */\n      mload\n        /* \"#utility.yul\":22546:22568   */\n      swap1\n      pop\n        /* \"#utility.yul\":22477:22575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22581:22749   */\n    tag_283:\n        /* \"#utility.yul\":22664:22675   */\n      0x00\n        /* \"#utility.yul\":22698:22704   */\n      dup3\n        /* \"#utility.yul\":22693:22696   */\n      dup3\n        /* \"#utility.yul\":22686:22705   */\n      mstore\n        /* \"#utility.yul\":22738:22742   */\n      0x20\n        /* \"#utility.yul\":22733:22736   */\n      dup3\n        /* \"#utility.yul\":22729:22743   */\n      add\n        /* \"#utility.yul\":22714:22743   */\n      swap1\n      pop\n        /* \"#utility.yul\":22581:22749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22755:23128   */\n    tag_284:\n        /* \"#utility.yul\":22841:22844   */\n      0x00\n        /* \"#utility.yul\":22869:22907   */\n      tag_497\n        /* \"#utility.yul\":22901:22906   */\n      dup3\n        /* \"#utility.yul\":22869:22907   */\n      tag_282\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":22923:22993   */\n      tag_498\n        /* \"#utility.yul\":22986:22992   */\n      dup2\n        /* \"#utility.yul\":22981:22984   */\n      dup6\n        /* \"#utility.yul\":22923:22993   */\n      tag_283\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":22916:22993   */\n      swap4\n      pop\n        /* \"#utility.yul\":23002:23067   */\n      tag_499\n        /* \"#utility.yul\":23060:23066   */\n      dup2\n        /* \"#utility.yul\":23055:23058   */\n      dup6\n        /* \"#utility.yul\":23048:23052   */\n      0x20\n        /* \"#utility.yul\":23041:23046   */\n      dup7\n        /* \"#utility.yul\":23037:23053   */\n      add\n        /* \"#utility.yul\":23002:23067   */\n      tag_236\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":23092:23121   */\n      tag_500\n        /* \"#utility.yul\":23114:23120   */\n      dup2\n        /* \"#utility.yul\":23092:23121   */\n      tag_237\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":23087:23090   */\n      dup5\n        /* \"#utility.yul\":23083:23122   */\n      add\n        /* \"#utility.yul\":23076:23122   */\n      swap2\n      pop\n        /* \"#utility.yul\":22845:23128   */\n      pop\n        /* \"#utility.yul\":22755:23128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23134:23774   */\n    tag_200:\n        /* \"#utility.yul\":23329:23333   */\n      0x00\n        /* \"#utility.yul\":23367:23370   */\n      0x80\n        /* \"#utility.yul\":23356:23365   */\n      dup3\n        /* \"#utility.yul\":23352:23371   */\n      add\n        /* \"#utility.yul\":23344:23371   */\n      swap1\n      pop\n        /* \"#utility.yul\":23381:23452   */\n      tag_502\n        /* \"#utility.yul\":23449:23450   */\n      0x00\n        /* \"#utility.yul\":23438:23447   */\n      dup4\n        /* \"#utility.yul\":23434:23451   */\n      add\n        /* \"#utility.yul\":23425:23431   */\n      dup8\n        /* \"#utility.yul\":23381:23452   */\n      tag_244\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":23462:23534   */\n      tag_503\n        /* \"#utility.yul\":23530:23532   */\n      0x20\n        /* \"#utility.yul\":23519:23528   */\n      dup4\n        /* \"#utility.yul\":23515:23533   */\n      add\n        /* \"#utility.yul\":23506:23512   */\n      dup7\n        /* \"#utility.yul\":23462:23534   */\n      tag_244\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23544:23616   */\n      tag_504\n        /* \"#utility.yul\":23612:23614   */\n      0x40\n        /* \"#utility.yul\":23601:23610   */\n      dup4\n        /* \"#utility.yul\":23597:23615   */\n      add\n        /* \"#utility.yul\":23588:23594   */\n      dup6\n        /* \"#utility.yul\":23544:23616   */\n      tag_247\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23663:23672   */\n      dup2\n        /* \"#utility.yul\":23657:23661   */\n      dup2\n        /* \"#utility.yul\":23653:23673   */\n      sub\n        /* \"#utility.yul\":23648:23650   */\n      0x60\n        /* \"#utility.yul\":23637:23646   */\n      dup4\n        /* \"#utility.yul\":23633:23651   */\n      add\n        /* \"#utility.yul\":23626:23674   */\n      mstore\n        /* \"#utility.yul\":23691:23767   */\n      tag_505\n        /* \"#utility.yul\":23762:23766   */\n      dup2\n        /* \"#utility.yul\":23753:23759   */\n      dup5\n        /* \"#utility.yul\":23691:23767   */\n      tag_284\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":23683:23767   */\n      swap1\n      pop\n        /* \"#utility.yul\":23134:23774   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23780:23921   */\n    tag_285:\n        /* \"#utility.yul\":23836:23841   */\n      0x00\n        /* \"#utility.yul\":23867:23873   */\n      dup2\n        /* \"#utility.yul\":23861:23874   */\n      mload\n        /* \"#utility.yul\":23852:23874   */\n      swap1\n      pop\n        /* \"#utility.yul\":23883:23915   */\n      tag_507\n        /* \"#utility.yul\":23909:23914   */\n      dup2\n        /* \"#utility.yul\":23883:23915   */\n      tag_230\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":23780:23921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23927:24276   */\n    tag_204:\n        /* \"#utility.yul\":23996:24002   */\n      0x00\n        /* \"#utility.yul\":24045:24047   */\n      0x20\n        /* \"#utility.yul\":24033:24042   */\n      dup3\n        /* \"#utility.yul\":24024:24031   */\n      dup5\n        /* \"#utility.yul\":24020:24043   */\n      sub\n        /* \"#utility.yul\":24016:24048   */\n      slt\n        /* \"#utility.yul\":24013:24132   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":24051:24130   */\n      tag_510\n      tag_227\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":24013:24132   */\n    tag_509:\n        /* \"#utility.yul\":24171:24172   */\n      0x00\n        /* \"#utility.yul\":24196:24259   */\n      tag_511\n        /* \"#utility.yul\":24251:24258   */\n      dup5\n        /* \"#utility.yul\":24242:24248   */\n      dup3\n        /* \"#utility.yul\":24231:24240   */\n      dup6\n        /* \"#utility.yul\":24227:24249   */\n      add\n        /* \"#utility.yul\":24196:24259   */\n      tag_285\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":24186:24259   */\n      swap2\n      pop\n        /* \"#utility.yul\":24142:24269   */\n      pop\n        /* \"#utility.yul\":23927:24276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038cdaaf94404bafd7ce5e5a142b54553458ce17ab56623e7ca0d623b6eb4586364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1899": {
									"entryPoint": null,
									"id": 1899,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8576:9",
										"nodeType": "YulBlock",
										"src": "0:8576:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:186:9",
													"nodeType": "YulBlock",
													"src": "1672:186:9",
													"statements": [
														{
															"nativeSrc": "1683:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1683:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1692:1:9",
																"nodeType": "YulLiteral",
																"src": "1692:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1687:1:9",
																	"nodeType": "YulTypedName",
																	"src": "1687:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1752:63:9",
																"nodeType": "YulBlock",
																"src": "1752:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1777:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1777:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1782:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "1782:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1773:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1773:3:9"
																					},
																					"nativeSrc": "1773:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1773:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1796:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1796:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1801:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "1801:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1792:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:9"
																							},
																							"nativeSrc": "1792:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1786:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1786:5:9"
																					},
																					"nativeSrc": "1786:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1786:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1766:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1766:6:9"
																			},
																			"nativeSrc": "1766:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1766:39:9"
																		},
																		"nativeSrc": "1766:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1766:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1713:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1713:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1716:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1716:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1710:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1710:2:9"
																},
																"nativeSrc": "1710:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1710:13:9"
															},
															"nativeSrc": "1702:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1724:19:9",
																"nodeType": "YulBlock",
																"src": "1724:19:9",
																"statements": [
																	{
																		"nativeSrc": "1726:15:9",
																		"nodeType": "YulAssignment",
																		"src": "1726:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1735:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "1735:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1738:2:9",
																					"nodeType": "YulLiteral",
																					"src": "1738:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1731:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:3:9"
																			},
																			"nativeSrc": "1731:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1731:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1726:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1706:3:9",
																"nodeType": "YulBlock",
																"src": "1706:3:9",
																"statements": []
															},
															"src": "1702:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1835:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1835:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1840:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1840:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1831:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1831:3:9"
																		},
																		"nativeSrc": "1831:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1831:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1849:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:9"
																},
																"nativeSrc": "1824:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1824:27:9"
															},
															"nativeSrc": "1824:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1824:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:248:9"
											},
											{
												"body": {
													"nativeSrc": "1959:339:9",
													"nodeType": "YulBlock",
													"src": "1959:339:9",
													"statements": [
														{
															"nativeSrc": "1969:75:9",
															"nodeType": "YulAssignment",
															"src": "1969:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2036:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2036:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1994:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1994:41:9"
																		},
																		"nativeSrc": "1994:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1978:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1978:15:9"
																},
																"nativeSrc": "1978:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1978:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1969:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1969:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2060:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2060:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2067:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2067:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2053:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:9"
																},
																"nativeSrc": "2053:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2053:21:9"
															},
															"nativeSrc": "2053:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2053:21:9"
														},
														{
															"nativeSrc": "2083:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2098:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2105:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2094:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:9"
																},
																"nativeSrc": "2094:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2094:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2087:3:9",
																	"nodeType": "YulTypedName",
																	"src": "2087:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2148:83:9",
																"nodeType": "YulBlock",
																"src": "2148:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2150:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2150:77:9"
																			},
																			"nativeSrc": "2150:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2150:79:9"
																		},
																		"nativeSrc": "2150:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2129:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2129:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2134:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:9"
																		},
																		"nativeSrc": "2125:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2143:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2143:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2122:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2122:2:9"
																},
																"nativeSrc": "2122:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2122:25:9"
															},
															"nativeSrc": "2119:112:9",
															"nodeType": "YulIf",
															"src": "2119:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2275:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2275:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2280:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2285:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2285:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2240:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2240:34:9"
																},
																"nativeSrc": "2240:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2240:52:9"
															},
															"nativeSrc": "2240:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2240:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1864:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1932:3:9",
														"nodeType": "YulTypedName",
														"src": "1932:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1937:6:9",
														"nodeType": "YulTypedName",
														"src": "1937:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1945:3:9",
														"nodeType": "YulTypedName",
														"src": "1945:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1953:5:9",
														"nodeType": "YulTypedName",
														"src": "1953:5:9",
														"type": ""
													}
												],
												"src": "1864:434:9"
											},
											{
												"body": {
													"nativeSrc": "2391:282:9",
													"nodeType": "YulBlock",
													"src": "2391:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2440:83:9",
																"nodeType": "YulBlock",
																"src": "2440:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2442:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2442:77:9"
																			},
																			"nativeSrc": "2442:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2442:79:9"
																		},
																		"nativeSrc": "2442:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2419:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2419:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2427:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2427:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2415:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2415:3:9"
																				},
																				"nativeSrc": "2415:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2415:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2434:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2434:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:9"
																		},
																		"nativeSrc": "2411:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2411:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2404:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:9"
																},
																"nativeSrc": "2404:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2404:35:9"
															},
															"nativeSrc": "2401:122:9",
															"nodeType": "YulIf",
															"src": "2401:122:9"
														},
														{
															"nativeSrc": "2532:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2532:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2552:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2552:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2546:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2546:5:9"
																},
																"nativeSrc": "2546:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2546:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2536:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2536:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2568:99:9",
															"nodeType": "YulAssignment",
															"src": "2568:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2640:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2648:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2648:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:9"
																		},
																		"nativeSrc": "2636:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2655:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2663:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2663:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2577:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2577:58:9"
																},
																"nativeSrc": "2577:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2577:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2568:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2568:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2318:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2369:6:9",
														"nodeType": "YulTypedName",
														"src": "2369:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2377:3:9",
														"nodeType": "YulTypedName",
														"src": "2377:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2385:5:9",
														"nodeType": "YulTypedName",
														"src": "2385:5:9",
														"type": ""
													}
												],
												"src": "2318:355:9"
											},
											{
												"body": {
													"nativeSrc": "2793:739:9",
													"nodeType": "YulBlock",
													"src": "2793:739:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2839:83:9",
																"nodeType": "YulBlock",
																"src": "2839:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2841:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2841:77:9"
																			},
																			"nativeSrc": "2841:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:79:9"
																		},
																		"nativeSrc": "2841:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2814:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2814:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2823:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2810:3:9"
																		},
																		"nativeSrc": "2810:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2810:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2806:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:9"
																},
																"nativeSrc": "2806:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2806:32:9"
															},
															"nativeSrc": "2803:119:9",
															"nodeType": "YulIf",
															"src": "2803:119:9"
														},
														{
															"nativeSrc": "2932:291:9",
															"nodeType": "YulBlock",
															"src": "2932:291:9",
															"statements": [
																{
																	"nativeSrc": "2947:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2947:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2971:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2971:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2982:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2982:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2967:3:9"
																				},
																				"nativeSrc": "2967:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2967:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2961:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2961:5:9"
																		},
																		"nativeSrc": "2961:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2951:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2951:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3032:83:9",
																		"nodeType": "YulBlock",
																		"src": "3032:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3034:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3034:77:9"
																					},
																					"nativeSrc": "3034:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3034:79:9"
																				},
																				"nativeSrc": "3034:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3034:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3004:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3004:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3012:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3012:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3001:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3001:2:9"
																		},
																		"nativeSrc": "3001:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:30:9"
																	},
																	"nativeSrc": "2998:117:9",
																	"nodeType": "YulIf",
																	"src": "2998:117:9"
																},
																{
																	"nativeSrc": "3129:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3129:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3185:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3185:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3196:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3196:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3181:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3181:3:9"
																				},
																				"nativeSrc": "3181:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3181:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3205:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3205:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3139:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3139:41:9"
																		},
																		"nativeSrc": "3139:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3129:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3129:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3233:292:9",
															"nodeType": "YulBlock",
															"src": "3233:292:9",
															"statements": [
																{
																	"nativeSrc": "3248:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3248:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3272:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3272:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3283:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3283:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3268:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3268:3:9"
																				},
																				"nativeSrc": "3268:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3268:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3262:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3262:5:9"
																		},
																		"nativeSrc": "3262:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3262:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3252:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3252:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3334:83:9",
																		"nodeType": "YulBlock",
																		"src": "3334:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3336:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3336:77:9"
																					},
																					"nativeSrc": "3336:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3336:79:9"
																				},
																				"nativeSrc": "3336:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3336:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3306:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3306:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3314:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3303:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3303:2:9"
																		},
																		"nativeSrc": "3303:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:30:9"
																	},
																	"nativeSrc": "3300:117:9",
																	"nodeType": "YulIf",
																	"src": "3300:117:9"
																},
																{
																	"nativeSrc": "3431:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3431:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3487:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3487:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3498:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3498:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3483:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:9"
																				},
																				"nativeSrc": "3483:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3483:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3507:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3441:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3441:41:9"
																		},
																		"nativeSrc": "3441:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3431:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3431:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2679:853:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2755:9:9",
														"nodeType": "YulTypedName",
														"src": "2755:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2766:7:9",
														"nodeType": "YulTypedName",
														"src": "2766:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2778:6:9",
														"nodeType": "YulTypedName",
														"src": "2778:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2786:6:9",
														"nodeType": "YulTypedName",
														"src": "2786:6:9",
														"type": ""
													}
												],
												"src": "2679:853:9"
											},
											{
												"body": {
													"nativeSrc": "3597:40:9",
													"nodeType": "YulBlock",
													"src": "3597:40:9",
													"statements": [
														{
															"nativeSrc": "3608:22:9",
															"nodeType": "YulAssignment",
															"src": "3608:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3624:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3624:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3618:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3618:5:9"
																},
																"nativeSrc": "3618:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3618:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3538:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3580:5:9",
														"nodeType": "YulTypedName",
														"src": "3580:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3590:6:9",
														"nodeType": "YulTypedName",
														"src": "3590:6:9",
														"type": ""
													}
												],
												"src": "3538:99:9"
											},
											{
												"body": {
													"nativeSrc": "3671:152:9",
													"nodeType": "YulBlock",
													"src": "3671:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3688:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3688:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3691:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3691:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3681:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:9"
																},
																"nativeSrc": "3681:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3681:88:9"
															},
															"nativeSrc": "3681:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3681:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3785:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3785:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3788:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3788:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3778:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:9"
																},
																"nativeSrc": "3778:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3778:15:9"
															},
															"nativeSrc": "3778:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3778:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3809:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3809:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3812:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3812:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3802:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:9"
																},
																"nativeSrc": "3802:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3802:15:9"
															},
															"nativeSrc": "3802:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3802:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3643:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3643:180:9"
											},
											{
												"body": {
													"nativeSrc": "3880:269:9",
													"nodeType": "YulBlock",
													"src": "3880:269:9",
													"statements": [
														{
															"nativeSrc": "3890:22:9",
															"nodeType": "YulAssignment",
															"src": "3890:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3904:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3904:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3910:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3910:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3900:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:9"
																},
																"nativeSrc": "3900:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3900:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3890:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:9"
																}
															]
														},
														{
															"nativeSrc": "3921:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3921:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3951:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3951:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3957:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3947:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3947:3:9"
																},
																"nativeSrc": "3947:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3947:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3925:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3925:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3998:51:9",
																"nodeType": "YulBlock",
																"src": "3998:51:9",
																"statements": [
																	{
																		"nativeSrc": "4012:27:9",
																		"nodeType": "YulAssignment",
																		"src": "4012:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4026:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4026:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4034:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4034:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4022:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4022:3:9"
																			},
																			"nativeSrc": "4022:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4022:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3978:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3978:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3971:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:9"
																},
																"nativeSrc": "3971:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3971:26:9"
															},
															"nativeSrc": "3968:81:9",
															"nodeType": "YulIf",
															"src": "3968:81:9"
														},
														{
															"body": {
																"nativeSrc": "4101:42:9",
																"nodeType": "YulBlock",
																"src": "4101:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4115:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4115:16:9"
																			},
																			"nativeSrc": "4115:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4115:18:9"
																		},
																		"nativeSrc": "4115:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4065:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4065:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4088:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4088:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4085:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4085:2:9"
																		},
																		"nativeSrc": "4085:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4085:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4062:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4062:2:9"
																},
																"nativeSrc": "4062:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4062:38:9"
															},
															"nativeSrc": "4059:84:9",
															"nodeType": "YulIf",
															"src": "4059:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3829:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3864:4:9",
														"nodeType": "YulTypedName",
														"src": "3864:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3873:6:9",
														"nodeType": "YulTypedName",
														"src": "3873:6:9",
														"type": ""
													}
												],
												"src": "3829:320:9"
											},
											{
												"body": {
													"nativeSrc": "4209:87:9",
													"nodeType": "YulBlock",
													"src": "4209:87:9",
													"statements": [
														{
															"nativeSrc": "4219:11:9",
															"nodeType": "YulAssignment",
															"src": "4219:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "4227:3:9",
																"nodeType": "YulIdentifier",
																"src": "4227:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4219:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4219:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4247:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4247:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4250:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4250:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:9"
																},
																"nativeSrc": "4240:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4240:14:9"
															},
															"nativeSrc": "4240:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4240:14:9"
														},
														{
															"nativeSrc": "4263:26:9",
															"nodeType": "YulAssignment",
															"src": "4263:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4281:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4281:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4284:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4284:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4271:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4271:9:9"
																},
																"nativeSrc": "4271:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4271:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4263:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4263:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4155:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4196:3:9",
														"nodeType": "YulTypedName",
														"src": "4196:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4204:4:9",
														"nodeType": "YulTypedName",
														"src": "4204:4:9",
														"type": ""
													}
												],
												"src": "4155:141:9"
											},
											{
												"body": {
													"nativeSrc": "4346:49:9",
													"nodeType": "YulBlock",
													"src": "4346:49:9",
													"statements": [
														{
															"nativeSrc": "4356:33:9",
															"nodeType": "YulAssignment",
															"src": "4356:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4374:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4374:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4381:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4381:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:9"
																		},
																		"nativeSrc": "4370:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4386:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:9"
																},
																"nativeSrc": "4366:23:9",
																"nodeType": "YulFunctionCall",
																"src": "4366:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4356:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4302:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4329:5:9",
														"nodeType": "YulTypedName",
														"src": "4329:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4339:6:9",
														"nodeType": "YulTypedName",
														"src": "4339:6:9",
														"type": ""
													}
												],
												"src": "4302:93:9"
											},
											{
												"body": {
													"nativeSrc": "4454:54:9",
													"nodeType": "YulBlock",
													"src": "4454:54:9",
													"statements": [
														{
															"nativeSrc": "4464:37:9",
															"nodeType": "YulAssignment",
															"src": "4464:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4489:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4489:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4495:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4495:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:9"
																},
																"nativeSrc": "4485:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4485:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4464:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4464:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4401:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4429:4:9",
														"nodeType": "YulTypedName",
														"src": "4429:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4435:5:9",
														"nodeType": "YulTypedName",
														"src": "4435:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4445:8:9",
														"nodeType": "YulTypedName",
														"src": "4445:8:9",
														"type": ""
													}
												],
												"src": "4401:107:9"
											},
											{
												"body": {
													"nativeSrc": "4590:317:9",
													"nodeType": "YulBlock",
													"src": "4590:317:9",
													"statements": [
														{
															"nativeSrc": "4600:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4600:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4621:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4621:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4633:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4617:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4617:3:9"
																},
																"nativeSrc": "4617:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4617:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4604:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4604:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4644:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4644:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4675:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:66:9",
																		"nodeType": "YulLiteral",
																		"src": "4686:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4656:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4656:18:9"
																},
																"nativeSrc": "4656:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4656:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4648:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4648:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4762:51:9",
															"nodeType": "YulAssignment",
															"src": "4762:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4793:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4793:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4804:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "4804:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4774:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4774:18:9"
																},
																"nativeSrc": "4774:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4774:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4762:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4762:8:9"
																}
															]
														},
														{
															"nativeSrc": "4822:30:9",
															"nodeType": "YulAssignment",
															"src": "4822:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4835:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4835:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4846:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4846:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4842:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:9"
																		},
																		"nativeSrc": "4842:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4842:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4831:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:9"
																},
																"nativeSrc": "4831:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4831:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4822:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4822:5:9"
																}
															]
														},
														{
															"nativeSrc": "4861:40:9",
															"nodeType": "YulAssignment",
															"src": "4861:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4874:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4874:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4885:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4885:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4895:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4895:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4881:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:9"
																		},
																		"nativeSrc": "4881:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4881:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4871:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4871:2:9"
																},
																"nativeSrc": "4871:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4871:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4861:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4514:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4551:5:9",
														"nodeType": "YulTypedName",
														"src": "4551:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4558:10:9",
														"nodeType": "YulTypedName",
														"src": "4558:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4570:8:9",
														"nodeType": "YulTypedName",
														"src": "4570:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4583:6:9",
														"nodeType": "YulTypedName",
														"src": "4583:6:9",
														"type": ""
													}
												],
												"src": "4514:393:9"
											},
											{
												"body": {
													"nativeSrc": "4958:32:9",
													"nodeType": "YulBlock",
													"src": "4958:32:9",
													"statements": [
														{
															"nativeSrc": "4968:16:9",
															"nodeType": "YulAssignment",
															"src": "4968:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4979:5:9",
																"nodeType": "YulIdentifier",
																"src": "4979:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4968:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4968:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4913:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4940:5:9",
														"nodeType": "YulTypedName",
														"src": "4940:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4950:7:9",
														"nodeType": "YulTypedName",
														"src": "4950:7:9",
														"type": ""
													}
												],
												"src": "4913:77:9"
											},
											{
												"body": {
													"nativeSrc": "5028:28:9",
													"nodeType": "YulBlock",
													"src": "5028:28:9",
													"statements": [
														{
															"nativeSrc": "5038:12:9",
															"nodeType": "YulAssignment",
															"src": "5038:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5045:5:9",
																"nodeType": "YulIdentifier",
																"src": "5045:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5038:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5038:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4996:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5014:5:9",
														"nodeType": "YulTypedName",
														"src": "5014:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5024:3:9",
														"nodeType": "YulTypedName",
														"src": "5024:3:9",
														"type": ""
													}
												],
												"src": "4996:60:9"
											},
											{
												"body": {
													"nativeSrc": "5122:82:9",
													"nodeType": "YulBlock",
													"src": "5122:82:9",
													"statements": [
														{
															"nativeSrc": "5132:66:9",
															"nodeType": "YulAssignment",
															"src": "5132:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5190:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5190:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5172:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5172:17:9"
																				},
																				"nativeSrc": "5172:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5163:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5163:8:9"
																		},
																		"nativeSrc": "5163:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5145:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5145:17:9"
																},
																"nativeSrc": "5145:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5145:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5132:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5132:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5062:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5102:5:9",
														"nodeType": "YulTypedName",
														"src": "5102:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5112:9:9",
														"nodeType": "YulTypedName",
														"src": "5112:9:9",
														"type": ""
													}
												],
												"src": "5062:142:9"
											},
											{
												"body": {
													"nativeSrc": "5257:28:9",
													"nodeType": "YulBlock",
													"src": "5257:28:9",
													"statements": [
														{
															"nativeSrc": "5267:12:9",
															"nodeType": "YulAssignment",
															"src": "5267:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5274:5:9",
																"nodeType": "YulIdentifier",
																"src": "5274:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5267:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5210:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:9",
														"nodeType": "YulTypedName",
														"src": "5243:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5253:3:9",
														"nodeType": "YulTypedName",
														"src": "5253:3:9",
														"type": ""
													}
												],
												"src": "5210:75:9"
											},
											{
												"body": {
													"nativeSrc": "5367:193:9",
													"nodeType": "YulBlock",
													"src": "5367:193:9",
													"statements": [
														{
															"nativeSrc": "5377:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5377:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5432:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "5432:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5401:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5401:30:9"
																},
																"nativeSrc": "5401:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5401:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5381:16:9",
																	"nodeType": "YulTypedName",
																	"src": "5381:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5456:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5456:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5496:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "5496:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5490:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5490:5:9"
																				},
																				"nativeSrc": "5490:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5490:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5503:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5503:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5535:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "5535:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5511:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "5511:23:9"
																				},
																				"nativeSrc": "5511:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5511:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5462:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5462:27:9"
																		},
																		"nativeSrc": "5462:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5449:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5449:6:9"
																},
																"nativeSrc": "5449:105:9",
																"nodeType": "YulFunctionCall",
																"src": "5449:105:9"
															},
															"nativeSrc": "5449:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "5449:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5291:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5344:4:9",
														"nodeType": "YulTypedName",
														"src": "5344:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5350:6:9",
														"nodeType": "YulTypedName",
														"src": "5350:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5358:7:9",
														"nodeType": "YulTypedName",
														"src": "5358:7:9",
														"type": ""
													}
												],
												"src": "5291:269:9"
											},
											{
												"body": {
													"nativeSrc": "5615:24:9",
													"nodeType": "YulBlock",
													"src": "5615:24:9",
													"statements": [
														{
															"nativeSrc": "5625:8:9",
															"nodeType": "YulAssignment",
															"src": "5625:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5632:1:9",
																"nodeType": "YulLiteral",
																"src": "5632:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5625:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5566:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5611:3:9",
														"nodeType": "YulTypedName",
														"src": "5611:3:9",
														"type": ""
													}
												],
												"src": "5566:73:9"
											},
											{
												"body": {
													"nativeSrc": "5698:136:9",
													"nodeType": "YulBlock",
													"src": "5698:136:9",
													"statements": [
														{
															"nativeSrc": "5708:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5708:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5722:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5722:30:9"
																},
																"nativeSrc": "5722:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5722:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5712:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5712:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5807:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5807:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5813:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5821:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5821:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5763:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5763:43:9"
																},
																"nativeSrc": "5763:65:9",
																"nodeType": "YulFunctionCall",
																"src": "5763:65:9"
															},
															"nativeSrc": "5763:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "5763:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5645:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5684:4:9",
														"nodeType": "YulTypedName",
														"src": "5684:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5690:6:9",
														"nodeType": "YulTypedName",
														"src": "5690:6:9",
														"type": ""
													}
												],
												"src": "5645:189:9"
											},
											{
												"body": {
													"nativeSrc": "5890:136:9",
													"nodeType": "YulBlock",
													"src": "5890:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5957:63:9",
																"nodeType": "YulBlock",
																"src": "5957:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6001:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6001:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6008:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6008:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5971:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "5971:29:9"
																			},
																			"nativeSrc": "5971:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5971:39:9"
																		},
																		"nativeSrc": "5971:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5971:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5910:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5917:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5917:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5907:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5907:2:9"
																},
																"nativeSrc": "5907:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5907:14:9"
															},
															"nativeSrc": "5900:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5922:26:9",
																"nodeType": "YulBlock",
																"src": "5922:26:9",
																"statements": [
																	{
																		"nativeSrc": "5924:22:9",
																		"nodeType": "YulAssignment",
																		"src": "5924:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5937:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5937:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5944:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5944:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5933:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5933:3:9"
																			},
																			"nativeSrc": "5933:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5924:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5924:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5904:2:9",
																"nodeType": "YulBlock",
																"src": "5904:2:9",
																"statements": []
															},
															"src": "5900:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5840:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5878:5:9",
														"nodeType": "YulTypedName",
														"src": "5878:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5885:3:9",
														"nodeType": "YulTypedName",
														"src": "5885:3:9",
														"type": ""
													}
												],
												"src": "5840:186:9"
											},
											{
												"body": {
													"nativeSrc": "6111:464:9",
													"nodeType": "YulBlock",
													"src": "6111:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6137:431:9",
																"nodeType": "YulBlock",
																"src": "6137:431:9",
																"statements": [
																	{
																		"nativeSrc": "6151:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6151:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6199:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6199:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6167:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "6167:31:9"
																			},
																			"nativeSrc": "6167:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6167:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6155:8:9",
																				"nodeType": "YulTypedName",
																				"src": "6155:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6218:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6218:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6241:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "6241:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6269:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6269:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6251:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "6251:17:9"
																					},
																					"nativeSrc": "6251:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6251:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6237:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6237:3:9"
																			},
																			"nativeSrc": "6237:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6237:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6222:11:9",
																				"nodeType": "YulTypedName",
																				"src": "6222:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6438:27:9",
																			"nodeType": "YulBlock",
																			"src": "6438:27:9",
																			"statements": [
																				{
																					"nativeSrc": "6440:23:9",
																					"nodeType": "YulAssignment",
																					"src": "6440:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6455:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "6455:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6440:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "6440:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6422:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6422:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6434:2:9",
																					"nodeType": "YulLiteral",
																					"src": "6434:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6419:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "6419:2:9"
																			},
																			"nativeSrc": "6419:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6419:18:9"
																		},
																		"nativeSrc": "6416:49:9",
																		"nodeType": "YulIf",
																		"src": "6416:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6507:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "6507:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6524:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "6524:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6552:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6552:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6534:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "6534:17:9"
																							},
																							"nativeSrc": "6534:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6534:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6520:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6520:3:9"
																					},
																					"nativeSrc": "6520:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6520:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6478:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "6478:28:9"
																			},
																			"nativeSrc": "6478:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6478:80:9"
																		},
																		"nativeSrc": "6478:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6478:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6128:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6128:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6133:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6133:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6125:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6125:2:9"
																},
																"nativeSrc": "6125:11:9",
																"nodeType": "YulFunctionCall",
																"src": "6125:11:9"
															},
															"nativeSrc": "6122:446:9",
															"nodeType": "YulIf",
															"src": "6122:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6032:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6087:5:9",
														"nodeType": "YulTypedName",
														"src": "6087:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6094:3:9",
														"nodeType": "YulTypedName",
														"src": "6094:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6099:10:9",
														"nodeType": "YulTypedName",
														"src": "6099:10:9",
														"type": ""
													}
												],
												"src": "6032:543:9"
											},
											{
												"body": {
													"nativeSrc": "6644:54:9",
													"nodeType": "YulBlock",
													"src": "6644:54:9",
													"statements": [
														{
															"nativeSrc": "6654:37:9",
															"nodeType": "YulAssignment",
															"src": "6654:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6679:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6679:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6685:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6685:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6675:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:9"
																},
																"nativeSrc": "6675:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6675:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6654:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6654:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6581:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6619:4:9",
														"nodeType": "YulTypedName",
														"src": "6619:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6625:5:9",
														"nodeType": "YulTypedName",
														"src": "6625:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6635:8:9",
														"nodeType": "YulTypedName",
														"src": "6635:8:9",
														"type": ""
													}
												],
												"src": "6581:117:9"
											},
											{
												"body": {
													"nativeSrc": "6755:118:9",
													"nodeType": "YulBlock",
													"src": "6755:118:9",
													"statements": [
														{
															"nativeSrc": "6765:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6765:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6814:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6814:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6817:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6817:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6810:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				"nativeSrc": "6810:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6810:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6829:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6829:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6825:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6825:3:9"
																				},
																				"nativeSrc": "6825:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6825:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6781:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "6781:28:9"
																		},
																		"nativeSrc": "6781:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6781:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6777:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:9"
																},
																"nativeSrc": "6777:56:9",
																"nodeType": "YulFunctionCall",
																"src": "6777:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6769:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6769:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6842:25:9",
															"nodeType": "YulAssignment",
															"src": "6842:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6856:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6856:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6862:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6862:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6852:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:9"
																},
																"nativeSrc": "6852:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6852:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6842:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6704:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6732:4:9",
														"nodeType": "YulTypedName",
														"src": "6732:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6738:5:9",
														"nodeType": "YulTypedName",
														"src": "6738:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6748:6:9",
														"nodeType": "YulTypedName",
														"src": "6748:6:9",
														"type": ""
													}
												],
												"src": "6704:169:9"
											},
											{
												"body": {
													"nativeSrc": "6959:214:9",
													"nodeType": "YulBlock",
													"src": "6959:214:9",
													"statements": [
														{
															"nativeSrc": "7092:37:9",
															"nodeType": "YulAssignment",
															"src": "7092:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7119:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7125:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7100:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7100:18:9"
																},
																"nativeSrc": "7100:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7100:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7092:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7092:4:9"
																}
															]
														},
														{
															"nativeSrc": "7138:29:9",
															"nodeType": "YulAssignment",
															"src": "7138:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7149:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7149:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7159:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7159:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7162:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7162:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7155:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7155:3:9"
																		},
																		"nativeSrc": "7155:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7155:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7146:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7146:2:9"
																},
																"nativeSrc": "7146:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7146:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7138:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7138:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6878:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6940:4:9",
														"nodeType": "YulTypedName",
														"src": "6940:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6946:3:9",
														"nodeType": "YulTypedName",
														"src": "6946:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6954:4:9",
														"nodeType": "YulTypedName",
														"src": "6954:4:9",
														"type": ""
													}
												],
												"src": "6878:295:9"
											},
											{
												"body": {
													"nativeSrc": "7270:1303:9",
													"nodeType": "YulBlock",
													"src": "7270:1303:9",
													"statements": [
														{
															"nativeSrc": "7281:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7281:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7328:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7328:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7295:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "7295:32:9"
																},
																"nativeSrc": "7295:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7295:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7285:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7285:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7417:22:9",
																"nodeType": "YulBlock",
																"src": "7417:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7419:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7419:16:9"
																			},
																			"nativeSrc": "7419:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7419:18:9"
																		},
																		"nativeSrc": "7419:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7419:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7389:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7389:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7397:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7397:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7386:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7386:2:9"
																},
																"nativeSrc": "7386:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7386:30:9"
															},
															"nativeSrc": "7383:56:9",
															"nodeType": "YulIf",
															"src": "7383:56:9"
														},
														{
															"nativeSrc": "7449:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7449:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7495:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7495:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7489:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7489:5:9"
																		},
																		"nativeSrc": "7489:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7489:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7463:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7463:25:9"
																},
																"nativeSrc": "7463:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7463:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7453:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7453:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7594:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7594:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7600:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7600:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7608:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7608:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7548:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "7548:45:9"
																},
																"nativeSrc": "7548:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7548:67:9"
															},
															"nativeSrc": "7548:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "7548:67:9"
														},
														{
															"nativeSrc": "7625:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7625:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7642:1:9",
																"nodeType": "YulLiteral",
																"src": "7642:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7629:9:9",
																	"nodeType": "YulTypedName",
																	"src": "7629:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7653:17:9",
															"nodeType": "YulAssignment",
															"src": "7653:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7666:4:9",
																"nodeType": "YulLiteral",
																"src": "7666:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7653:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7653:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7717:611:9",
																		"nodeType": "YulBlock",
																		"src": "7717:611:9",
																		"statements": [
																			{
																				"nativeSrc": "7731:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7731:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7750:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7750:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7762:4:9",
																									"nodeType": "YulLiteral",
																									"src": "7762:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7758:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7758:3:9"
																							},
																							"nativeSrc": "7758:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7758:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7746:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7746:3:9"
																					},
																					"nativeSrc": "7746:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7746:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7735:7:9",
																						"nodeType": "YulTypedName",
																						"src": "7735:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7782:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7782:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7828:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7828:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7796:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "7796:31:9"
																					},
																					"nativeSrc": "7796:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7796:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7786:6:9",
																						"nodeType": "YulTypedName",
																						"src": "7786:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7846:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7846:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7855:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7855:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7850:1:9",
																						"nodeType": "YulTypedName",
																						"src": "7850:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7914:163:9",
																					"nodeType": "YulBlock",
																					"src": "7914:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7939:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7939:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7957:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "7957:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7962:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "7962:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7953:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7953:3:9"
																												},
																												"nativeSrc": "7953:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7953:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7947:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "7947:5:9"
																										},
																										"nativeSrc": "7947:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7947:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7932:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7932:6:9"
																								},
																								"nativeSrc": "7932:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7932:42:9"
																							},
																							"nativeSrc": "7932:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7932:42:9"
																						},
																						{
																							"nativeSrc": "7991:24:9",
																							"nodeType": "YulAssignment",
																							"src": "7991:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8005:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8005:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8013:1:9",
																										"nodeType": "YulLiteral",
																										"src": "8013:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8001:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8001:3:9"
																								},
																								"nativeSrc": "8001:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8001:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7991:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7991:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8032:31:9",
																							"nodeType": "YulAssignment",
																							"src": "8032:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8049:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "8049:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8060:2:9",
																										"nodeType": "YulLiteral",
																										"src": "8060:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8045:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8045:3:9"
																								},
																								"nativeSrc": "8045:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8045:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8032:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "8032:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7880:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "7880:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7883:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7883:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7877:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7877:2:9"
																					},
																					"nativeSrc": "7877:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7877:14:9"
																				},
																				"nativeSrc": "7869:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7892:21:9",
																					"nodeType": "YulBlock",
																					"src": "7892:21:9",
																					"statements": [
																						{
																							"nativeSrc": "7894:17:9",
																							"nodeType": "YulAssignment",
																							"src": "7894:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7903:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "7903:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7906:4:9",
																										"nodeType": "YulLiteral",
																										"src": "7906:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7899:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7899:3:9"
																								},
																								"nativeSrc": "7899:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7899:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7894:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "7894:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7873:3:9",
																					"nodeType": "YulBlock",
																					"src": "7873:3:9",
																					"statements": []
																				},
																				"src": "7869:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "8113:156:9",
																					"nodeType": "YulBlock",
																					"src": "8113:156:9",
																					"statements": [
																						{
																							"nativeSrc": "8131:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8131:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8158:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8158:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8163:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8163:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8154:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8154:3:9"
																										},
																										"nativeSrc": "8154:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8154:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8148:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8148:5:9"
																								},
																								"nativeSrc": "8148:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8148:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8135:9:9",
																									"nodeType": "YulTypedName",
																									"src": "8135:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8198:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8198:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8225:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8225:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8240:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "8240:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8248:4:9",
																														"nodeType": "YulLiteral",
																														"src": "8248:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8236:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8236:3:9"
																												},
																												"nativeSrc": "8236:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8236:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8206:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "8206:18:9"
																										},
																										"nativeSrc": "8206:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8206:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8191:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8191:6:9"
																								},
																								"nativeSrc": "8191:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8191:64:9"
																							},
																							"nativeSrc": "8191:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8191:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8096:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8096:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8105:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8105:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8093:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8093:2:9"
																					},
																					"nativeSrc": "8093:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8093:19:9"
																				},
																				"nativeSrc": "8090:179:9",
																				"nodeType": "YulIf",
																				"src": "8090:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8289:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8289:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8303:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "8303:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8311:1:9",
																											"nodeType": "YulLiteral",
																											"src": "8311:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8299:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "8299:3:9"
																									},
																									"nativeSrc": "8299:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "8299:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8315:1:9",
																									"nodeType": "YulLiteral",
																									"src": "8315:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8295:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8295:3:9"
																							},
																							"nativeSrc": "8295:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8295:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8282:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8282:6:9"
																					},
																					"nativeSrc": "8282:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8282:36:9"
																				},
																				"nativeSrc": "8282:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8282:36:9"
																			}
																		]
																	},
																	"nativeSrc": "7710:618:9",
																	"nodeType": "YulCase",
																	"src": "7710:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7715:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7715:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8345:222:9",
																		"nodeType": "YulBlock",
																		"src": "8345:222:9",
																		"statements": [
																			{
																				"nativeSrc": "8359:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8359:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8372:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8372:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8363:5:9",
																						"nodeType": "YulTypedName",
																						"src": "8363:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8396:67:9",
																					"nodeType": "YulBlock",
																					"src": "8396:67:9",
																					"statements": [
																						{
																							"nativeSrc": "8414:35:9",
																							"nodeType": "YulAssignment",
																							"src": "8414:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8433:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8433:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8438:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8438:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8429:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8429:3:9"
																										},
																										"nativeSrc": "8429:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8429:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8423:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8423:5:9"
																								},
																								"nativeSrc": "8423:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8423:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8414:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8414:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8389:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8389:6:9"
																				},
																				"nativeSrc": "8386:77:9",
																				"nodeType": "YulIf",
																				"src": "8386:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8483:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8483:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8542:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8542:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8549:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8489:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "8489:52:9"
																							},
																							"nativeSrc": "8489:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8489:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8476:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8476:6:9"
																					},
																					"nativeSrc": "8476:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8476:81:9"
																				},
																				"nativeSrc": "8476:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8476:81:9"
																			}
																		]
																	},
																	"nativeSrc": "8337:230:9",
																	"nodeType": "YulCase",
																	"src": "8337:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7690:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7690:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7698:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7687:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7687:2:9"
																},
																"nativeSrc": "7687:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7687:14:9"
															},
															"nativeSrc": "7680:887:9",
															"nodeType": "YulSwitch",
															"src": "7680:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7178:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7259:4:9",
														"nodeType": "YulTypedName",
														"src": "7259:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7265:3:9",
														"nodeType": "YulTypedName",
														"src": "7265:3:9",
														"type": ""
													}
												],
												"src": "7178:1395:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051612851380380612851833981810160405281019061003291906101ce565b81600090816100419190610467565b5080600190816100519190610467565b505050610539565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100c082610077565b810181811067ffffffffffffffff821117156100df576100de610088565b5b80604052505050565b60006100f2610059565b90506100fe82826100b7565b919050565b600067ffffffffffffffff82111561011e5761011d610088565b5b61012782610077565b9050602081019050919050565b60005b83811015610152578082015181840152602081019050610137565b60008484015250505050565b600061017161016c84610103565b6100e8565b90508281526020810184848401111561018d5761018c610072565b5b610198848285610134565b509392505050565b600082601f8301126101b5576101b461006d565b5b81516101c584826020860161015e565b91505092915050565b600080604083850312156101e5576101e4610063565b5b600083015167ffffffffffffffff81111561020357610202610068565b5b61020f858286016101a0565b925050602083015167ffffffffffffffff8111156102305761022f610068565b5b61023c858286016101a0565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061029857607f821691505b6020821081036102ab576102aa610251565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102d6565b61031d86836102d6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061036461035f61035a84610335565b61033f565b610335565b9050919050565b6000819050919050565b61037e83610349565b61039261038a8261036b565b8484546102e3565b825550505050565b600090565b6103a761039a565b6103b2818484610375565b505050565b5b818110156103d6576103cb60008261039f565b6001810190506103b8565b5050565b601f82111561041b576103ec816102b1565b6103f5846102c6565b81016020851015610404578190505b610418610410856102c6565b8301826103b7565b50505b505050565b600082821c905092915050565b600061043e60001984600802610420565b1980831691505092915050565b6000610457838361042d565b9150826002028217905092915050565b61047082610246565b67ffffffffffffffff81111561048957610488610088565b5b6104938254610280565b61049e8282856103da565b600060209050601f8311600181146104d157600084156104bf578287015190505b6104c9858261044b565b865550610531565b601f1984166104df866102b1565b60005b82811015610507578489015182556001820191506020850194506020810190506104e2565b868310156105245784890151610520601f89168261042d565b8355505b6001600288020188555050505b505050505050565b612309806105486000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634e6ec24711610097578063a22cb46511610066578063a22cb46514610296578063b88d4fde146102b2578063c87b56dd146102ce578063e985e9c5146102fe576100f5565b80634e6ec247146101fc5780636352211e1461021857806370a082311461024857806395d89b4114610278576100f5565b8063095ea7b3116100d3578063095ea7b314610178578063162790551461019457806323b872dd146101c457806342842e0e146101e0576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f91906116e4565b61032e565b604051610121919061172c565b60405180910390f35b610132610468565b60405161013f91906117d7565b60405180910390f35b610162600480360381019061015d919061182f565b6104f6565b60405161016f919061189d565b60405180910390f35b610192600480360381019061018d91906118e4565b6105d4565b005b6101ae60048036038101906101a99190611924565b61071b565b6040516101bb919061172c565b60405180910390f35b6101de60048036038101906101d99190611951565b610734565b005b6101fa60048036038101906101f59190611951565b61079d565b005b610216600480360381019061021191906118e4565b6107bd565b005b610232600480360381019061022d919061182f565b6109d7565b60405161023f919061189d565b60405180910390f35b610262600480360381019061025d9190611924565b610a83565b60405161026f91906119b3565b60405180910390f35b610280610b3a565b60405161028d91906117d7565b60405180910390f35b6102b060048036038101906102ab91906119fa565b610bc8565b005b6102cc60048036038101906102c79190611b6f565b610cc5565b005b6102e860048036038101906102e3919061182f565b610d30565b6040516102f591906117d7565b60405180910390f35b61031860048036038101906103139190611bf2565b610e31565b604051610325919061172c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f957507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461047590611c61565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611c61565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090611cde565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106cc5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290611d4a565b60405180910390fd5b610716818484610ec5565b505050565b600080823b905060008163ffffffff1611915050919050565b600061073f826109d7565b905061074c813384610f77565b61078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290611db6565b60405180910390fd5b610797818585856110ab565b50505050565b6107b883838360405180602001604052806000815250610cc5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082390611e22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611e8e565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091e9190611edd565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7590611cde565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611f5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610b4790611c61565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7390611c61565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb9919061172c565b60405180910390a35050565b6000610cd0836109d7565b9050610cdd813385610f77565b610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1390611db6565b60405180910390fd5b610d2981868686866112f5565b5050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcb90611fc9565b60405180910390fd5b6000610dde611353565b90506000815111610dfe5760405180602001604052806000815250610e29565b80610e088461136a565b604051602001610e19929190612025565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061101157508273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806110a25750600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b90509392505050565b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111090612095565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f90612101565b60405180910390fd5b61119484600083610ec5565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111e49190612121565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123b9190611edd565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b611301858585856110ab565b61130d84848484611438565b61134c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611343906121a1565b60405180910390fd5b5050505050565b606060405180602001604052806000815250905090565b60606000600161137984611525565b01905060008167ffffffffffffffff81111561139857611397611a44565b5b6040519080825280601f01601f1916602001820160405280156113ca5781602001600182028036833780820191505090505b509050600082602001820190505b60011561142d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611421576114206121c1565b5b049450600085036113d8575b819350505050919050565b60006114438461071b565b156115185763150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114ae9493929190612245565b6020604051808303816000875af11580156114cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f191906122a6565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905061151d565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611583577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611579576115786121c1565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106115c0576d04ee2d6d415b85acef810000000083816115b6576115b56121c1565b5b0492506020810190505b662386f26fc1000083106115ef57662386f26fc1000083816115e5576115e46121c1565b5b0492506010810190505b6305f5e1008310611618576305f5e100838161160e5761160d6121c1565b5b0492506008810190505b612710831061163d576127108381611633576116326121c1565b5b0492506004810190505b606483106116605760648381611656576116556121c1565b5b0492506002810190505b600a831061166f576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116c18161168c565b81146116cc57600080fd5b50565b6000813590506116de816116b8565b92915050565b6000602082840312156116fa576116f9611682565b5b6000611708848285016116cf565b91505092915050565b60008115159050919050565b61172681611711565b82525050565b6000602082019050611741600083018461171d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611781578082015181840152602081019050611766565b60008484015250505050565b6000601f19601f8301169050919050565b60006117a982611747565b6117b38185611752565b93506117c3818560208601611763565b6117cc8161178d565b840191505092915050565b600060208201905081810360008301526117f1818461179e565b905092915050565b6000819050919050565b61180c816117f9565b811461181757600080fd5b50565b60008135905061182981611803565b92915050565b60006020828403121561184557611844611682565b5b60006118538482850161181a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118878261185c565b9050919050565b6118978161187c565b82525050565b60006020820190506118b2600083018461188e565b92915050565b6118c18161187c565b81146118cc57600080fd5b50565b6000813590506118de816118b8565b92915050565b600080604083850312156118fb576118fa611682565b5b6000611909858286016118cf565b925050602061191a8582860161181a565b9150509250929050565b60006020828403121561193a57611939611682565b5b6000611948848285016118cf565b91505092915050565b60008060006060848603121561196a57611969611682565b5b6000611978868287016118cf565b9350506020611989868287016118cf565b925050604061199a8682870161181a565b9150509250925092565b6119ad816117f9565b82525050565b60006020820190506119c860008301846119a4565b92915050565b6119d781611711565b81146119e257600080fd5b50565b6000813590506119f4816119ce565b92915050565b60008060408385031215611a1157611a10611682565b5b6000611a1f858286016118cf565b9250506020611a30858286016119e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7c8261178d565b810181811067ffffffffffffffff82111715611a9b57611a9a611a44565b5b80604052505050565b6000611aae611678565b9050611aba8282611a73565b919050565b600067ffffffffffffffff821115611ada57611ad9611a44565b5b611ae38261178d565b9050602081019050919050565b82818337600083830152505050565b6000611b12611b0d84611abf565b611aa4565b905082815260208101848484011115611b2e57611b2d611a3f565b5b611b39848285611af0565b509392505050565b600082601f830112611b5657611b55611a3a565b5b8135611b66848260208601611aff565b91505092915050565b60008060008060808587031215611b8957611b88611682565b5b6000611b97878288016118cf565b9450506020611ba8878288016118cf565b9350506040611bb98782880161181a565b925050606085013567ffffffffffffffff811115611bda57611bd9611687565b5b611be687828801611b41565b91505092959194509250565b60008060408385031215611c0957611c08611682565b5b6000611c17858286016118cf565b9250506020611c28858286016118cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7957607f821691505b602082108103611c8c57611c8b611c32565b5b50919050565b7f746f6b656e20646f65736e277420657869737400000000000000000000000000600082015250565b6000611cc8601383611752565b9150611cd382611c92565b602082019050919050565b60006020820190508181036000830152611cf781611cbb565b9050919050565b7f6e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c0000600082015250565b6000611d34601e83611752565b9150611d3f82611cfe565b602082019050919050565b60006020820190508181036000830152611d6381611d27565b9050919050565b7f6e6f74206f776e6572206e6f7220617070726f76656400000000000000000000600082015250565b6000611da0601683611752565b9150611dab82611d6a565b602082019050919050565b60006020820190508181036000830152611dcf81611d93565b9050919050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000611e0c601483611752565b9150611e1782611dd6565b602082019050919050565b60006020820190508181036000830152611e3b81611dff565b9050919050565b7f746f6b656e20616c7265616479206d696e746564000000000000000000000000600082015250565b6000611e78601483611752565b9150611e8382611e42565b602082019050919050565b60006020820190508181036000830152611ea781611e6b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ee8826117f9565b9150611ef3836117f9565b9250828201905080821115611f0b57611f0a611eae565b5b92915050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b6000611f47601483611752565b9150611f5282611f11565b602082019050919050565b60006020820190508181036000830152611f7681611f3a565b9050919050565b7f546f6b656e204e6f742045786973740000000000000000000000000000000000600082015250565b6000611fb3600f83611752565b9150611fbe82611f7d565b602082019050919050565b60006020820190508181036000830152611fe281611fa6565b9050919050565b600081905092915050565b6000611fff82611747565b6120098185611fe9565b9350612019818560208601611763565b80840191505092915050565b60006120318285611ff4565b915061203d8284611ff4565b91508190509392505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b600061207f600983611752565b915061208a82612049565b602082019050919050565b600060208201905081810360008301526120ae81612072565b9050919050565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b60006120eb601c83611752565b91506120f6826120b5565b602082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b600061212c826117f9565b9150612137836117f9565b925082820390508181111561214f5761214e611eae565b5b92915050565b7f6e6f742045524337323152656365697665720000000000000000000000000000600082015250565b600061218b601283611752565b915061219682612155565b602082019050919050565b600060208201905081810360008301526121ba8161217e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000612217826121f0565b61222181856121fb565b9350612231818560208601611763565b61223a8161178d565b840191505092915050565b600060808201905061225a600083018761188e565b612267602083018661188e565b61227460408301856119a4565b8181036060830152612286818461220c565b905095945050505050565b6000815190506122a0816116b8565b92915050565b6000602082840312156122bc576122bb611682565b5b60006122ca84828501612291565b9150509291505056fea264697066735822122038cdaaf94404bafd7ce5e5a142b54553458ce17ab56623e7ca0d623b6eb4586364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2851 CODESIZE SUB DUP1 PUSH2 0x2851 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST POP POP POP PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC0 DUP3 PUSH2 0x77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x88 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2 PUSH2 0x59 JUMP JUMPDEST SWAP1 POP PUSH2 0xFE DUP3 DUP3 PUSH2 0xB7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x88 JUMP JUMPDEST JUMPDEST PUSH2 0x127 DUP3 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171 PUSH2 0x16C DUP5 PUSH2 0x103 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18D JUMPI PUSH2 0x18C PUSH2 0x72 JUMP JUMPDEST JUMPDEST PUSH2 0x198 DUP5 DUP3 DUP6 PUSH2 0x134 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x6D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1C5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x63 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x68 JUMP JUMPDEST JUMPDEST PUSH2 0x20F DUP6 DUP3 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x68 JUMP JUMPDEST JUMPDEST PUSH2 0x23C DUP6 DUP3 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x251 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x313 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x31D DUP7 DUP4 PUSH2 0x2D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364 PUSH2 0x35F PUSH2 0x35A DUP5 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP4 PUSH2 0x349 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x38A DUP3 PUSH2 0x36B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3B2 DUP2 DUP5 DUP5 PUSH2 0x375 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3CB PUSH1 0x0 DUP3 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x3EC DUP2 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x3F5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x404 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x418 PUSH2 0x410 DUP6 PUSH2 0x2C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x420 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x470 DUP3 PUSH2 0x246 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0x88 JUMP JUMPDEST JUMPDEST PUSH2 0x493 DUP3 SLOAD PUSH2 0x280 JUMP JUMPDEST PUSH2 0x49E DUP3 DUP3 DUP6 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4BF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C9 DUP6 DUP3 PUSH2 0x44B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4DF DUP7 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x507 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2309 DUP1 PUSH2 0x548 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2FE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x461 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6CC JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x716 DUP2 DUP5 DUP5 PUSH2 0xEC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP3 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x74C DUP2 CALLER DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 DUP2 DUP6 DUP6 DUP6 PUSH2 0x10AB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA75 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xB47 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB73 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB95 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD0 DUP4 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDD DUP2 CALLER DUP6 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD29 DUP2 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12F5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDDE PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE29 JUMP JUMPDEST DUP1 PUSH2 0xE08 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1011 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x10A2 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1110 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 DUP5 PUSH1 0x0 DUP4 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x123B SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1301 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x130D DUP5 DUP5 DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1379 DUP5 PUSH2 0x1525 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x142D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x13D8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 DUP5 PUSH2 0x71B JUMP JUMPDEST ISZERO PUSH2 0x1518 JUMPI PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1583 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15C0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15EF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1618 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x163D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1660 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x166F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DE DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FA JUMPI PUSH2 0x16F9 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x16CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1726 DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1741 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x171D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1781 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A9 DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x17B3 DUP2 DUP6 PUSH2 0x1752 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x178D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F1 DUP2 DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DE DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP5 DUP3 DUP6 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1978 DUP7 DUP3 DUP8 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1989 DUP7 DUP3 DUP8 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x199A DUP7 DUP3 DUP8 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19AD DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D7 DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A11 JUMPI PUSH2 0x1A10 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A7C DUP3 PUSH2 0x178D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A9B JUMPI PUSH2 0x1A9A PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAE PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABA DUP3 DUP3 PUSH2 0x1A73 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1AE3 DUP3 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 PUSH2 0x1B0D DUP5 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B2E JUMPI PUSH2 0x1B2D PUSH2 0x1A3F JUMP JUMPDEST JUMPDEST PUSH2 0x1B39 DUP5 DUP3 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0x1A3A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B88 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B97 DUP8 DUP3 DUP9 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BA8 DUP8 DUP3 DUP9 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BB9 DUP8 DUP3 DUP9 ADD PUSH2 0x181A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1687 JUMP JUMPDEST JUMPDEST PUSH2 0x1BE6 DUP8 DUP3 DUP9 ADD PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C17 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20646F65736E277420657869737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC8 PUSH1 0x13 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD3 DUP3 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF7 DUP2 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D34 PUSH1 0x1E DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3F DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D63 DUP2 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E6572206E6F7220617070726F76656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 PUSH1 0x16 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E7420746F207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0C PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E17 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20616C7265616479206D696E746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E78 PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E83 DUP3 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EE8 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0B JUMPI PUSH2 0x1F0A PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F776E6572203D207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F47 PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F52 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F76 DUP2 PUSH2 0x1F3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E204E6F742045786973740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB3 PUSH1 0xF DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP3 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE2 DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFF DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x2009 DUP2 DUP6 PUSH2 0x1FE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2019 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2031 DUP3 DUP6 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x203D DUP3 DUP5 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207F PUSH1 0x9 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x208A DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20AE DUP2 PUSH2 0x2072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7472616E7366657220746F20746865207A65726F206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x1C DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2137 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742045524337323152656365697665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B PUSH1 0x12 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2217 DUP3 PUSH2 0x21F0 JUMP JUMPDEST PUSH2 0x2221 DUP2 DUP6 PUSH2 0x21FB JUMP JUMPDEST SWAP4 POP PUSH2 0x2231 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x223A DUP2 PUSH2 0x178D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x225A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2267 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2274 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2286 DUP2 DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A0 DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CA DUP5 DUP3 DUP6 ADD PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xCD 0xAA 0xF9 DIFFICULTY DIV 0xBA REVERT PUSH29 0xE5E5A142B54553458CE17AB56623E7CA0D623B6EB4586364736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1333:9194:8:-:0;;;2146:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2219:5;2212:4;:12;;;;;;:::i;:::-;;2243:7;2234:6;:16;;;;;;:::i;:::-;;2146:111;;1333:9194;;7:75:9;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:853::-;2778:6;2786;2835:2;2823:9;2814:7;2810:23;2806:32;2803:119;;;2841:79;;:::i;:::-;2803:119;2982:1;2971:9;2967:17;2961:24;3012:18;3004:6;3001:30;2998:117;;;3034:79;;:::i;:::-;2998:117;3139:74;3205:7;3196:6;3185:9;3181:22;3139:74;:::i;:::-;3129:84;;2932:291;3283:2;3272:9;3268:18;3262:25;3314:18;3306:6;3303:30;3300:117;;;3336:79;;:::i;:::-;3300:117;3441:74;3507:7;3498:6;3487:9;3483:22;3441:74;:::i;:::-;3431:84;;3233:292;2679:853;;;;;:::o;3538:99::-;3590:6;3624:5;3618:12;3608:22;;3538:99;;;:::o;3643:180::-;3691:77;3688:1;3681:88;3788:4;3785:1;3778:15;3812:4;3809:1;3802:15;3829:320;3873:6;3910:1;3904:4;3900:12;3890:22;;3957:1;3951:4;3947:12;3978:18;3968:81;;4034:4;4026:6;4022:17;4012:27;;3968:81;4096:2;4088:6;4085:14;4065:18;4062:38;4059:84;;4115:18;;:::i;:::-;4059:84;3880:269;3829:320;;;:::o;4155:141::-;4204:4;4227:3;4219:11;;4250:3;4247:1;4240:14;4284:4;4281:1;4271:18;4263:26;;4155:141;;;:::o;4302:93::-;4339:6;4386:2;4381;4374:5;4370:14;4366:23;4356:33;;4302:93;;;:::o;4401:107::-;4445:8;4495:5;4489:4;4485:16;4464:37;;4401:107;;;;:::o;4514:393::-;4583:6;4633:1;4621:10;4617:18;4656:97;4686:66;4675:9;4656:97;:::i;:::-;4774:39;4804:8;4793:9;4774:39;:::i;:::-;4762:51;;4846:4;4842:9;4835:5;4831:21;4822:30;;4895:4;4885:8;4881:19;4874:5;4871:30;4861:40;;4590:317;;4514:393;;;;;:::o;4913:77::-;4950:7;4979:5;4968:16;;4913:77;;;:::o;4996:60::-;5024:3;5045:5;5038:12;;4996:60;;;:::o;5062:142::-;5112:9;5145:53;5163:34;5172:24;5190:5;5172:24;:::i;:::-;5163:34;:::i;:::-;5145:53;:::i;:::-;5132:66;;5062:142;;;:::o;5210:75::-;5253:3;5274:5;5267:12;;5210:75;;;:::o;5291:269::-;5401:39;5432:7;5401:39;:::i;:::-;5462:91;5511:41;5535:16;5511:41;:::i;:::-;5503:6;5496:4;5490:11;5462:91;:::i;:::-;5456:4;5449:105;5367:193;5291:269;;;:::o;5566:73::-;5611:3;5566:73;:::o;5645:189::-;5722:32;;:::i;:::-;5763:65;5821:6;5813;5807:4;5763:65;:::i;:::-;5698:136;5645:189;;:::o;5840:186::-;5900:120;5917:3;5910:5;5907:14;5900:120;;;5971:39;6008:1;6001:5;5971:39;:::i;:::-;5944:1;5937:5;5933:13;5924:22;;5900:120;;;5840:186;;:::o;6032:543::-;6133:2;6128:3;6125:11;6122:446;;;6167:38;6199:5;6167:38;:::i;:::-;6251:29;6269:10;6251:29;:::i;:::-;6241:8;6237:44;6434:2;6422:10;6419:18;6416:49;;;6455:8;6440:23;;6416:49;6478:80;6534:22;6552:3;6534:22;:::i;:::-;6524:8;6520:37;6507:11;6478:80;:::i;:::-;6137:431;;6122:446;6032:543;;;:::o;6581:117::-;6635:8;6685:5;6679:4;6675:16;6654:37;;6581:117;;;;:::o;6704:169::-;6748:6;6781:51;6829:1;6825:6;6817:5;6814:1;6810:13;6781:51;:::i;:::-;6777:56;6862:4;6856;6852:15;6842:25;;6755:118;6704:169;;;;:::o;6878:295::-;6954:4;7100:29;7125:3;7119:4;7100:29;:::i;:::-;7092:37;;7162:3;7159:1;7155:11;7149:4;7146:21;7138:29;;6878:295;;;;:::o;7178:1395::-;7295:37;7328:3;7295:37;:::i;:::-;7397:18;7389:6;7386:30;7383:56;;;7419:18;;:::i;:::-;7383:56;7463:38;7495:4;7489:11;7463:38;:::i;:::-;7548:67;7608:6;7600;7594:4;7548:67;:::i;:::-;7642:1;7666:4;7653:17;;7698:2;7690:6;7687:14;7715:1;7710:618;;;;8372:1;8389:6;8386:77;;;8438:9;8433:3;8429:19;8423:26;8414:35;;8386:77;8489:67;8549:6;8542:5;8489:67;:::i;:::-;8483:4;8476:81;8345:222;7680:887;;7710:618;7762:4;7758:9;7750:6;7746:22;7796:37;7828:4;7796:37;:::i;:::-;7855:1;7869:208;7883:7;7880:1;7877:14;7869:208;;;7962:9;7957:3;7953:19;7947:26;7939:6;7932:42;8013:1;8005:6;8001:14;7991:24;;8060:2;8049:9;8045:18;8032:31;;7906:4;7903:1;7899:12;7894:17;;7869:208;;;8105:6;8096:7;8093:19;8090:179;;;8163:9;8158:3;8154:19;8148:26;8206:48;8248:4;8240:6;8236:17;8225:9;8206:48;:::i;:::-;8198:6;8191:64;8113:156;8090:179;8315:1;8311;8303:6;8299:14;8295:22;8289:4;8282:36;7717:611;;;7680:887;;7270:1303;;;7178:1395;;:::o;1333:9194:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2083": {
									"entryPoint": 3781,
									"id": 2083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2526": {
									"entryPoint": 4947,
									"id": 2526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOnERC721Received_2470": {
									"entryPoint": 5176,
									"id": 2470,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2148": {
									"entryPoint": 3959,
									"id": 2148,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2384": {
									"entryPoint": 1981,
									"id": 2384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeTransfer_2276": {
									"entryPoint": 4853,
									"id": 2276,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_transfer_2210": {
									"entryPoint": 4267,
									"id": 2210,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@approve_2119": {
									"entryPoint": 1492,
									"id": 2119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1969": {
									"entryPoint": 2691,
									"id": 1969,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2061": {
									"entryPoint": 1270,
									"id": 2061,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2011": {
									"entryPoint": 3633,
									"id": 2011,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1946": {
									"entryPoint": 1819,
									"id": 1946,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1556": {
									"entryPoint": 5413,
									"id": 1556,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1861": {
									"entryPoint": 1128,
									"id": 1861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_1994": {
									"entryPoint": 2519,
									"id": 1994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2314": {
									"entryPoint": 3269,
									"id": 2314,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_2332": {
									"entryPoint": 1949,
									"id": 2332,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_2036": {
									"entryPoint": 3016,
									"id": 2036,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1929": {
									"entryPoint": 814,
									"id": 1929,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1864": {
									"entryPoint": 2874,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_483": {
									"entryPoint": 4970,
									"id": 483,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2517": {
									"entryPoint": 3376,
									"id": 2517,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2244": {
									"entryPoint": 1844,
									"id": 2244,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6896,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24279:9",
										"nodeType": "YulBlock",
										"src": "0:24279:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "378:105:9",
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nativeSrc": "388:89:9",
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:9",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nativeSrc": "399:78:9",
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:9",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:9",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nativeSrc": "531:78:9",
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:9",
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nativeSrc": "589:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nativeSrc": "589:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nativeSrc": "561:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nativeSrc": "551:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nativeSrc": "544:42:9",
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nativeSrc": "541:62:9",
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:9",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nativeSrc": "666:86:9",
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nativeSrc": "676:29:9",
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nativeSrc": "685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nativeSrc": "714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nativeSrc": "714:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:9",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:9",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:9",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nativeSrc": "823:262:9",
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:9",
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nativeSrc": "871:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nativeSrc": "871:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:9",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nativeSrc": "836:32:9",
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nativeSrc": "833:119:9",
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nativeSrc": "962:116:9",
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nativeSrc": "977:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:9",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:9",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:9",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nativeSrc": "1036:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nativeSrc": "1016:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:9",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:9",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:9",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nativeSrc": "1133:48:9",
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nativeSrc": "1143:32:9",
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nativeSrc": "1161:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nativeSrc": "1154:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:9",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:9",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nativeSrc": "1246:50:9",
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nativeSrc": "1268:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nativeSrc": "1256:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nativeSrc": "1256:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:9",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:9",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nativeSrc": "1394:118:9",
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nativeSrc": "1404:26:9",
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nativeSrc": "1412:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nativeSrc": "1487:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nativeSrc": "1440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nativeSrc": "1440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:9",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:9",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:9",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nativeSrc": "1577:40:9",
													"nodeType": "YulBlock",
													"src": "1577:40:9",
													"statements": [
														{
															"nativeSrc": "1588:22:9",
															"nodeType": "YulAssignment",
															"src": "1588:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:9"
																},
																"nativeSrc": "1598:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:9",
														"nodeType": "YulTypedName",
														"src": "1560:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:9",
														"nodeType": "YulTypedName",
														"src": "1570:6:9",
														"type": ""
													}
												],
												"src": "1518:99:9"
											},
											{
												"body": {
													"nativeSrc": "1719:73:9",
													"nodeType": "YulBlock",
													"src": "1719:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:9"
																},
																"nativeSrc": "1729:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:9"
															},
															"nativeSrc": "1729:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:9"
														},
														{
															"nativeSrc": "1757:29:9",
															"nodeType": "YulAssignment",
															"src": "1757:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:9"
																},
																"nativeSrc": "1772:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:9",
														"nodeType": "YulTypedName",
														"src": "1691:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:9",
														"nodeType": "YulTypedName",
														"src": "1696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:9",
														"nodeType": "YulTypedName",
														"src": "1707:11:9",
														"type": ""
													}
												],
												"src": "1623:169:9"
											},
											{
												"body": {
													"nativeSrc": "1860:186:9",
													"nodeType": "YulBlock",
													"src": "1860:186:9",
													"statements": [
														{
															"nativeSrc": "1871:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1871:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1880:1:9",
																"nodeType": "YulLiteral",
																"src": "1880:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1875:1:9",
																	"nodeType": "YulTypedName",
																	"src": "1875:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1940:63:9",
																"nodeType": "YulBlock",
																"src": "1940:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1965:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1965:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1970:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "1970:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1961:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1961:3:9"
																					},
																					"nativeSrc": "1961:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1961:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1984:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1984:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1989:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1980:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1980:3:9"
																							},
																							"nativeSrc": "1980:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1980:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1974:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1974:5:9"
																					},
																					"nativeSrc": "1974:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1974:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1954:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1954:6:9"
																			},
																			"nativeSrc": "1954:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:39:9"
																		},
																		"nativeSrc": "1954:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1901:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1901:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1904:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1898:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:9"
																},
																"nativeSrc": "1898:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1898:13:9"
															},
															"nativeSrc": "1890:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1912:19:9",
																"nodeType": "YulBlock",
																"src": "1912:19:9",
																"statements": [
																	{
																		"nativeSrc": "1914:15:9",
																		"nodeType": "YulAssignment",
																		"src": "1914:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1923:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "1923:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1926:2:9",
																					"nodeType": "YulLiteral",
																					"src": "1926:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1919:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1919:3:9"
																			},
																			"nativeSrc": "1919:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1919:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1914:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "1914:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1894:3:9",
																"nodeType": "YulBlock",
																"src": "1894:3:9",
																"statements": []
															},
															"src": "1890:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2023:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2023:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2028:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:9"
																		},
																		"nativeSrc": "2019:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2037:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2037:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:9"
																},
																"nativeSrc": "2012:27:9",
																"nodeType": "YulFunctionCall",
																"src": "2012:27:9"
															},
															"nativeSrc": "2012:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "2012:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:9",
														"nodeType": "YulTypedName",
														"src": "1842:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:9",
														"nodeType": "YulTypedName",
														"src": "1847:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:9",
														"nodeType": "YulTypedName",
														"src": "1852:6:9",
														"type": ""
													}
												],
												"src": "1798:248:9"
											},
											{
												"body": {
													"nativeSrc": "2100:54:9",
													"nodeType": "YulBlock",
													"src": "2100:54:9",
													"statements": [
														{
															"nativeSrc": "2110:38:9",
															"nodeType": "YulAssignment",
															"src": "2110:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2128:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2128:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2135:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2135:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2124:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:9"
																		},
																		"nativeSrc": "2124:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2144:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:9"
																		},
																		"nativeSrc": "2140:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2120:3:9"
																},
																"nativeSrc": "2120:28:9",
																"nodeType": "YulFunctionCall",
																"src": "2120:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2110:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2052:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2083:5:9",
														"nodeType": "YulTypedName",
														"src": "2083:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2093:6:9",
														"nodeType": "YulTypedName",
														"src": "2093:6:9",
														"type": ""
													}
												],
												"src": "2052:102:9"
											},
											{
												"body": {
													"nativeSrc": "2252:285:9",
													"nodeType": "YulBlock",
													"src": "2252:285:9",
													"statements": [
														{
															"nativeSrc": "2262:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2262:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2309:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2309:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2276:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "2276:32:9"
																},
																"nativeSrc": "2276:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2276:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2266:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2266:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2324:78:9",
															"nodeType": "YulAssignment",
															"src": "2324:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2390:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2390:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2395:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2331:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2331:58:9"
																},
																"nativeSrc": "2331:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2331:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2324:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2324:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2450:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2450:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2457:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2457:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2446:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:9"
																		},
																		"nativeSrc": "2446:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2464:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2411:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2411:34:9"
																},
																"nativeSrc": "2411:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2411:65:9"
															},
															"nativeSrc": "2411:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2411:65:9"
														},
														{
															"nativeSrc": "2485:46:9",
															"nodeType": "YulAssignment",
															"src": "2485:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2496:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2496:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2523:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2523:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2501:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "2501:21:9"
																		},
																		"nativeSrc": "2501:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2501:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2492:3:9"
																},
																"nativeSrc": "2492:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2492:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2160:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2233:5:9",
														"nodeType": "YulTypedName",
														"src": "2233:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2240:3:9",
														"nodeType": "YulTypedName",
														"src": "2240:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2248:3:9",
														"nodeType": "YulTypedName",
														"src": "2248:3:9",
														"type": ""
													}
												],
												"src": "2160:377:9"
											},
											{
												"body": {
													"nativeSrc": "2661:195:9",
													"nodeType": "YulBlock",
													"src": "2661:195:9",
													"statements": [
														{
															"nativeSrc": "2671:26:9",
															"nodeType": "YulAssignment",
															"src": "2671:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2683:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2679:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:9"
																},
																"nativeSrc": "2679:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2679:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2671:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2718:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2718:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2729:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2729:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2714:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:9"
																		},
																		"nativeSrc": "2714:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2714:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2737:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2737:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:9"
																		},
																		"nativeSrc": "2733:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2707:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:9"
																},
																"nativeSrc": "2707:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2707:47:9"
															},
															"nativeSrc": "2707:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2707:47:9"
														},
														{
															"nativeSrc": "2763:86:9",
															"nodeType": "YulAssignment",
															"src": "2763:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2835:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2835:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2844:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2844:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2771:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2771:63:9"
																},
																"nativeSrc": "2771:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2771:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2763:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2763:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2543:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2633:9:9",
														"nodeType": "YulTypedName",
														"src": "2633:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2645:6:9",
														"nodeType": "YulTypedName",
														"src": "2645:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2656:4:9",
														"nodeType": "YulTypedName",
														"src": "2656:4:9",
														"type": ""
													}
												],
												"src": "2543:313:9"
											},
											{
												"body": {
													"nativeSrc": "2907:32:9",
													"nodeType": "YulBlock",
													"src": "2907:32:9",
													"statements": [
														{
															"nativeSrc": "2917:16:9",
															"nodeType": "YulAssignment",
															"src": "2917:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2928:5:9",
																"nodeType": "YulIdentifier",
																"src": "2928:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2917:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2917:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2862:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2889:5:9",
														"nodeType": "YulTypedName",
														"src": "2889:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2899:7:9",
														"nodeType": "YulTypedName",
														"src": "2899:7:9",
														"type": ""
													}
												],
												"src": "2862:77:9"
											},
											{
												"body": {
													"nativeSrc": "2988:79:9",
													"nodeType": "YulBlock",
													"src": "2988:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3045:16:9",
																"nodeType": "YulBlock",
																"src": "3045:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3054:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3054:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3057:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3047:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3047:6:9"
																			},
																			"nativeSrc": "3047:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3047:12:9"
																		},
																		"nativeSrc": "3047:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3047:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3011:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3011:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3036:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3036:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3018:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3018:17:9"
																				},
																				"nativeSrc": "3018:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3018:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3008:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3008:2:9"
																		},
																		"nativeSrc": "3008:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3001:6:9"
																},
																"nativeSrc": "3001:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3001:43:9"
															},
															"nativeSrc": "2998:63:9",
															"nodeType": "YulIf",
															"src": "2998:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2945:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2981:5:9",
														"nodeType": "YulTypedName",
														"src": "2981:5:9",
														"type": ""
													}
												],
												"src": "2945:122:9"
											},
											{
												"body": {
													"nativeSrc": "3125:87:9",
													"nodeType": "YulBlock",
													"src": "3125:87:9",
													"statements": [
														{
															"nativeSrc": "3135:29:9",
															"nodeType": "YulAssignment",
															"src": "3135:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3157:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3157:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3144:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3144:12:9"
																},
																"nativeSrc": "3144:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3144:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3135:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3135:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3200:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3200:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3173:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3173:26:9"
																},
																"nativeSrc": "3173:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3173:33:9"
															},
															"nativeSrc": "3173:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3173:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3073:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3103:6:9",
														"nodeType": "YulTypedName",
														"src": "3103:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3111:3:9",
														"nodeType": "YulTypedName",
														"src": "3111:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3119:5:9",
														"nodeType": "YulTypedName",
														"src": "3119:5:9",
														"type": ""
													}
												],
												"src": "3073:139:9"
											},
											{
												"body": {
													"nativeSrc": "3284:263:9",
													"nodeType": "YulBlock",
													"src": "3284:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:83:9",
																"nodeType": "YulBlock",
																"src": "3330:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3332:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3332:77:9"
																			},
																			"nativeSrc": "3332:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:79:9"
																		},
																		"nativeSrc": "3332:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3305:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:9"
																		},
																		"nativeSrc": "3301:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3297:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:9"
																},
																"nativeSrc": "3297:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3297:32:9"
															},
															"nativeSrc": "3294:119:9",
															"nodeType": "YulIf",
															"src": "3294:119:9"
														},
														{
															"nativeSrc": "3423:117:9",
															"nodeType": "YulBlock",
															"src": "3423:117:9",
															"statements": [
																{
																	"nativeSrc": "3438:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3438:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3452:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3442:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3442:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3467:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3467:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3502:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3502:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3513:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3513:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3498:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3498:3:9"
																				},
																				"nativeSrc": "3498:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3498:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3522:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3477:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3477:20:9"
																		},
																		"nativeSrc": "3477:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3467:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3467:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3218:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3254:9:9",
														"nodeType": "YulTypedName",
														"src": "3254:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3265:7:9",
														"nodeType": "YulTypedName",
														"src": "3265:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3277:6:9",
														"nodeType": "YulTypedName",
														"src": "3277:6:9",
														"type": ""
													}
												],
												"src": "3218:329:9"
											},
											{
												"body": {
													"nativeSrc": "3598:81:9",
													"nodeType": "YulBlock",
													"src": "3598:81:9",
													"statements": [
														{
															"nativeSrc": "3608:65:9",
															"nodeType": "YulAssignment",
															"src": "3608:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3623:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3623:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3630:42:9",
																		"nodeType": "YulLiteral",
																		"src": "3630:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3619:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:9"
																},
																"nativeSrc": "3619:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3619:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3608:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3608:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3553:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3580:5:9",
														"nodeType": "YulTypedName",
														"src": "3580:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3590:7:9",
														"nodeType": "YulTypedName",
														"src": "3590:7:9",
														"type": ""
													}
												],
												"src": "3553:126:9"
											},
											{
												"body": {
													"nativeSrc": "3730:51:9",
													"nodeType": "YulBlock",
													"src": "3730:51:9",
													"statements": [
														{
															"nativeSrc": "3740:35:9",
															"nodeType": "YulAssignment",
															"src": "3740:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3769:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3769:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3751:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3751:17:9"
																},
																"nativeSrc": "3751:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3751:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3740:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3740:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3685:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3712:5:9",
														"nodeType": "YulTypedName",
														"src": "3712:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3722:7:9",
														"nodeType": "YulTypedName",
														"src": "3722:7:9",
														"type": ""
													}
												],
												"src": "3685:96:9"
											},
											{
												"body": {
													"nativeSrc": "3852:53:9",
													"nodeType": "YulBlock",
													"src": "3852:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3869:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3869:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3892:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3892:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3874:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3874:17:9"
																		},
																		"nativeSrc": "3874:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:9"
																},
																"nativeSrc": "3862:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3862:37:9"
															},
															"nativeSrc": "3862:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3862:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3787:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3840:5:9",
														"nodeType": "YulTypedName",
														"src": "3840:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3847:3:9",
														"nodeType": "YulTypedName",
														"src": "3847:3:9",
														"type": ""
													}
												],
												"src": "3787:118:9"
											},
											{
												"body": {
													"nativeSrc": "4009:124:9",
													"nodeType": "YulBlock",
													"src": "4009:124:9",
													"statements": [
														{
															"nativeSrc": "4019:26:9",
															"nodeType": "YulAssignment",
															"src": "4019:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4031:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4042:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4027:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:9"
																},
																"nativeSrc": "4027:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4027:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4019:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4019:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4099:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4099:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4112:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4112:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4123:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4108:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:9"
																		},
																		"nativeSrc": "4108:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4055:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4055:43:9"
																},
																"nativeSrc": "4055:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4055:71:9"
															},
															"nativeSrc": "4055:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4055:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3911:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3981:9:9",
														"nodeType": "YulTypedName",
														"src": "3981:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3993:6:9",
														"nodeType": "YulTypedName",
														"src": "3993:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:9",
														"nodeType": "YulTypedName",
														"src": "4004:4:9",
														"type": ""
													}
												],
												"src": "3911:222:9"
											},
											{
												"body": {
													"nativeSrc": "4182:79:9",
													"nodeType": "YulBlock",
													"src": "4182:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4239:16:9",
																"nodeType": "YulBlock",
																"src": "4239:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4248:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4251:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4251:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4241:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4241:6:9"
																			},
																			"nativeSrc": "4241:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4241:12:9"
																		},
																		"nativeSrc": "4241:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4241:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4205:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4205:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4230:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4230:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4212:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4212:17:9"
																				},
																				"nativeSrc": "4212:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4212:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4202:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4202:2:9"
																		},
																		"nativeSrc": "4202:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4195:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:9"
																},
																"nativeSrc": "4195:43:9",
																"nodeType": "YulFunctionCall",
																"src": "4195:43:9"
															},
															"nativeSrc": "4192:63:9",
															"nodeType": "YulIf",
															"src": "4192:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4139:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4175:5:9",
														"nodeType": "YulTypedName",
														"src": "4175:5:9",
														"type": ""
													}
												],
												"src": "4139:122:9"
											},
											{
												"body": {
													"nativeSrc": "4319:87:9",
													"nodeType": "YulBlock",
													"src": "4319:87:9",
													"statements": [
														{
															"nativeSrc": "4329:29:9",
															"nodeType": "YulAssignment",
															"src": "4329:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4351:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4338:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4338:12:9"
																},
																"nativeSrc": "4338:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4338:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4329:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4329:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4394:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4394:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4367:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "4367:26:9"
																},
																"nativeSrc": "4367:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4367:33:9"
															},
															"nativeSrc": "4367:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "4367:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4267:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4297:6:9",
														"nodeType": "YulTypedName",
														"src": "4297:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4305:3:9",
														"nodeType": "YulTypedName",
														"src": "4305:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4313:5:9",
														"nodeType": "YulTypedName",
														"src": "4313:5:9",
														"type": ""
													}
												],
												"src": "4267:139:9"
											},
											{
												"body": {
													"nativeSrc": "4495:391:9",
													"nodeType": "YulBlock",
													"src": "4495:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4541:83:9",
																"nodeType": "YulBlock",
																"src": "4541:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4543:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4543:77:9"
																			},
																			"nativeSrc": "4543:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4543:79:9"
																		},
																		"nativeSrc": "4543:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4543:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4516:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4516:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4525:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4525:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4512:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4512:3:9"
																		},
																		"nativeSrc": "4512:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4512:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4537:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4508:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:9"
																},
																"nativeSrc": "4508:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4508:32:9"
															},
															"nativeSrc": "4505:119:9",
															"nodeType": "YulIf",
															"src": "4505:119:9"
														},
														{
															"nativeSrc": "4634:117:9",
															"nodeType": "YulBlock",
															"src": "4634:117:9",
															"statements": [
																{
																	"nativeSrc": "4649:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4649:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4663:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4663:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4653:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4653:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4678:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4678:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4713:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4713:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4724:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4724:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4709:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4709:3:9"
																				},
																				"nativeSrc": "4709:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4709:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4733:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4733:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4688:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4688:20:9"
																		},
																		"nativeSrc": "4688:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4678:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4678:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4761:118:9",
															"nodeType": "YulBlock",
															"src": "4761:118:9",
															"statements": [
																{
																	"nativeSrc": "4776:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4776:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4790:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4780:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4780:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4806:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4806:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4841:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4841:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4852:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4852:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4837:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4837:3:9"
																				},
																				"nativeSrc": "4837:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4837:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4861:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4861:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4816:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4816:20:9"
																		},
																		"nativeSrc": "4816:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4816:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4806:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4806:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4412:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4457:9:9",
														"nodeType": "YulTypedName",
														"src": "4457:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4468:7:9",
														"nodeType": "YulTypedName",
														"src": "4468:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4480:6:9",
														"nodeType": "YulTypedName",
														"src": "4480:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4488:6:9",
														"nodeType": "YulTypedName",
														"src": "4488:6:9",
														"type": ""
													}
												],
												"src": "4412:474:9"
											},
											{
												"body": {
													"nativeSrc": "4958:263:9",
													"nodeType": "YulBlock",
													"src": "4958:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5004:83:9",
																"nodeType": "YulBlock",
																"src": "5004:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5006:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5006:77:9"
																			},
																			"nativeSrc": "5006:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5006:79:9"
																		},
																		"nativeSrc": "5006:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4979:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4979:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4988:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:9"
																		},
																		"nativeSrc": "4975:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5000:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4971:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:9"
																},
																"nativeSrc": "4971:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4971:32:9"
															},
															"nativeSrc": "4968:119:9",
															"nodeType": "YulIf",
															"src": "4968:119:9"
														},
														{
															"nativeSrc": "5097:117:9",
															"nodeType": "YulBlock",
															"src": "5097:117:9",
															"statements": [
																{
																	"nativeSrc": "5112:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5112:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5126:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5126:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5116:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5116:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5141:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5141:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5176:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5176:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5187:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5187:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5172:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:9"
																				},
																				"nativeSrc": "5172:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5196:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5196:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5151:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5151:20:9"
																		},
																		"nativeSrc": "5151:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5141:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5141:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4892:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4928:9:9",
														"nodeType": "YulTypedName",
														"src": "4928:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4939:7:9",
														"nodeType": "YulTypedName",
														"src": "4939:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4951:6:9",
														"nodeType": "YulTypedName",
														"src": "4951:6:9",
														"type": ""
													}
												],
												"src": "4892:329:9"
											},
											{
												"body": {
													"nativeSrc": "5327:519:9",
													"nodeType": "YulBlock",
													"src": "5327:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5373:83:9",
																"nodeType": "YulBlock",
																"src": "5373:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5375:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5375:77:9"
																			},
																			"nativeSrc": "5375:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5375:79:9"
																		},
																		"nativeSrc": "5375:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5375:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5348:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5357:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5357:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5344:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:9"
																		},
																		"nativeSrc": "5344:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5344:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5369:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5369:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5340:3:9"
																},
																"nativeSrc": "5340:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5340:32:9"
															},
															"nativeSrc": "5337:119:9",
															"nodeType": "YulIf",
															"src": "5337:119:9"
														},
														{
															"nativeSrc": "5466:117:9",
															"nodeType": "YulBlock",
															"src": "5466:117:9",
															"statements": [
																{
																	"nativeSrc": "5481:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5481:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5495:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5495:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5485:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5485:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5510:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5510:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5545:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5545:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5556:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5556:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5541:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5541:3:9"
																				},
																				"nativeSrc": "5541:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5541:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5565:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5565:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5520:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5520:20:9"
																		},
																		"nativeSrc": "5520:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5520:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5510:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5510:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5593:118:9",
															"nodeType": "YulBlock",
															"src": "5593:118:9",
															"statements": [
																{
																	"nativeSrc": "5608:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5608:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5622:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5612:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5612:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5638:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5638:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5673:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5673:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5684:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5684:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5669:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5669:3:9"
																				},
																				"nativeSrc": "5669:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5669:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5693:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5693:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5648:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5648:20:9"
																		},
																		"nativeSrc": "5648:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5638:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5638:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5721:118:9",
															"nodeType": "YulBlock",
															"src": "5721:118:9",
															"statements": [
																{
																	"nativeSrc": "5736:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5736:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5750:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5740:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5740:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5766:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5766:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5801:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5801:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5812:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5812:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5797:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5797:3:9"
																				},
																				"nativeSrc": "5797:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5797:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5821:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5821:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5776:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5776:20:9"
																		},
																		"nativeSrc": "5776:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5766:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5766:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5227:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5281:9:9",
														"nodeType": "YulTypedName",
														"src": "5281:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5292:7:9",
														"nodeType": "YulTypedName",
														"src": "5292:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5304:6:9",
														"nodeType": "YulTypedName",
														"src": "5304:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5312:6:9",
														"nodeType": "YulTypedName",
														"src": "5312:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5320:6:9",
														"nodeType": "YulTypedName",
														"src": "5320:6:9",
														"type": ""
													}
												],
												"src": "5227:619:9"
											},
											{
												"body": {
													"nativeSrc": "5917:53:9",
													"nodeType": "YulBlock",
													"src": "5917:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5934:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5934:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5957:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5957:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5939:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5939:17:9"
																		},
																		"nativeSrc": "5939:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5939:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5927:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:9"
																},
																"nativeSrc": "5927:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5927:37:9"
															},
															"nativeSrc": "5927:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5927:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5852:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5905:5:9",
														"nodeType": "YulTypedName",
														"src": "5905:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5912:3:9",
														"nodeType": "YulTypedName",
														"src": "5912:3:9",
														"type": ""
													}
												],
												"src": "5852:118:9"
											},
											{
												"body": {
													"nativeSrc": "6074:124:9",
													"nodeType": "YulBlock",
													"src": "6074:124:9",
													"statements": [
														{
															"nativeSrc": "6084:26:9",
															"nodeType": "YulAssignment",
															"src": "6084:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6096:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6096:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6107:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6107:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6092:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6092:3:9"
																},
																"nativeSrc": "6092:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6092:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6084:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6084:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6164:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6164:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6177:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6188:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6188:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6173:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6173:3:9"
																		},
																		"nativeSrc": "6173:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6173:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6120:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6120:43:9"
																},
																"nativeSrc": "6120:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6120:71:9"
															},
															"nativeSrc": "6120:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6120:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5976:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6046:9:9",
														"nodeType": "YulTypedName",
														"src": "6046:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6058:6:9",
														"nodeType": "YulTypedName",
														"src": "6058:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6069:4:9",
														"nodeType": "YulTypedName",
														"src": "6069:4:9",
														"type": ""
													}
												],
												"src": "5976:222:9"
											},
											{
												"body": {
													"nativeSrc": "6244:76:9",
													"nodeType": "YulBlock",
													"src": "6244:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6298:16:9",
																"nodeType": "YulBlock",
																"src": "6298:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6307:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6307:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6310:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6310:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6300:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6300:6:9"
																			},
																			"nativeSrc": "6300:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6300:12:9"
																		},
																		"nativeSrc": "6300:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6300:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6267:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6267:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6289:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6289:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6274:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "6274:14:9"
																				},
																				"nativeSrc": "6274:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6264:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6264:2:9"
																		},
																		"nativeSrc": "6264:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6257:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6257:6:9"
																},
																"nativeSrc": "6257:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6257:40:9"
															},
															"nativeSrc": "6254:60:9",
															"nodeType": "YulIf",
															"src": "6254:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6204:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6237:5:9",
														"nodeType": "YulTypedName",
														"src": "6237:5:9",
														"type": ""
													}
												],
												"src": "6204:116:9"
											},
											{
												"body": {
													"nativeSrc": "6375:84:9",
													"nodeType": "YulBlock",
													"src": "6375:84:9",
													"statements": [
														{
															"nativeSrc": "6385:29:9",
															"nodeType": "YulAssignment",
															"src": "6385:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6407:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6394:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6394:12:9"
																},
																"nativeSrc": "6394:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6394:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6385:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6385:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6447:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6447:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6423:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "6423:23:9"
																},
																"nativeSrc": "6423:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6423:30:9"
															},
															"nativeSrc": "6423:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6423:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6326:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6353:6:9",
														"nodeType": "YulTypedName",
														"src": "6353:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6361:3:9",
														"nodeType": "YulTypedName",
														"src": "6361:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6369:5:9",
														"nodeType": "YulTypedName",
														"src": "6369:5:9",
														"type": ""
													}
												],
												"src": "6326:133:9"
											},
											{
												"body": {
													"nativeSrc": "6545:388:9",
													"nodeType": "YulBlock",
													"src": "6545:388:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6591:83:9",
																"nodeType": "YulBlock",
																"src": "6591:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6593:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6593:77:9"
																			},
																			"nativeSrc": "6593:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6593:79:9"
																		},
																		"nativeSrc": "6593:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6593:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6566:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6566:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6575:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6562:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6562:3:9"
																		},
																		"nativeSrc": "6562:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6562:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:9"
																},
																"nativeSrc": "6558:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6558:32:9"
															},
															"nativeSrc": "6555:119:9",
															"nodeType": "YulIf",
															"src": "6555:119:9"
														},
														{
															"nativeSrc": "6684:117:9",
															"nodeType": "YulBlock",
															"src": "6684:117:9",
															"statements": [
																{
																	"nativeSrc": "6699:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6699:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6713:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6713:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6703:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6703:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6728:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6728:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6763:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6763:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6774:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6774:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6759:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6759:3:9"
																				},
																				"nativeSrc": "6759:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6759:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6783:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6783:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6738:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6738:20:9"
																		},
																		"nativeSrc": "6738:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6728:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6728:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6811:115:9",
															"nodeType": "YulBlock",
															"src": "6811:115:9",
															"statements": [
																{
																	"nativeSrc": "6826:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6826:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6840:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6830:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6830:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6856:60:9",
																	"nodeType": "YulAssignment",
																	"src": "6856:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6888:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6888:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6899:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6899:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6884:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:9"
																				},
																				"nativeSrc": "6884:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6884:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6908:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6908:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6866:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6866:17:9"
																		},
																		"nativeSrc": "6866:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6856:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6856:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6465:468:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6507:9:9",
														"nodeType": "YulTypedName",
														"src": "6507:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6518:7:9",
														"nodeType": "YulTypedName",
														"src": "6518:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6530:6:9",
														"nodeType": "YulTypedName",
														"src": "6530:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6538:6:9",
														"nodeType": "YulTypedName",
														"src": "6538:6:9",
														"type": ""
													}
												],
												"src": "6465:468:9"
											},
											{
												"body": {
													"nativeSrc": "7028:28:9",
													"nodeType": "YulBlock",
													"src": "7028:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7045:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7045:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7048:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7048:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7038:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:9"
																},
																"nativeSrc": "7038:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7038:12:9"
															},
															"nativeSrc": "7038:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "7038:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6939:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6939:117:9"
											},
											{
												"body": {
													"nativeSrc": "7151:28:9",
													"nodeType": "YulBlock",
													"src": "7151:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7168:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7168:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7171:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7161:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:9"
																},
																"nativeSrc": "7161:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7161:12:9"
															},
															"nativeSrc": "7161:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "7161:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7062:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7062:117:9"
											},
											{
												"body": {
													"nativeSrc": "7213:152:9",
													"nodeType": "YulBlock",
													"src": "7213:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7230:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7230:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7233:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7233:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:9"
																},
																"nativeSrc": "7223:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7223:88:9"
															},
															"nativeSrc": "7223:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7223:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7327:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7327:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7330:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7330:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7320:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:9"
																},
																"nativeSrc": "7320:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7320:15:9"
															},
															"nativeSrc": "7320:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7320:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7351:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7351:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7354:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7344:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:9"
																},
																"nativeSrc": "7344:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7344:15:9"
															},
															"nativeSrc": "7344:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7344:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7185:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7185:180:9"
											},
											{
												"body": {
													"nativeSrc": "7414:238:9",
													"nodeType": "YulBlock",
													"src": "7414:238:9",
													"statements": [
														{
															"nativeSrc": "7424:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7424:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7446:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7446:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7476:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7476:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7454:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "7454:21:9"
																		},
																		"nativeSrc": "7454:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7454:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7442:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:9"
																},
																"nativeSrc": "7442:40:9",
																"nodeType": "YulFunctionCall",
																"src": "7442:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7428:10:9",
																	"nodeType": "YulTypedName",
																	"src": "7428:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7593:22:9",
																"nodeType": "YulBlock",
																"src": "7593:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7595:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7595:16:9"
																			},
																			"nativeSrc": "7595:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7595:18:9"
																		},
																		"nativeSrc": "7595:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7595:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7536:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "7536:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7548:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7548:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7533:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7533:2:9"
																		},
																		"nativeSrc": "7533:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7572:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "7572:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7584:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7584:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7569:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7569:2:9"
																		},
																		"nativeSrc": "7569:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7569:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7530:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7530:2:9"
																},
																"nativeSrc": "7530:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7530:62:9"
															},
															"nativeSrc": "7527:88:9",
															"nodeType": "YulIf",
															"src": "7527:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7631:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7635:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "7635:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:9"
																},
																"nativeSrc": "7624:22:9",
																"nodeType": "YulFunctionCall",
																"src": "7624:22:9"
															},
															"nativeSrc": "7624:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "7624:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7371:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7400:6:9",
														"nodeType": "YulTypedName",
														"src": "7400:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7408:4:9",
														"nodeType": "YulTypedName",
														"src": "7408:4:9",
														"type": ""
													}
												],
												"src": "7371:281:9"
											},
											{
												"body": {
													"nativeSrc": "7699:88:9",
													"nodeType": "YulBlock",
													"src": "7699:88:9",
													"statements": [
														{
															"nativeSrc": "7709:30:9",
															"nodeType": "YulAssignment",
															"src": "7709:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7719:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7719:18:9"
																},
																"nativeSrc": "7719:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7719:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7709:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7768:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7776:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7776:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7748:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "7748:19:9"
																},
																"nativeSrc": "7748:33:9",
																"nodeType": "YulFunctionCall",
																"src": "7748:33:9"
															},
															"nativeSrc": "7748:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "7748:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7658:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7683:4:9",
														"nodeType": "YulTypedName",
														"src": "7683:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7692:6:9",
														"nodeType": "YulTypedName",
														"src": "7692:6:9",
														"type": ""
													}
												],
												"src": "7658:129:9"
											},
											{
												"body": {
													"nativeSrc": "7859:241:9",
													"nodeType": "YulBlock",
													"src": "7859:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7964:22:9",
																"nodeType": "YulBlock",
																"src": "7964:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7966:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7966:16:9"
																			},
																			"nativeSrc": "7966:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7966:18:9"
																		},
																		"nativeSrc": "7966:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7966:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7936:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7936:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7944:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7944:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7933:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7933:2:9"
																},
																"nativeSrc": "7933:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7933:30:9"
															},
															"nativeSrc": "7930:56:9",
															"nodeType": "YulIf",
															"src": "7930:56:9"
														},
														{
															"nativeSrc": "7996:37:9",
															"nodeType": "YulAssignment",
															"src": "7996:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8026:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8026:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8004:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "8004:21:9"
																},
																"nativeSrc": "8004:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8004:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7996:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:9"
																}
															]
														},
														{
															"nativeSrc": "8070:23:9",
															"nodeType": "YulAssignment",
															"src": "8070:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8082:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8082:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8088:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8088:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8078:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8078:3:9"
																},
																"nativeSrc": "8078:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8078:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8070:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8070:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7793:307:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7843:6:9",
														"nodeType": "YulTypedName",
														"src": "7843:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7854:4:9",
														"nodeType": "YulTypedName",
														"src": "7854:4:9",
														"type": ""
													}
												],
												"src": "7793:307:9"
											},
											{
												"body": {
													"nativeSrc": "8170:84:9",
													"nodeType": "YulBlock",
													"src": "8170:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8194:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8194:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8199:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8199:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8204:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8204:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8181:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8181:12:9"
																},
																"nativeSrc": "8181:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8181:30:9"
															},
															"nativeSrc": "8181:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8181:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8231:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8231:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8236:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8236:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8227:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:9"
																		},
																		"nativeSrc": "8227:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8245:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8245:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8220:6:9"
																},
																"nativeSrc": "8220:27:9",
																"nodeType": "YulFunctionCall",
																"src": "8220:27:9"
															},
															"nativeSrc": "8220:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "8220:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8106:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8152:3:9",
														"nodeType": "YulTypedName",
														"src": "8152:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8157:3:9",
														"nodeType": "YulTypedName",
														"src": "8157:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8162:6:9",
														"nodeType": "YulTypedName",
														"src": "8162:6:9",
														"type": ""
													}
												],
												"src": "8106:148:9"
											},
											{
												"body": {
													"nativeSrc": "8343:340:9",
													"nodeType": "YulBlock",
													"src": "8343:340:9",
													"statements": [
														{
															"nativeSrc": "8353:74:9",
															"nodeType": "YulAssignment",
															"src": "8353:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8419:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8419:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8378:40:9",
																			"nodeType": "YulIdentifier",
																			"src": "8378:40:9"
																		},
																		"nativeSrc": "8378:48:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8378:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8362:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "8362:15:9"
																},
																"nativeSrc": "8362:65:9",
																"nodeType": "YulFunctionCall",
																"src": "8362:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8353:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8353:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8443:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8443:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8450:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8436:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:9"
																},
																"nativeSrc": "8436:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8436:21:9"
															},
															"nativeSrc": "8436:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8436:21:9"
														},
														{
															"nativeSrc": "8466:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8466:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8481:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8481:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8488:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8488:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8477:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:9"
																},
																"nativeSrc": "8477:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8477:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8470:3:9",
																	"nodeType": "YulTypedName",
																	"src": "8470:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8531:83:9",
																"nodeType": "YulBlock",
																"src": "8531:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8533:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8533:77:9"
																			},
																			"nativeSrc": "8533:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8533:79:9"
																		},
																		"nativeSrc": "8533:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8533:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8512:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8512:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8517:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8517:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:9"
																		},
																		"nativeSrc": "8508:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8526:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8526:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8505:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8505:2:9"
																},
																"nativeSrc": "8505:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8505:25:9"
															},
															"nativeSrc": "8502:112:9",
															"nodeType": "YulIf",
															"src": "8502:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8660:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8660:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8665:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8665:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8670:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8670:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8623:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "8623:36:9"
																},
																"nativeSrc": "8623:54:9",
																"nodeType": "YulFunctionCall",
																"src": "8623:54:9"
															},
															"nativeSrc": "8623:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "8623:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8260:423:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8316:3:9",
														"nodeType": "YulTypedName",
														"src": "8316:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8321:6:9",
														"nodeType": "YulTypedName",
														"src": "8321:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8329:3:9",
														"nodeType": "YulTypedName",
														"src": "8329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8337:5:9",
														"nodeType": "YulTypedName",
														"src": "8337:5:9",
														"type": ""
													}
												],
												"src": "8260:423:9"
											},
											{
												"body": {
													"nativeSrc": "8763:277:9",
													"nodeType": "YulBlock",
													"src": "8763:277:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8812:83:9",
																"nodeType": "YulBlock",
																"src": "8812:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8814:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8814:77:9"
																			},
																			"nativeSrc": "8814:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8814:79:9"
																		},
																		"nativeSrc": "8814:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8814:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8791:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8791:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8799:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8799:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8787:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8787:3:9"
																				},
																				"nativeSrc": "8787:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8787:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8806:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8806:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8783:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:9"
																		},
																		"nativeSrc": "8783:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8783:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8776:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8776:6:9"
																},
																"nativeSrc": "8776:35:9",
																"nodeType": "YulFunctionCall",
																"src": "8776:35:9"
															},
															"nativeSrc": "8773:122:9",
															"nodeType": "YulIf",
															"src": "8773:122:9"
														},
														{
															"nativeSrc": "8904:34:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8904:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8931:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8931:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8918:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8918:12:9"
																},
																"nativeSrc": "8918:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8918:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8908:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8908:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8947:87:9",
															"nodeType": "YulAssignment",
															"src": "8947:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9007:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9007:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9015:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9003:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9003:3:9"
																		},
																		"nativeSrc": "9003:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9003:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9022:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9022:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9030:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9030:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8956:46:9",
																	"nodeType": "YulIdentifier",
																	"src": "8956:46:9"
																},
																"nativeSrc": "8956:78:9",
																"nodeType": "YulFunctionCall",
																"src": "8956:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8947:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8947:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8702:338:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8741:6:9",
														"nodeType": "YulTypedName",
														"src": "8741:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8749:3:9",
														"nodeType": "YulTypedName",
														"src": "8749:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8757:5:9",
														"nodeType": "YulTypedName",
														"src": "8757:5:9",
														"type": ""
													}
												],
												"src": "8702:338:9"
											},
											{
												"body": {
													"nativeSrc": "9172:817:9",
													"nodeType": "YulBlock",
													"src": "9172:817:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:83:9",
																"nodeType": "YulBlock",
																"src": "9219:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9221:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9221:77:9"
																			},
																			"nativeSrc": "9221:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:79:9"
																		},
																		"nativeSrc": "9221:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9221:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9193:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9193:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9202:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9202:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9189:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9189:3:9"
																		},
																		"nativeSrc": "9189:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9189:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9214:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9214:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9185:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9185:3:9"
																},
																"nativeSrc": "9185:33:9",
																"nodeType": "YulFunctionCall",
																"src": "9185:33:9"
															},
															"nativeSrc": "9182:120:9",
															"nodeType": "YulIf",
															"src": "9182:120:9"
														},
														{
															"nativeSrc": "9312:117:9",
															"nodeType": "YulBlock",
															"src": "9312:117:9",
															"statements": [
																{
																	"nativeSrc": "9327:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9327:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9341:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9331:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9331:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9356:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9356:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9391:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9391:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9402:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9402:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9387:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9387:3:9"
																				},
																				"nativeSrc": "9387:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9387:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9411:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9411:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9366:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9366:20:9"
																		},
																		"nativeSrc": "9366:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9356:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9356:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9439:118:9",
															"nodeType": "YulBlock",
															"src": "9439:118:9",
															"statements": [
																{
																	"nativeSrc": "9454:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9454:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9468:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9468:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9458:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9458:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9484:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9484:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9519:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9519:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9530:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9530:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9515:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9515:3:9"
																				},
																				"nativeSrc": "9515:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9515:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9539:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9539:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9494:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9494:20:9"
																		},
																		"nativeSrc": "9494:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9494:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9484:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9484:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9567:118:9",
															"nodeType": "YulBlock",
															"src": "9567:118:9",
															"statements": [
																{
																	"nativeSrc": "9582:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9582:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9596:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9596:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9586:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9586:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9612:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9612:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9647:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9647:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9658:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9658:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9643:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9643:3:9"
																				},
																				"nativeSrc": "9643:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9643:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9667:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9667:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9622:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9622:20:9"
																		},
																		"nativeSrc": "9622:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9622:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9612:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9612:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9695:287:9",
															"nodeType": "YulBlock",
															"src": "9695:287:9",
															"statements": [
																{
																	"nativeSrc": "9710:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9710:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9741:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9741:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9752:2:9",
																						"nodeType": "YulLiteral",
																						"src": "9752:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9737:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9737:3:9"
																				},
																				"nativeSrc": "9737:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9737:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9724:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "9724:12:9"
																		},
																		"nativeSrc": "9724:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9714:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9714:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9803:83:9",
																		"nodeType": "YulBlock",
																		"src": "9803:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9805:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "9805:77:9"
																					},
																					"nativeSrc": "9805:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9805:79:9"
																				},
																				"nativeSrc": "9805:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9805:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9775:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9775:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9783:18:9",
																				"nodeType": "YulLiteral",
																				"src": "9783:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9772:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9772:2:9"
																		},
																		"nativeSrc": "9772:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:30:9"
																	},
																	"nativeSrc": "9769:117:9",
																	"nodeType": "YulIf",
																	"src": "9769:117:9"
																},
																{
																	"nativeSrc": "9900:72:9",
																	"nodeType": "YulAssignment",
																	"src": "9900:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9944:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9944:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9955:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9955:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9940:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9940:3:9"
																				},
																				"nativeSrc": "9940:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9940:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9964:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9964:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9910:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "9910:29:9"
																		},
																		"nativeSrc": "9910:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9910:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9900:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9900:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9046:943:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9118:9:9",
														"nodeType": "YulTypedName",
														"src": "9118:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9129:7:9",
														"nodeType": "YulTypedName",
														"src": "9129:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9141:6:9",
														"nodeType": "YulTypedName",
														"src": "9141:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9149:6:9",
														"nodeType": "YulTypedName",
														"src": "9149:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9157:6:9",
														"nodeType": "YulTypedName",
														"src": "9157:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9165:6:9",
														"nodeType": "YulTypedName",
														"src": "9165:6:9",
														"type": ""
													}
												],
												"src": "9046:943:9"
											},
											{
												"body": {
													"nativeSrc": "10078:391:9",
													"nodeType": "YulBlock",
													"src": "10078:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10124:83:9",
																"nodeType": "YulBlock",
																"src": "10124:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10126:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10126:77:9"
																			},
																			"nativeSrc": "10126:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10126:79:9"
																		},
																		"nativeSrc": "10126:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10126:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10099:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10099:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10108:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10108:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10095:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:9"
																		},
																		"nativeSrc": "10095:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10120:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10120:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10091:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:9"
																},
																"nativeSrc": "10091:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10091:32:9"
															},
															"nativeSrc": "10088:119:9",
															"nodeType": "YulIf",
															"src": "10088:119:9"
														},
														{
															"nativeSrc": "10217:117:9",
															"nodeType": "YulBlock",
															"src": "10217:117:9",
															"statements": [
																{
																	"nativeSrc": "10232:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10232:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10246:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10236:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10236:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10261:63:9",
																	"nodeType": "YulAssignment",
																	"src": "10261:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10296:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10296:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10307:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10307:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10292:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10292:3:9"
																				},
																				"nativeSrc": "10292:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10292:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10316:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10316:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10271:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "10271:20:9"
																		},
																		"nativeSrc": "10271:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10271:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10261:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10344:118:9",
															"nodeType": "YulBlock",
															"src": "10344:118:9",
															"statements": [
																{
																	"nativeSrc": "10359:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10359:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10373:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10373:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10363:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10363:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10389:63:9",
																	"nodeType": "YulAssignment",
																	"src": "10389:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10424:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10424:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10435:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10435:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10420:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10420:3:9"
																				},
																				"nativeSrc": "10420:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10420:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10444:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10444:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10399:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "10399:20:9"
																		},
																		"nativeSrc": "10399:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10389:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10389:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9995:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10040:9:9",
														"nodeType": "YulTypedName",
														"src": "10040:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10051:7:9",
														"nodeType": "YulTypedName",
														"src": "10051:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10063:6:9",
														"nodeType": "YulTypedName",
														"src": "10063:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10071:6:9",
														"nodeType": "YulTypedName",
														"src": "10071:6:9",
														"type": ""
													}
												],
												"src": "9995:474:9"
											},
											{
												"body": {
													"nativeSrc": "10503:152:9",
													"nodeType": "YulBlock",
													"src": "10503:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10520:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10520:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10523:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10523:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10513:6:9"
																},
																"nativeSrc": "10513:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10513:88:9"
															},
															"nativeSrc": "10513:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10513:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10617:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10617:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10620:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10620:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10610:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:9"
																},
																"nativeSrc": "10610:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10610:15:9"
															},
															"nativeSrc": "10610:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10610:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10641:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10641:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10644:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10644:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10634:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10634:6:9"
																},
																"nativeSrc": "10634:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10634:15:9"
															},
															"nativeSrc": "10634:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10634:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10475:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10475:180:9"
											},
											{
												"body": {
													"nativeSrc": "10712:269:9",
													"nodeType": "YulBlock",
													"src": "10712:269:9",
													"statements": [
														{
															"nativeSrc": "10722:22:9",
															"nodeType": "YulAssignment",
															"src": "10722:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10736:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10736:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10742:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10742:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10732:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:9"
																},
																"nativeSrc": "10732:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10732:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10722:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10722:6:9"
																}
															]
														},
														{
															"nativeSrc": "10753:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10753:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10783:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10783:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10789:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10789:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10779:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10779:3:9"
																},
																"nativeSrc": "10779:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10779:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10757:18:9",
																	"nodeType": "YulTypedName",
																	"src": "10757:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10830:51:9",
																"nodeType": "YulBlock",
																"src": "10830:51:9",
																"statements": [
																	{
																		"nativeSrc": "10844:27:9",
																		"nodeType": "YulAssignment",
																		"src": "10844:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10858:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10858:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10866:4:9",
																					"nodeType": "YulLiteral",
																					"src": "10866:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10854:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10854:3:9"
																			},
																			"nativeSrc": "10854:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10854:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10844:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10844:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10810:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10810:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10803:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10803:6:9"
																},
																"nativeSrc": "10803:26:9",
																"nodeType": "YulFunctionCall",
																"src": "10803:26:9"
															},
															"nativeSrc": "10800:81:9",
															"nodeType": "YulIf",
															"src": "10800:81:9"
														},
														{
															"body": {
																"nativeSrc": "10933:42:9",
																"nodeType": "YulBlock",
																"src": "10933:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10947:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10947:16:9"
																			},
																			"nativeSrc": "10947:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10947:18:9"
																		},
																		"nativeSrc": "10947:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10897:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10897:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10920:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10920:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10928:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10928:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10917:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10917:2:9"
																		},
																		"nativeSrc": "10917:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10917:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10894:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10894:2:9"
																},
																"nativeSrc": "10894:38:9",
																"nodeType": "YulFunctionCall",
																"src": "10894:38:9"
															},
															"nativeSrc": "10891:84:9",
															"nodeType": "YulIf",
															"src": "10891:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10661:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10696:4:9",
														"nodeType": "YulTypedName",
														"src": "10696:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10705:6:9",
														"nodeType": "YulTypedName",
														"src": "10705:6:9",
														"type": ""
													}
												],
												"src": "10661:320:9"
											},
											{
												"body": {
													"nativeSrc": "11093:63:9",
													"nodeType": "YulBlock",
													"src": "11093:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11115:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11115:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11123:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11123:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11111:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11111:3:9"
																		},
																		"nativeSrc": "11111:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11111:14:9"
																	},
																	{
																		"hexValue": "746f6b656e20646f65736e2774206578697374",
																		"kind": "string",
																		"nativeSrc": "11127:21:9",
																		"nodeType": "YulLiteral",
																		"src": "11127:21:9",
																		"type": "",
																		"value": "token doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11104:6:9"
																},
																"nativeSrc": "11104:45:9",
																"nodeType": "YulFunctionCall",
																"src": "11104:45:9"
															},
															"nativeSrc": "11104:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "11104:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
												"nativeSrc": "10987:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11085:6:9",
														"nodeType": "YulTypedName",
														"src": "11085:6:9",
														"type": ""
													}
												],
												"src": "10987:169:9"
											},
											{
												"body": {
													"nativeSrc": "11308:220:9",
													"nodeType": "YulBlock",
													"src": "11308:220:9",
													"statements": [
														{
															"nativeSrc": "11318:74:9",
															"nodeType": "YulAssignment",
															"src": "11318:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11384:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11384:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11389:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11325:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11325:58:9"
																},
																"nativeSrc": "11325:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11325:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11318:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11318:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11490:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11490:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
																	"nativeSrc": "11401:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11401:88:9"
																},
																"nativeSrc": "11401:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11401:93:9"
															},
															"nativeSrc": "11401:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11401:93:9"
														},
														{
															"nativeSrc": "11503:19:9",
															"nodeType": "YulAssignment",
															"src": "11503:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11514:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11514:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11519:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11519:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11510:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11510:3:9"
																},
																"nativeSrc": "11510:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11510:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11503:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11503:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11162:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11296:3:9",
														"nodeType": "YulTypedName",
														"src": "11296:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11304:3:9",
														"nodeType": "YulTypedName",
														"src": "11304:3:9",
														"type": ""
													}
												],
												"src": "11162:366:9"
											},
											{
												"body": {
													"nativeSrc": "11705:248:9",
													"nodeType": "YulBlock",
													"src": "11705:248:9",
													"statements": [
														{
															"nativeSrc": "11715:26:9",
															"nodeType": "YulAssignment",
															"src": "11715:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11727:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11727:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11738:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11738:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11723:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11723:3:9"
																},
																"nativeSrc": "11723:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11723:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11715:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11715:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11762:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11762:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11773:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11773:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11758:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11758:3:9"
																		},
																		"nativeSrc": "11758:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11758:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11781:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11781:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11787:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11777:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11777:3:9"
																		},
																		"nativeSrc": "11777:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11777:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11751:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11751:6:9"
																},
																"nativeSrc": "11751:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11751:47:9"
															},
															"nativeSrc": "11751:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11751:47:9"
														},
														{
															"nativeSrc": "11807:139:9",
															"nodeType": "YulAssignment",
															"src": "11807:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11941:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11941:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11815:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11815:124:9"
																},
																"nativeSrc": "11815:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11815:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11807:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11807:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11534:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11685:9:9",
														"nodeType": "YulTypedName",
														"src": "11685:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11700:4:9",
														"nodeType": "YulTypedName",
														"src": "11700:4:9",
														"type": ""
													}
												],
												"src": "11534:419:9"
											},
											{
												"body": {
													"nativeSrc": "12065:74:9",
													"nodeType": "YulBlock",
													"src": "12065:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12087:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12095:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12095:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12083:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12083:3:9"
																		},
																		"nativeSrc": "12083:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12083:14:9"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12099:32:9",
																		"nodeType": "YulLiteral",
																		"src": "12099:32:9",
																		"type": "",
																		"value": "not owner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12076:6:9"
																},
																"nativeSrc": "12076:56:9",
																"nodeType": "YulFunctionCall",
																"src": "12076:56:9"
															},
															"nativeSrc": "12076:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "12076:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63",
												"nativeSrc": "11959:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12057:6:9",
														"nodeType": "YulTypedName",
														"src": "12057:6:9",
														"type": ""
													}
												],
												"src": "11959:180:9"
											},
											{
												"body": {
													"nativeSrc": "12291:220:9",
													"nodeType": "YulBlock",
													"src": "12291:220:9",
													"statements": [
														{
															"nativeSrc": "12301:74:9",
															"nodeType": "YulAssignment",
															"src": "12301:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12367:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12367:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12372:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12308:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12308:58:9"
																},
																"nativeSrc": "12308:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12308:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12301:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12301:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12473:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12473:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63",
																	"nativeSrc": "12384:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12384:88:9"
																},
																"nativeSrc": "12384:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12384:93:9"
															},
															"nativeSrc": "12384:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12384:93:9"
														},
														{
															"nativeSrc": "12486:19:9",
															"nodeType": "YulAssignment",
															"src": "12486:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12497:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12497:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12502:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12502:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12493:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:9"
																},
																"nativeSrc": "12493:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12493:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12486:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12145:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12279:3:9",
														"nodeType": "YulTypedName",
														"src": "12279:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12287:3:9",
														"nodeType": "YulTypedName",
														"src": "12287:3:9",
														"type": ""
													}
												],
												"src": "12145:366:9"
											},
											{
												"body": {
													"nativeSrc": "12688:248:9",
													"nodeType": "YulBlock",
													"src": "12688:248:9",
													"statements": [
														{
															"nativeSrc": "12698:26:9",
															"nodeType": "YulAssignment",
															"src": "12698:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12710:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12710:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12721:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12721:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12706:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12706:3:9"
																},
																"nativeSrc": "12706:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12706:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12698:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12698:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12745:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12756:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12756:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12741:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:9"
																		},
																		"nativeSrc": "12741:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12741:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12764:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12764:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12770:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12770:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12760:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:9"
																		},
																		"nativeSrc": "12760:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12760:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12734:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12734:6:9"
																},
																"nativeSrc": "12734:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12734:47:9"
															},
															"nativeSrc": "12734:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12734:47:9"
														},
														{
															"nativeSrc": "12790:139:9",
															"nodeType": "YulAssignment",
															"src": "12790:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12924:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12924:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12798:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12798:124:9"
																},
																"nativeSrc": "12798:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12798:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12790:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12790:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12517:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12668:9:9",
														"nodeType": "YulTypedName",
														"src": "12668:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12683:4:9",
														"nodeType": "YulTypedName",
														"src": "12683:4:9",
														"type": ""
													}
												],
												"src": "12517:419:9"
											},
											{
												"body": {
													"nativeSrc": "13048:66:9",
													"nodeType": "YulBlock",
													"src": "13048:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13070:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13070:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13078:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13078:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13066:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13066:3:9"
																		},
																		"nativeSrc": "13066:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13066:14:9"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13082:24:9",
																		"nodeType": "YulLiteral",
																		"src": "13082:24:9",
																		"type": "",
																		"value": "not owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13059:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13059:6:9"
																},
																"nativeSrc": "13059:48:9",
																"nodeType": "YulFunctionCall",
																"src": "13059:48:9"
															},
															"nativeSrc": "13059:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "13059:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
												"nativeSrc": "12942:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13040:6:9",
														"nodeType": "YulTypedName",
														"src": "13040:6:9",
														"type": ""
													}
												],
												"src": "12942:172:9"
											},
											{
												"body": {
													"nativeSrc": "13266:220:9",
													"nodeType": "YulBlock",
													"src": "13266:220:9",
													"statements": [
														{
															"nativeSrc": "13276:74:9",
															"nodeType": "YulAssignment",
															"src": "13276:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13342:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13342:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13347:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13347:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13283:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13283:58:9"
																},
																"nativeSrc": "13283:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13283:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13276:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13276:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13448:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13448:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
																	"nativeSrc": "13359:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13359:88:9"
																},
																"nativeSrc": "13359:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13359:93:9"
															},
															"nativeSrc": "13359:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13359:93:9"
														},
														{
															"nativeSrc": "13461:19:9",
															"nodeType": "YulAssignment",
															"src": "13461:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13472:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13472:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13477:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13477:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13468:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13468:3:9"
																},
																"nativeSrc": "13468:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13468:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13461:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13461:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13120:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13254:3:9",
														"nodeType": "YulTypedName",
														"src": "13254:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13262:3:9",
														"nodeType": "YulTypedName",
														"src": "13262:3:9",
														"type": ""
													}
												],
												"src": "13120:366:9"
											},
											{
												"body": {
													"nativeSrc": "13663:248:9",
													"nodeType": "YulBlock",
													"src": "13663:248:9",
													"statements": [
														{
															"nativeSrc": "13673:26:9",
															"nodeType": "YulAssignment",
															"src": "13673:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13685:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13685:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13696:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13696:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13681:3:9"
																},
																"nativeSrc": "13681:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13681:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13673:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13673:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13720:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13720:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13731:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13731:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13716:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13716:3:9"
																		},
																		"nativeSrc": "13716:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13716:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13739:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13739:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13745:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13735:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13735:3:9"
																		},
																		"nativeSrc": "13735:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13735:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13709:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13709:6:9"
																},
																"nativeSrc": "13709:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13709:47:9"
															},
															"nativeSrc": "13709:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13709:47:9"
														},
														{
															"nativeSrc": "13765:139:9",
															"nodeType": "YulAssignment",
															"src": "13765:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13899:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13899:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13773:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13773:124:9"
																},
																"nativeSrc": "13773:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13773:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13765:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13765:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13492:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13643:9:9",
														"nodeType": "YulTypedName",
														"src": "13643:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13658:4:9",
														"nodeType": "YulTypedName",
														"src": "13658:4:9",
														"type": ""
													}
												],
												"src": "13492:419:9"
											},
											{
												"body": {
													"nativeSrc": "14023:64:9",
													"nodeType": "YulBlock",
													"src": "14023:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14045:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14045:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14053:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14041:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14041:3:9"
																		},
																		"nativeSrc": "14041:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14041:14:9"
																	},
																	{
																		"hexValue": "6d696e7420746f207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14057:22:9",
																		"nodeType": "YulLiteral",
																		"src": "14057:22:9",
																		"type": "",
																		"value": "mint to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14034:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14034:6:9"
																},
																"nativeSrc": "14034:46:9",
																"nodeType": "YulFunctionCall",
																"src": "14034:46:9"
															},
															"nativeSrc": "14034:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "14034:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481",
												"nativeSrc": "13917:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14015:6:9",
														"nodeType": "YulTypedName",
														"src": "14015:6:9",
														"type": ""
													}
												],
												"src": "13917:170:9"
											},
											{
												"body": {
													"nativeSrc": "14239:220:9",
													"nodeType": "YulBlock",
													"src": "14239:220:9",
													"statements": [
														{
															"nativeSrc": "14249:74:9",
															"nodeType": "YulAssignment",
															"src": "14249:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14315:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14315:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14320:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14320:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14256:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14256:58:9"
																},
																"nativeSrc": "14256:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14256:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14249:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14249:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14421:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481",
																	"nativeSrc": "14332:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14332:88:9"
																},
																"nativeSrc": "14332:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14332:93:9"
															},
															"nativeSrc": "14332:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14332:93:9"
														},
														{
															"nativeSrc": "14434:19:9",
															"nodeType": "YulAssignment",
															"src": "14434:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14445:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14445:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14450:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14450:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14441:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14441:3:9"
																},
																"nativeSrc": "14441:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14441:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14434:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14434:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14093:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14227:3:9",
														"nodeType": "YulTypedName",
														"src": "14227:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14235:3:9",
														"nodeType": "YulTypedName",
														"src": "14235:3:9",
														"type": ""
													}
												],
												"src": "14093:366:9"
											},
											{
												"body": {
													"nativeSrc": "14636:248:9",
													"nodeType": "YulBlock",
													"src": "14636:248:9",
													"statements": [
														{
															"nativeSrc": "14646:26:9",
															"nodeType": "YulAssignment",
															"src": "14646:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14658:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14658:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14669:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14669:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14654:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14654:3:9"
																},
																"nativeSrc": "14654:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14654:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14646:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14646:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14693:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14693:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14704:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14704:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14689:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:9"
																		},
																		"nativeSrc": "14689:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14689:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14712:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14712:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14718:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14718:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14708:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14708:3:9"
																		},
																		"nativeSrc": "14708:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14708:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14682:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:9"
																},
																"nativeSrc": "14682:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14682:47:9"
															},
															"nativeSrc": "14682:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14682:47:9"
														},
														{
															"nativeSrc": "14738:139:9",
															"nodeType": "YulAssignment",
															"src": "14738:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14872:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14872:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14746:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14746:124:9"
																},
																"nativeSrc": "14746:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14746:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14738:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14738:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14465:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14616:9:9",
														"nodeType": "YulTypedName",
														"src": "14616:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14631:4:9",
														"nodeType": "YulTypedName",
														"src": "14631:4:9",
														"type": ""
													}
												],
												"src": "14465:419:9"
											},
											{
												"body": {
													"nativeSrc": "14996:64:9",
													"nodeType": "YulBlock",
													"src": "14996:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15018:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15018:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15026:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15026:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15014:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15014:3:9"
																		},
																		"nativeSrc": "15014:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15014:14:9"
																	},
																	{
																		"hexValue": "746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nativeSrc": "15030:22:9",
																		"nodeType": "YulLiteral",
																		"src": "15030:22:9",
																		"type": "",
																		"value": "token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15007:6:9"
																},
																"nativeSrc": "15007:46:9",
																"nodeType": "YulFunctionCall",
																"src": "15007:46:9"
															},
															"nativeSrc": "15007:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "15007:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582",
												"nativeSrc": "14890:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14988:6:9",
														"nodeType": "YulTypedName",
														"src": "14988:6:9",
														"type": ""
													}
												],
												"src": "14890:170:9"
											},
											{
												"body": {
													"nativeSrc": "15212:220:9",
													"nodeType": "YulBlock",
													"src": "15212:220:9",
													"statements": [
														{
															"nativeSrc": "15222:74:9",
															"nodeType": "YulAssignment",
															"src": "15222:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15288:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15288:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15293:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15229:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15229:58:9"
																},
																"nativeSrc": "15229:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15229:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15222:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15222:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15394:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15394:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582",
																	"nativeSrc": "15305:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15305:88:9"
																},
																"nativeSrc": "15305:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15305:93:9"
															},
															"nativeSrc": "15305:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15305:93:9"
														},
														{
															"nativeSrc": "15407:19:9",
															"nodeType": "YulAssignment",
															"src": "15407:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15418:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15418:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15423:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15414:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15414:3:9"
																},
																"nativeSrc": "15414:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15414:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15407:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15407:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15066:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15200:3:9",
														"nodeType": "YulTypedName",
														"src": "15200:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15208:3:9",
														"nodeType": "YulTypedName",
														"src": "15208:3:9",
														"type": ""
													}
												],
												"src": "15066:366:9"
											},
											{
												"body": {
													"nativeSrc": "15609:248:9",
													"nodeType": "YulBlock",
													"src": "15609:248:9",
													"statements": [
														{
															"nativeSrc": "15619:26:9",
															"nodeType": "YulAssignment",
															"src": "15619:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15631:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15631:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15642:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15642:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15627:3:9"
																},
																"nativeSrc": "15627:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15627:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15619:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15619:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15666:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15666:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15677:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15677:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15662:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15662:3:9"
																		},
																		"nativeSrc": "15662:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15662:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15685:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15685:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15691:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15691:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15681:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15681:3:9"
																		},
																		"nativeSrc": "15681:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15681:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15655:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15655:6:9"
																},
																"nativeSrc": "15655:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15655:47:9"
															},
															"nativeSrc": "15655:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15655:47:9"
														},
														{
															"nativeSrc": "15711:139:9",
															"nodeType": "YulAssignment",
															"src": "15711:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15845:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15845:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15719:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15719:124:9"
																},
																"nativeSrc": "15719:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15719:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15711:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15711:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15438:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15589:9:9",
														"nodeType": "YulTypedName",
														"src": "15589:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15604:4:9",
														"nodeType": "YulTypedName",
														"src": "15604:4:9",
														"type": ""
													}
												],
												"src": "15438:419:9"
											},
											{
												"body": {
													"nativeSrc": "15891:152:9",
													"nodeType": "YulBlock",
													"src": "15891:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15908:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15908:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15911:77:9",
																		"nodeType": "YulLiteral",
																		"src": "15911:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15901:6:9"
																},
																"nativeSrc": "15901:88:9",
																"nodeType": "YulFunctionCall",
																"src": "15901:88:9"
															},
															"nativeSrc": "15901:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "15901:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16005:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16005:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16008:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16008:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15998:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15998:6:9"
																},
																"nativeSrc": "15998:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15998:15:9"
															},
															"nativeSrc": "15998:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15998:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16029:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16029:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16032:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16032:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16022:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16022:6:9"
																},
																"nativeSrc": "16022:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16022:15:9"
															},
															"nativeSrc": "16022:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16022:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15863:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "15863:180:9"
											},
											{
												"body": {
													"nativeSrc": "16093:147:9",
													"nodeType": "YulBlock",
													"src": "16093:147:9",
													"statements": [
														{
															"nativeSrc": "16103:25:9",
															"nodeType": "YulAssignment",
															"src": "16103:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16126:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16126:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16108:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16108:17:9"
																},
																"nativeSrc": "16108:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16108:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16103:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16103:1:9"
																}
															]
														},
														{
															"nativeSrc": "16137:25:9",
															"nodeType": "YulAssignment",
															"src": "16137:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16160:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16160:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16142:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16142:17:9"
																},
																"nativeSrc": "16142:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16142:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16137:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16137:1:9"
																}
															]
														},
														{
															"nativeSrc": "16171:16:9",
															"nodeType": "YulAssignment",
															"src": "16171:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16182:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16182:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16185:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16185:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16178:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16178:3:9"
																},
																"nativeSrc": "16178:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16178:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16171:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16171:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16211:22:9",
																"nodeType": "YulBlock",
																"src": "16211:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16213:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16213:16:9"
																			},
																			"nativeSrc": "16213:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16213:18:9"
																		},
																		"nativeSrc": "16213:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16213:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16203:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16203:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16206:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16206:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16200:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16200:2:9"
																},
																"nativeSrc": "16200:10:9",
																"nodeType": "YulFunctionCall",
																"src": "16200:10:9"
															},
															"nativeSrc": "16197:36:9",
															"nodeType": "YulIf",
															"src": "16197:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16049:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16080:1:9",
														"nodeType": "YulTypedName",
														"src": "16080:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16083:1:9",
														"nodeType": "YulTypedName",
														"src": "16083:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16089:3:9",
														"nodeType": "YulTypedName",
														"src": "16089:3:9",
														"type": ""
													}
												],
												"src": "16049:191:9"
											},
											{
												"body": {
													"nativeSrc": "16352:64:9",
													"nodeType": "YulBlock",
													"src": "16352:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16374:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16374:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16382:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16382:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16370:3:9"
																		},
																		"nativeSrc": "16370:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16370:14:9"
																	},
																	{
																		"hexValue": "6f776e6572203d207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "16386:22:9",
																		"nodeType": "YulLiteral",
																		"src": "16386:22:9",
																		"type": "",
																		"value": "owner = zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16363:6:9"
																},
																"nativeSrc": "16363:46:9",
																"nodeType": "YulFunctionCall",
																"src": "16363:46:9"
															},
															"nativeSrc": "16363:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "16363:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8",
												"nativeSrc": "16246:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16344:6:9",
														"nodeType": "YulTypedName",
														"src": "16344:6:9",
														"type": ""
													}
												],
												"src": "16246:170:9"
											},
											{
												"body": {
													"nativeSrc": "16568:220:9",
													"nodeType": "YulBlock",
													"src": "16568:220:9",
													"statements": [
														{
															"nativeSrc": "16578:74:9",
															"nodeType": "YulAssignment",
															"src": "16578:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16644:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16644:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16649:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16649:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16585:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16585:58:9"
																},
																"nativeSrc": "16585:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16585:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16578:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16578:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16750:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16750:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8",
																	"nativeSrc": "16661:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16661:88:9"
																},
																"nativeSrc": "16661:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16661:93:9"
															},
															"nativeSrc": "16661:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16661:93:9"
														},
														{
															"nativeSrc": "16763:19:9",
															"nodeType": "YulAssignment",
															"src": "16763:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16774:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16774:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16779:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16779:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16770:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:9"
																},
																"nativeSrc": "16770:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16770:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16763:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16763:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16422:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16556:3:9",
														"nodeType": "YulTypedName",
														"src": "16556:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16564:3:9",
														"nodeType": "YulTypedName",
														"src": "16564:3:9",
														"type": ""
													}
												],
												"src": "16422:366:9"
											},
											{
												"body": {
													"nativeSrc": "16965:248:9",
													"nodeType": "YulBlock",
													"src": "16965:248:9",
													"statements": [
														{
															"nativeSrc": "16975:26:9",
															"nodeType": "YulAssignment",
															"src": "16975:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16987:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16987:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16998:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16998:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16983:3:9"
																},
																"nativeSrc": "16983:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16983:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16975:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16975:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17022:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17022:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17033:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17033:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17018:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17018:3:9"
																		},
																		"nativeSrc": "17018:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17018:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17041:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17041:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17047:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17047:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17037:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17037:3:9"
																		},
																		"nativeSrc": "17037:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17037:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17011:6:9"
																},
																"nativeSrc": "17011:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17011:47:9"
															},
															"nativeSrc": "17011:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17011:47:9"
														},
														{
															"nativeSrc": "17067:139:9",
															"nodeType": "YulAssignment",
															"src": "17067:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17201:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17201:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17075:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17075:124:9"
																},
																"nativeSrc": "17075:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17075:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17067:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17067:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16794:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16945:9:9",
														"nodeType": "YulTypedName",
														"src": "16945:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16960:4:9",
														"nodeType": "YulTypedName",
														"src": "16960:4:9",
														"type": ""
													}
												],
												"src": "16794:419:9"
											},
											{
												"body": {
													"nativeSrc": "17325:59:9",
													"nodeType": "YulBlock",
													"src": "17325:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17347:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17347:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17355:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17355:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17343:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17343:3:9"
																		},
																		"nativeSrc": "17343:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17343:14:9"
																	},
																	{
																		"hexValue": "546f6b656e204e6f74204578697374",
																		"kind": "string",
																		"nativeSrc": "17359:17:9",
																		"nodeType": "YulLiteral",
																		"src": "17359:17:9",
																		"type": "",
																		"value": "Token Not Exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17336:6:9"
																},
																"nativeSrc": "17336:41:9",
																"nodeType": "YulFunctionCall",
																"src": "17336:41:9"
															},
															"nativeSrc": "17336:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "17336:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21",
												"nativeSrc": "17219:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17317:6:9",
														"nodeType": "YulTypedName",
														"src": "17317:6:9",
														"type": ""
													}
												],
												"src": "17219:165:9"
											},
											{
												"body": {
													"nativeSrc": "17536:220:9",
													"nodeType": "YulBlock",
													"src": "17536:220:9",
													"statements": [
														{
															"nativeSrc": "17546:74:9",
															"nodeType": "YulAssignment",
															"src": "17546:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17612:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17612:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17617:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17617:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17553:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17553:58:9"
																},
																"nativeSrc": "17553:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17553:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17546:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17546:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17718:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17718:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21",
																	"nativeSrc": "17629:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17629:88:9"
																},
																"nativeSrc": "17629:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17629:93:9"
															},
															"nativeSrc": "17629:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17629:93:9"
														},
														{
															"nativeSrc": "17731:19:9",
															"nodeType": "YulAssignment",
															"src": "17731:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17742:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17742:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17747:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17747:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17738:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17738:3:9"
																},
																"nativeSrc": "17738:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17738:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17731:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17731:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17390:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17524:3:9",
														"nodeType": "YulTypedName",
														"src": "17524:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17532:3:9",
														"nodeType": "YulTypedName",
														"src": "17532:3:9",
														"type": ""
													}
												],
												"src": "17390:366:9"
											},
											{
												"body": {
													"nativeSrc": "17933:248:9",
													"nodeType": "YulBlock",
													"src": "17933:248:9",
													"statements": [
														{
															"nativeSrc": "17943:26:9",
															"nodeType": "YulAssignment",
															"src": "17943:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17955:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17955:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17966:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17966:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17951:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17951:3:9"
																},
																"nativeSrc": "17951:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17951:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17943:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17943:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17990:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17990:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18001:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18001:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17986:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17986:3:9"
																		},
																		"nativeSrc": "17986:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17986:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18009:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18009:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18015:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18015:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18005:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18005:3:9"
																		},
																		"nativeSrc": "18005:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18005:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17979:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17979:6:9"
																},
																"nativeSrc": "17979:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17979:47:9"
															},
															"nativeSrc": "17979:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17979:47:9"
														},
														{
															"nativeSrc": "18035:139:9",
															"nodeType": "YulAssignment",
															"src": "18035:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18169:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18169:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18043:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18043:124:9"
																},
																"nativeSrc": "18043:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18043:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18035:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18035:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17762:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17913:9:9",
														"nodeType": "YulTypedName",
														"src": "17913:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17928:4:9",
														"nodeType": "YulTypedName",
														"src": "17928:4:9",
														"type": ""
													}
												],
												"src": "17762:419:9"
											},
											{
												"body": {
													"nativeSrc": "18301:34:9",
													"nodeType": "YulBlock",
													"src": "18301:34:9",
													"statements": [
														{
															"nativeSrc": "18311:18:9",
															"nodeType": "YulAssignment",
															"src": "18311:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "18326:3:9",
																"nodeType": "YulIdentifier",
																"src": "18326:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18311:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "18311:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18187:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18273:3:9",
														"nodeType": "YulTypedName",
														"src": "18273:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18278:6:9",
														"nodeType": "YulTypedName",
														"src": "18278:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18289:11:9",
														"nodeType": "YulTypedName",
														"src": "18289:11:9",
														"type": ""
													}
												],
												"src": "18187:148:9"
											},
											{
												"body": {
													"nativeSrc": "18451:280:9",
													"nodeType": "YulBlock",
													"src": "18451:280:9",
													"statements": [
														{
															"nativeSrc": "18461:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "18461:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18508:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "18508:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18475:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "18475:32:9"
																},
																"nativeSrc": "18475:39:9",
																"nodeType": "YulFunctionCall",
																"src": "18475:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18465:6:9",
																	"nodeType": "YulTypedName",
																	"src": "18465:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18523:96:9",
															"nodeType": "YulAssignment",
															"src": "18523:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18607:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18607:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18612:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18612:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18530:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "18530:76:9"
																},
																"nativeSrc": "18530:89:9",
																"nodeType": "YulFunctionCall",
																"src": "18530:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18523:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18523:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18667:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18667:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18674:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18674:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18663:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18663:3:9"
																		},
																		"nativeSrc": "18663:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18663:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18681:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18681:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18686:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18686:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18628:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "18628:34:9"
																},
																"nativeSrc": "18628:65:9",
																"nodeType": "YulFunctionCall",
																"src": "18628:65:9"
															},
															"nativeSrc": "18628:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "18628:65:9"
														},
														{
															"nativeSrc": "18702:23:9",
															"nodeType": "YulAssignment",
															"src": "18702:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18713:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18713:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18718:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18718:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18709:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18709:3:9"
																},
																"nativeSrc": "18709:16:9",
																"nodeType": "YulFunctionCall",
																"src": "18709:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18702:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18702:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18341:390:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18432:5:9",
														"nodeType": "YulTypedName",
														"src": "18432:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18439:3:9",
														"nodeType": "YulTypedName",
														"src": "18439:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18447:3:9",
														"nodeType": "YulTypedName",
														"src": "18447:3:9",
														"type": ""
													}
												],
												"src": "18341:390:9"
											},
											{
												"body": {
													"nativeSrc": "18921:251:9",
													"nodeType": "YulBlock",
													"src": "18921:251:9",
													"statements": [
														{
															"nativeSrc": "18932:102:9",
															"nodeType": "YulAssignment",
															"src": "18932:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19021:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19021:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19030:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19030:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18939:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "18939:81:9"
																},
																"nativeSrc": "18939:95:9",
																"nodeType": "YulFunctionCall",
																"src": "18939:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18932:3:9"
																}
															]
														},
														{
															"nativeSrc": "19044:102:9",
															"nodeType": "YulAssignment",
															"src": "19044:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19133:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19133:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19142:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19142:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19051:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "19051:81:9"
																},
																"nativeSrc": "19051:95:9",
																"nodeType": "YulFunctionCall",
																"src": "19051:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19044:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19044:3:9"
																}
															]
														},
														{
															"nativeSrc": "19156:10:9",
															"nodeType": "YulAssignment",
															"src": "19156:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "19163:3:9",
																"nodeType": "YulIdentifier",
																"src": "19163:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19156:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19156:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18737:435:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18892:3:9",
														"nodeType": "YulTypedName",
														"src": "18892:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18898:6:9",
														"nodeType": "YulTypedName",
														"src": "18898:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18906:6:9",
														"nodeType": "YulTypedName",
														"src": "18906:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18917:3:9",
														"nodeType": "YulTypedName",
														"src": "18917:3:9",
														"type": ""
													}
												],
												"src": "18737:435:9"
											},
											{
												"body": {
													"nativeSrc": "19284:53:9",
													"nodeType": "YulBlock",
													"src": "19284:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19306:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19306:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19314:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19314:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19302:3:9"
																		},
																		"nativeSrc": "19302:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19302:14:9"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "19318:11:9",
																		"nodeType": "YulLiteral",
																		"src": "19318:11:9",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19295:6:9"
																},
																"nativeSrc": "19295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "19295:35:9"
															},
															"nativeSrc": "19295:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "19295:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
												"nativeSrc": "19178:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19276:6:9",
														"nodeType": "YulTypedName",
														"src": "19276:6:9",
														"type": ""
													}
												],
												"src": "19178:159:9"
											},
											{
												"body": {
													"nativeSrc": "19489:219:9",
													"nodeType": "YulBlock",
													"src": "19489:219:9",
													"statements": [
														{
															"nativeSrc": "19499:73:9",
															"nodeType": "YulAssignment",
															"src": "19499:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19565:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19565:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19570:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19570:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19506:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19506:58:9"
																},
																"nativeSrc": "19506:66:9",
																"nodeType": "YulFunctionCall",
																"src": "19506:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19499:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19670:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19670:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																	"nativeSrc": "19581:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19581:88:9"
																},
																"nativeSrc": "19581:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19581:93:9"
															},
															"nativeSrc": "19581:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19581:93:9"
														},
														{
															"nativeSrc": "19683:19:9",
															"nodeType": "YulAssignment",
															"src": "19683:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19694:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19699:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19699:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19690:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19690:3:9"
																},
																"nativeSrc": "19690:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19690:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19683:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19683:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19343:365:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19477:3:9",
														"nodeType": "YulTypedName",
														"src": "19477:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19485:3:9",
														"nodeType": "YulTypedName",
														"src": "19485:3:9",
														"type": ""
													}
												],
												"src": "19343:365:9"
											},
											{
												"body": {
													"nativeSrc": "19885:248:9",
													"nodeType": "YulBlock",
													"src": "19885:248:9",
													"statements": [
														{
															"nativeSrc": "19895:26:9",
															"nodeType": "YulAssignment",
															"src": "19895:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19907:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19907:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19918:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19918:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19903:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19903:3:9"
																},
																"nativeSrc": "19903:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19903:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19895:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19895:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19942:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19942:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19953:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19953:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19938:3:9"
																		},
																		"nativeSrc": "19938:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19938:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19961:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19961:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19967:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19967:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19957:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19957:3:9"
																		},
																		"nativeSrc": "19957:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19957:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19931:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19931:6:9"
																},
																"nativeSrc": "19931:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19931:47:9"
															},
															"nativeSrc": "19931:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19931:47:9"
														},
														{
															"nativeSrc": "19987:139:9",
															"nodeType": "YulAssignment",
															"src": "19987:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20121:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20121:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19995:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19995:124:9"
																},
																"nativeSrc": "19995:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19995:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19987:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19987:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19714:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19865:9:9",
														"nodeType": "YulTypedName",
														"src": "19865:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19880:4:9",
														"nodeType": "YulTypedName",
														"src": "19880:4:9",
														"type": ""
													}
												],
												"src": "19714:419:9"
											},
											{
												"body": {
													"nativeSrc": "20245:72:9",
													"nodeType": "YulBlock",
													"src": "20245:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20267:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20267:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20275:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20275:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20263:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20263:3:9"
																		},
																		"nativeSrc": "20263:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20263:14:9"
																	},
																	{
																		"hexValue": "7472616e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "20279:30:9",
																		"nodeType": "YulLiteral",
																		"src": "20279:30:9",
																		"type": "",
																		"value": "transfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20256:6:9"
																},
																"nativeSrc": "20256:54:9",
																"nodeType": "YulFunctionCall",
																"src": "20256:54:9"
															},
															"nativeSrc": "20256:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "20256:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
												"nativeSrc": "20139:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20237:6:9",
														"nodeType": "YulTypedName",
														"src": "20237:6:9",
														"type": ""
													}
												],
												"src": "20139:178:9"
											},
											{
												"body": {
													"nativeSrc": "20469:220:9",
													"nodeType": "YulBlock",
													"src": "20469:220:9",
													"statements": [
														{
															"nativeSrc": "20479:74:9",
															"nodeType": "YulAssignment",
															"src": "20479:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20545:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20545:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20550:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20486:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20486:58:9"
																},
																"nativeSrc": "20486:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20486:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20479:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20479:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20651:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20651:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
																	"nativeSrc": "20562:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20562:88:9"
																},
																"nativeSrc": "20562:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20562:93:9"
															},
															"nativeSrc": "20562:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20562:93:9"
														},
														{
															"nativeSrc": "20664:19:9",
															"nodeType": "YulAssignment",
															"src": "20664:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20675:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20675:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20680:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20671:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20671:3:9"
																},
																"nativeSrc": "20671:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20671:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20664:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20664:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20323:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20457:3:9",
														"nodeType": "YulTypedName",
														"src": "20457:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20465:3:9",
														"nodeType": "YulTypedName",
														"src": "20465:3:9",
														"type": ""
													}
												],
												"src": "20323:366:9"
											},
											{
												"body": {
													"nativeSrc": "20866:248:9",
													"nodeType": "YulBlock",
													"src": "20866:248:9",
													"statements": [
														{
															"nativeSrc": "20876:26:9",
															"nodeType": "YulAssignment",
															"src": "20876:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20888:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20888:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20899:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20899:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20884:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20884:3:9"
																},
																"nativeSrc": "20884:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20884:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20876:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20876:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20923:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20923:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20934:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20934:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20919:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20919:3:9"
																		},
																		"nativeSrc": "20919:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20919:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20942:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20942:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20948:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20948:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20938:3:9"
																		},
																		"nativeSrc": "20938:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20938:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20912:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20912:6:9"
																},
																"nativeSrc": "20912:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20912:47:9"
															},
															"nativeSrc": "20912:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20912:47:9"
														},
														{
															"nativeSrc": "20968:139:9",
															"nodeType": "YulAssignment",
															"src": "20968:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21102:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21102:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20976:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20976:124:9"
																},
																"nativeSrc": "20976:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20976:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20968:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20968:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20695:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20846:9:9",
														"nodeType": "YulTypedName",
														"src": "20846:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20861:4:9",
														"nodeType": "YulTypedName",
														"src": "20861:4:9",
														"type": ""
													}
												],
												"src": "20695:419:9"
											},
											{
												"body": {
													"nativeSrc": "21165:149:9",
													"nodeType": "YulBlock",
													"src": "21165:149:9",
													"statements": [
														{
															"nativeSrc": "21175:25:9",
															"nodeType": "YulAssignment",
															"src": "21175:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21198:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21198:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21180:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21180:17:9"
																},
																"nativeSrc": "21180:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21180:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21175:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21175:1:9"
																}
															]
														},
														{
															"nativeSrc": "21209:25:9",
															"nodeType": "YulAssignment",
															"src": "21209:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21232:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21232:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21214:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21214:17:9"
																},
																"nativeSrc": "21214:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21214:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21209:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21209:1:9"
																}
															]
														},
														{
															"nativeSrc": "21243:17:9",
															"nodeType": "YulAssignment",
															"src": "21243:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21255:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21255:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21258:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21258:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21251:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21251:3:9"
																},
																"nativeSrc": "21251:9:9",
																"nodeType": "YulFunctionCall",
																"src": "21251:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21243:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21243:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21285:22:9",
																"nodeType": "YulBlock",
																"src": "21285:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21287:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "21287:16:9"
																			},
																			"nativeSrc": "21287:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "21287:18:9"
																		},
																		"nativeSrc": "21287:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "21287:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21276:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21276:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21282:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21282:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21273:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "21273:2:9"
																},
																"nativeSrc": "21273:11:9",
																"nodeType": "YulFunctionCall",
																"src": "21273:11:9"
															},
															"nativeSrc": "21270:37:9",
															"nodeType": "YulIf",
															"src": "21270:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21120:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21151:1:9",
														"nodeType": "YulTypedName",
														"src": "21151:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21154:1:9",
														"nodeType": "YulTypedName",
														"src": "21154:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21160:4:9",
														"nodeType": "YulTypedName",
														"src": "21160:4:9",
														"type": ""
													}
												],
												"src": "21120:194:9"
											},
											{
												"body": {
													"nativeSrc": "21426:62:9",
													"nodeType": "YulBlock",
													"src": "21426:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21448:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21448:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21456:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21456:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21444:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21444:3:9"
																		},
																		"nativeSrc": "21444:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21444:14:9"
																	},
																	{
																		"hexValue": "6e6f74204552433732315265636569766572",
																		"kind": "string",
																		"nativeSrc": "21460:20:9",
																		"nodeType": "YulLiteral",
																		"src": "21460:20:9",
																		"type": "",
																		"value": "not ERC721Receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21437:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21437:6:9"
																},
																"nativeSrc": "21437:44:9",
																"nodeType": "YulFunctionCall",
																"src": "21437:44:9"
															},
															"nativeSrc": "21437:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "21437:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149",
												"nativeSrc": "21320:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21418:6:9",
														"nodeType": "YulTypedName",
														"src": "21418:6:9",
														"type": ""
													}
												],
												"src": "21320:168:9"
											},
											{
												"body": {
													"nativeSrc": "21640:220:9",
													"nodeType": "YulBlock",
													"src": "21640:220:9",
													"statements": [
														{
															"nativeSrc": "21650:74:9",
															"nodeType": "YulAssignment",
															"src": "21650:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21716:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21716:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21721:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21721:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21657:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21657:58:9"
																},
																"nativeSrc": "21657:67:9",
																"nodeType": "YulFunctionCall",
																"src": "21657:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21650:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21650:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21822:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21822:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149",
																	"nativeSrc": "21733:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21733:88:9"
																},
																"nativeSrc": "21733:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21733:93:9"
															},
															"nativeSrc": "21733:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21733:93:9"
														},
														{
															"nativeSrc": "21835:19:9",
															"nodeType": "YulAssignment",
															"src": "21835:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21846:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21846:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21851:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21851:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21842:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21842:3:9"
																},
																"nativeSrc": "21842:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21842:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21835:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21835:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21494:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21628:3:9",
														"nodeType": "YulTypedName",
														"src": "21628:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21636:3:9",
														"nodeType": "YulTypedName",
														"src": "21636:3:9",
														"type": ""
													}
												],
												"src": "21494:366:9"
											},
											{
												"body": {
													"nativeSrc": "22037:248:9",
													"nodeType": "YulBlock",
													"src": "22037:248:9",
													"statements": [
														{
															"nativeSrc": "22047:26:9",
															"nodeType": "YulAssignment",
															"src": "22047:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22059:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22059:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22070:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22070:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22055:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22055:3:9"
																},
																"nativeSrc": "22055:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22055:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22047:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22047:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22094:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22094:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22105:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22105:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22090:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22090:3:9"
																		},
																		"nativeSrc": "22090:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22090:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22113:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22113:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22119:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22119:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22109:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22109:3:9"
																		},
																		"nativeSrc": "22109:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22109:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22083:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22083:6:9"
																},
																"nativeSrc": "22083:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22083:47:9"
															},
															"nativeSrc": "22083:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22083:47:9"
														},
														{
															"nativeSrc": "22139:139:9",
															"nodeType": "YulAssignment",
															"src": "22139:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22273:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22273:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22147:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22147:124:9"
																},
																"nativeSrc": "22147:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22147:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22139:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22139:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21866:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22017:9:9",
														"nodeType": "YulTypedName",
														"src": "22017:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22032:4:9",
														"nodeType": "YulTypedName",
														"src": "22032:4:9",
														"type": ""
													}
												],
												"src": "21866:419:9"
											},
											{
												"body": {
													"nativeSrc": "22319:152:9",
													"nodeType": "YulBlock",
													"src": "22319:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22336:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22336:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22339:77:9",
																		"nodeType": "YulLiteral",
																		"src": "22339:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22329:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22329:6:9"
																},
																"nativeSrc": "22329:88:9",
																"nodeType": "YulFunctionCall",
																"src": "22329:88:9"
															},
															"nativeSrc": "22329:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "22329:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22433:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22433:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22436:4:9",
																		"nodeType": "YulLiteral",
																		"src": "22436:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22426:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22426:6:9"
																},
																"nativeSrc": "22426:15:9",
																"nodeType": "YulFunctionCall",
																"src": "22426:15:9"
															},
															"nativeSrc": "22426:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "22426:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22457:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22457:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22460:4:9",
																		"nodeType": "YulLiteral",
																		"src": "22460:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22450:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22450:6:9"
																},
																"nativeSrc": "22450:15:9",
																"nodeType": "YulFunctionCall",
																"src": "22450:15:9"
															},
															"nativeSrc": "22450:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "22450:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22291:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "22291:180:9"
											},
											{
												"body": {
													"nativeSrc": "22535:40:9",
													"nodeType": "YulBlock",
													"src": "22535:40:9",
													"statements": [
														{
															"nativeSrc": "22546:22:9",
															"nodeType": "YulAssignment",
															"src": "22546:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22562:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "22562:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22556:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "22556:5:9"
																},
																"nativeSrc": "22556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22556:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22546:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22546:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22477:98:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22518:5:9",
														"nodeType": "YulTypedName",
														"src": "22518:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22528:6:9",
														"nodeType": "YulTypedName",
														"src": "22528:6:9",
														"type": ""
													}
												],
												"src": "22477:98:9"
											},
											{
												"body": {
													"nativeSrc": "22676:73:9",
													"nodeType": "YulBlock",
													"src": "22676:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22693:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22693:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "22698:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22686:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22686:6:9"
																},
																"nativeSrc": "22686:19:9",
																"nodeType": "YulFunctionCall",
																"src": "22686:19:9"
															},
															"nativeSrc": "22686:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "22686:19:9"
														},
														{
															"nativeSrc": "22714:29:9",
															"nodeType": "YulAssignment",
															"src": "22714:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22733:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22733:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22738:4:9",
																		"nodeType": "YulLiteral",
																		"src": "22738:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22729:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22729:3:9"
																},
																"nativeSrc": "22729:14:9",
																"nodeType": "YulFunctionCall",
																"src": "22729:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22714:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "22714:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22581:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22648:3:9",
														"nodeType": "YulTypedName",
														"src": "22648:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22653:6:9",
														"nodeType": "YulTypedName",
														"src": "22653:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22664:11:9",
														"nodeType": "YulTypedName",
														"src": "22664:11:9",
														"type": ""
													}
												],
												"src": "22581:168:9"
											},
											{
												"body": {
													"nativeSrc": "22845:283:9",
													"nodeType": "YulBlock",
													"src": "22845:283:9",
													"statements": [
														{
															"nativeSrc": "22855:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "22855:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22901:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "22901:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22869:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "22869:31:9"
																},
																"nativeSrc": "22869:38:9",
																"nodeType": "YulFunctionCall",
																"src": "22869:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22859:6:9",
																	"nodeType": "YulTypedName",
																	"src": "22859:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22916:77:9",
															"nodeType": "YulAssignment",
															"src": "22916:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22981:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22981:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22986:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "22986:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22923:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "22923:57:9"
																},
																"nativeSrc": "22923:70:9",
																"nodeType": "YulFunctionCall",
																"src": "22923:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22916:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22916:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23041:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "23041:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23048:4:9",
																				"nodeType": "YulLiteral",
																				"src": "23048:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23037:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23037:3:9"
																		},
																		"nativeSrc": "23037:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23037:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23055:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23055:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23060:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23060:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23002:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "23002:34:9"
																},
																"nativeSrc": "23002:65:9",
																"nodeType": "YulFunctionCall",
																"src": "23002:65:9"
															},
															"nativeSrc": "23002:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "23002:65:9"
														},
														{
															"nativeSrc": "23076:46:9",
															"nodeType": "YulAssignment",
															"src": "23076:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23087:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23087:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23114:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23114:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "23092:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "23092:21:9"
																		},
																		"nativeSrc": "23092:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23092:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23083:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23083:3:9"
																},
																"nativeSrc": "23083:39:9",
																"nodeType": "YulFunctionCall",
																"src": "23083:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23076:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23076:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22755:373:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22826:5:9",
														"nodeType": "YulTypedName",
														"src": "22826:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22833:3:9",
														"nodeType": "YulTypedName",
														"src": "22833:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22841:3:9",
														"nodeType": "YulTypedName",
														"src": "22841:3:9",
														"type": ""
													}
												],
												"src": "22755:373:9"
											},
											{
												"body": {
													"nativeSrc": "23334:440:9",
													"nodeType": "YulBlock",
													"src": "23334:440:9",
													"statements": [
														{
															"nativeSrc": "23344:27:9",
															"nodeType": "YulAssignment",
															"src": "23344:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23356:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23356:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23367:3:9",
																		"nodeType": "YulLiteral",
																		"src": "23367:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23352:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23352:3:9"
																},
																"nativeSrc": "23352:19:9",
																"nodeType": "YulFunctionCall",
																"src": "23352:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23344:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23344:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23425:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23425:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23438:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23438:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23449:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23449:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23434:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23434:3:9"
																		},
																		"nativeSrc": "23434:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23434:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23381:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23381:43:9"
																},
																"nativeSrc": "23381:71:9",
																"nodeType": "YulFunctionCall",
																"src": "23381:71:9"
															},
															"nativeSrc": "23381:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "23381:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23506:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23506:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23519:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23519:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23530:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23530:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23515:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23515:3:9"
																		},
																		"nativeSrc": "23515:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23515:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23462:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23462:43:9"
																},
																"nativeSrc": "23462:72:9",
																"nodeType": "YulFunctionCall",
																"src": "23462:72:9"
															},
															"nativeSrc": "23462:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "23462:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23588:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23588:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23601:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23601:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23612:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23612:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23597:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23597:3:9"
																		},
																		"nativeSrc": "23597:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23597:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23544:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23544:43:9"
																},
																"nativeSrc": "23544:72:9",
																"nodeType": "YulFunctionCall",
																"src": "23544:72:9"
															},
															"nativeSrc": "23544:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "23544:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23637:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23637:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23648:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23648:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23633:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23633:3:9"
																		},
																		"nativeSrc": "23633:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23633:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23657:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23657:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23663:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23663:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23653:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23653:3:9"
																		},
																		"nativeSrc": "23653:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23653:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23626:6:9"
																},
																"nativeSrc": "23626:48:9",
																"nodeType": "YulFunctionCall",
																"src": "23626:48:9"
															},
															"nativeSrc": "23626:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "23626:48:9"
														},
														{
															"nativeSrc": "23683:84:9",
															"nodeType": "YulAssignment",
															"src": "23683:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23753:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23753:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23762:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23762:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23691:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "23691:61:9"
																},
																"nativeSrc": "23691:76:9",
																"nodeType": "YulFunctionCall",
																"src": "23691:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23683:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23683:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23134:640:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23282:9:9",
														"nodeType": "YulTypedName",
														"src": "23282:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23294:6:9",
														"nodeType": "YulTypedName",
														"src": "23294:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23302:6:9",
														"nodeType": "YulTypedName",
														"src": "23302:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23310:6:9",
														"nodeType": "YulTypedName",
														"src": "23310:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23318:6:9",
														"nodeType": "YulTypedName",
														"src": "23318:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23329:4:9",
														"nodeType": "YulTypedName",
														"src": "23329:4:9",
														"type": ""
													}
												],
												"src": "23134:640:9"
											},
											{
												"body": {
													"nativeSrc": "23842:79:9",
													"nodeType": "YulBlock",
													"src": "23842:79:9",
													"statements": [
														{
															"nativeSrc": "23852:22:9",
															"nodeType": "YulAssignment",
															"src": "23852:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23867:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23867:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23861:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "23861:5:9"
																},
																"nativeSrc": "23861:13:9",
																"nodeType": "YulFunctionCall",
																"src": "23861:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23852:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "23852:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23909:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "23909:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23883:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "23883:25:9"
																},
																"nativeSrc": "23883:32:9",
																"nodeType": "YulFunctionCall",
																"src": "23883:32:9"
															},
															"nativeSrc": "23883:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "23883:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23780:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23820:6:9",
														"nodeType": "YulTypedName",
														"src": "23820:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23828:3:9",
														"nodeType": "YulTypedName",
														"src": "23828:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23836:5:9",
														"nodeType": "YulTypedName",
														"src": "23836:5:9",
														"type": ""
													}
												],
												"src": "23780:141:9"
											},
											{
												"body": {
													"nativeSrc": "24003:273:9",
													"nodeType": "YulBlock",
													"src": "24003:273:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "24049:83:9",
																"nodeType": "YulBlock",
																"src": "24049:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24051:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "24051:77:9"
																			},
																			"nativeSrc": "24051:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "24051:79:9"
																		},
																		"nativeSrc": "24051:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "24051:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24024:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "24024:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24033:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24020:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24020:3:9"
																		},
																		"nativeSrc": "24020:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24020:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24045:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24045:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24016:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24016:3:9"
																},
																"nativeSrc": "24016:32:9",
																"nodeType": "YulFunctionCall",
																"src": "24016:32:9"
															},
															"nativeSrc": "24013:119:9",
															"nodeType": "YulIf",
															"src": "24013:119:9"
														},
														{
															"nativeSrc": "24142:127:9",
															"nodeType": "YulBlock",
															"src": "24142:127:9",
															"statements": [
																{
																	"nativeSrc": "24157:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24157:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24171:1:9",
																		"nodeType": "YulLiteral",
																		"src": "24171:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24161:6:9",
																			"nodeType": "YulTypedName",
																			"src": "24161:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24186:73:9",
																	"nodeType": "YulAssignment",
																	"src": "24186:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24231:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "24231:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24242:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "24242:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24227:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "24227:3:9"
																				},
																				"nativeSrc": "24227:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "24227:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24251:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "24251:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "24196:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "24196:30:9"
																		},
																		"nativeSrc": "24196:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24196:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24186:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "24186:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23927:349:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23973:9:9",
														"nodeType": "YulTypedName",
														"src": "23973:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23984:7:9",
														"nodeType": "YulTypedName",
														"src": "23984:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23996:6:9",
														"nodeType": "YulTypedName",
														"src": "23996:6:9",
														"type": ""
													}
												],
												"src": "23927:349:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b(memPtr) {\n\n        mstore(add(memPtr, 0), \"token doesn't exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481(memPtr) {\n\n        mstore(add(memPtr, 0), \"mint to zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582(memPtr) {\n\n        mstore(add(memPtr, 0), \"token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8(memPtr) {\n\n        mstore(add(memPtr, 0), \"owner = zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Not Exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149(memPtr) {\n\n        mstore(add(memPtr, 0), \"not ERC721Receiver\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80634e6ec24711610097578063a22cb46511610066578063a22cb46514610296578063b88d4fde146102b2578063c87b56dd146102ce578063e985e9c5146102fe576100f5565b80634e6ec247146101fc5780636352211e1461021857806370a082311461024857806395d89b4114610278576100f5565b8063095ea7b3116100d3578063095ea7b314610178578063162790551461019457806323b872dd146101c457806342842e0e146101e0576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f91906116e4565b61032e565b604051610121919061172c565b60405180910390f35b610132610468565b60405161013f91906117d7565b60405180910390f35b610162600480360381019061015d919061182f565b6104f6565b60405161016f919061189d565b60405180910390f35b610192600480360381019061018d91906118e4565b6105d4565b005b6101ae60048036038101906101a99190611924565b61071b565b6040516101bb919061172c565b60405180910390f35b6101de60048036038101906101d99190611951565b610734565b005b6101fa60048036038101906101f59190611951565b61079d565b005b610216600480360381019061021191906118e4565b6107bd565b005b610232600480360381019061022d919061182f565b6109d7565b60405161023f919061189d565b60405180910390f35b610262600480360381019061025d9190611924565b610a83565b60405161026f91906119b3565b60405180910390f35b610280610b3a565b60405161028d91906117d7565b60405180910390f35b6102b060048036038101906102ab91906119fa565b610bc8565b005b6102cc60048036038101906102c79190611b6f565b610cc5565b005b6102e860048036038101906102e3919061182f565b610d30565b6040516102f591906117d7565b60405180910390f35b61031860048036038101906103139190611bf2565b610e31565b604051610325919061172c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f957507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461047590611c61565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611c61565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090611cde565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106cc5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290611d4a565b60405180910390fd5b610716818484610ec5565b505050565b600080823b905060008163ffffffff1611915050919050565b600061073f826109d7565b905061074c813384610f77565b61078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290611db6565b60405180910390fd5b610797818585856110ab565b50505050565b6107b883838360405180602001604052806000815250610cc5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082390611e22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611e8e565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091e9190611edd565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7590611cde565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611f5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610b4790611c61565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7390611c61565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb9919061172c565b60405180910390a35050565b6000610cd0836109d7565b9050610cdd813385610f77565b610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1390611db6565b60405180910390fd5b610d2981868686866112f5565b5050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcb90611fc9565b60405180910390fd5b6000610dde611353565b90506000815111610dfe5760405180602001604052806000815250610e29565b80610e088461136a565b604051602001610e19929190612025565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061101157508273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806110a25750600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b90509392505050565b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111090612095565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117f90612101565b60405180910390fd5b61119484600083610ec5565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111e49190612121565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123b9190611edd565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b611301858585856110ab565b61130d84848484611438565b61134c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611343906121a1565b60405180910390fd5b5050505050565b606060405180602001604052806000815250905090565b60606000600161137984611525565b01905060008167ffffffffffffffff81111561139857611397611a44565b5b6040519080825280601f01601f1916602001820160405280156113ca5781602001600182028036833780820191505090505b509050600082602001820190505b60011561142d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611421576114206121c1565b5b049450600085036113d8575b819350505050919050565b60006114438461071b565b156115185763150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114ae9493929190612245565b6020604051808303816000875af11580156114cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f191906122a6565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905061151d565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611583577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611579576115786121c1565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106115c0576d04ee2d6d415b85acef810000000083816115b6576115b56121c1565b5b0492506020810190505b662386f26fc1000083106115ef57662386f26fc1000083816115e5576115e46121c1565b5b0492506010810190505b6305f5e1008310611618576305f5e100838161160e5761160d6121c1565b5b0492506008810190505b612710831061163d576127108381611633576116326121c1565b5b0492506004810190505b606483106116605760648381611656576116556121c1565b5b0492506002810190505b600a831061166f576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116c18161168c565b81146116cc57600080fd5b50565b6000813590506116de816116b8565b92915050565b6000602082840312156116fa576116f9611682565b5b6000611708848285016116cf565b91505092915050565b60008115159050919050565b61172681611711565b82525050565b6000602082019050611741600083018461171d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611781578082015181840152602081019050611766565b60008484015250505050565b6000601f19601f8301169050919050565b60006117a982611747565b6117b38185611752565b93506117c3818560208601611763565b6117cc8161178d565b840191505092915050565b600060208201905081810360008301526117f1818461179e565b905092915050565b6000819050919050565b61180c816117f9565b811461181757600080fd5b50565b60008135905061182981611803565b92915050565b60006020828403121561184557611844611682565b5b60006118538482850161181a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118878261185c565b9050919050565b6118978161187c565b82525050565b60006020820190506118b2600083018461188e565b92915050565b6118c18161187c565b81146118cc57600080fd5b50565b6000813590506118de816118b8565b92915050565b600080604083850312156118fb576118fa611682565b5b6000611909858286016118cf565b925050602061191a8582860161181a565b9150509250929050565b60006020828403121561193a57611939611682565b5b6000611948848285016118cf565b91505092915050565b60008060006060848603121561196a57611969611682565b5b6000611978868287016118cf565b9350506020611989868287016118cf565b925050604061199a8682870161181a565b9150509250925092565b6119ad816117f9565b82525050565b60006020820190506119c860008301846119a4565b92915050565b6119d781611711565b81146119e257600080fd5b50565b6000813590506119f4816119ce565b92915050565b60008060408385031215611a1157611a10611682565b5b6000611a1f858286016118cf565b9250506020611a30858286016119e5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7c8261178d565b810181811067ffffffffffffffff82111715611a9b57611a9a611a44565b5b80604052505050565b6000611aae611678565b9050611aba8282611a73565b919050565b600067ffffffffffffffff821115611ada57611ad9611a44565b5b611ae38261178d565b9050602081019050919050565b82818337600083830152505050565b6000611b12611b0d84611abf565b611aa4565b905082815260208101848484011115611b2e57611b2d611a3f565b5b611b39848285611af0565b509392505050565b600082601f830112611b5657611b55611a3a565b5b8135611b66848260208601611aff565b91505092915050565b60008060008060808587031215611b8957611b88611682565b5b6000611b97878288016118cf565b9450506020611ba8878288016118cf565b9350506040611bb98782880161181a565b925050606085013567ffffffffffffffff811115611bda57611bd9611687565b5b611be687828801611b41565b91505092959194509250565b60008060408385031215611c0957611c08611682565b5b6000611c17858286016118cf565b9250506020611c28858286016118cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7957607f821691505b602082108103611c8c57611c8b611c32565b5b50919050565b7f746f6b656e20646f65736e277420657869737400000000000000000000000000600082015250565b6000611cc8601383611752565b9150611cd382611c92565b602082019050919050565b60006020820190508181036000830152611cf781611cbb565b9050919050565b7f6e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c0000600082015250565b6000611d34601e83611752565b9150611d3f82611cfe565b602082019050919050565b60006020820190508181036000830152611d6381611d27565b9050919050565b7f6e6f74206f776e6572206e6f7220617070726f76656400000000000000000000600082015250565b6000611da0601683611752565b9150611dab82611d6a565b602082019050919050565b60006020820190508181036000830152611dcf81611d93565b9050919050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000611e0c601483611752565b9150611e1782611dd6565b602082019050919050565b60006020820190508181036000830152611e3b81611dff565b9050919050565b7f746f6b656e20616c7265616479206d696e746564000000000000000000000000600082015250565b6000611e78601483611752565b9150611e8382611e42565b602082019050919050565b60006020820190508181036000830152611ea781611e6b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ee8826117f9565b9150611ef3836117f9565b9250828201905080821115611f0b57611f0a611eae565b5b92915050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b6000611f47601483611752565b9150611f5282611f11565b602082019050919050565b60006020820190508181036000830152611f7681611f3a565b9050919050565b7f546f6b656e204e6f742045786973740000000000000000000000000000000000600082015250565b6000611fb3600f83611752565b9150611fbe82611f7d565b602082019050919050565b60006020820190508181036000830152611fe281611fa6565b9050919050565b600081905092915050565b6000611fff82611747565b6120098185611fe9565b9350612019818560208601611763565b80840191505092915050565b60006120318285611ff4565b915061203d8284611ff4565b91508190509392505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b600061207f600983611752565b915061208a82612049565b602082019050919050565b600060208201905081810360008301526120ae81612072565b9050919050565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b60006120eb601c83611752565b91506120f6826120b5565b602082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b600061212c826117f9565b9150612137836117f9565b925082820390508181111561214f5761214e611eae565b5b92915050565b7f6e6f742045524337323152656365697665720000000000000000000000000000600082015250565b600061218b601283611752565b915061219682612155565b602082019050919050565b600060208201905081810360008301526121ba8161217e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000612217826121f0565b61222181856121fb565b9350612231818560208601611763565b61223a8161178d565b840191505092915050565b600060808201905061225a600083018761188e565b612267602083018661188e565b61227460408301856119a4565b8181036060830152612286818461220c565b905095945050505050565b6000815190506122a0816116b8565b92915050565b6000602082840312156122bc576122bb611682565b5b60006122ca84828501612291565b9150509291505056fea264697066735822122038cdaaf94404bafd7ce5e5a142b54553458ce17ab56623e7ca0d623b6eb4586364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E6EC247 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2FE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x461 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6CC JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x716 DUP2 DUP5 DUP5 PUSH2 0xEC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP3 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x74C DUP2 CALLER DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 DUP2 DUP6 DUP6 DUP6 PUSH2 0x10AB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA75 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xB47 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB73 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB95 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD0 DUP4 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH2 0xCDD DUP2 CALLER DUP6 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD29 DUP2 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12F5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDDE PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE29 JUMP JUMPDEST DUP1 PUSH2 0xE08 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1011 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x10A2 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1110 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 DUP5 PUSH1 0x0 DUP4 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x123B SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1301 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x130D DUP5 DUP5 DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1379 DUP5 PUSH2 0x1525 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x142D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x13D8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 DUP5 PUSH2 0x71B JUMP JUMPDEST ISZERO PUSH2 0x1518 JUMPI PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1583 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15C0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15EF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1618 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x163D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1660 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1656 JUMPI PUSH2 0x1655 PUSH2 0x21C1 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x166F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DE DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FA JUMPI PUSH2 0x16F9 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x16CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1726 DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1741 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x171D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1781 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A9 DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x17B3 DUP2 DUP6 PUSH2 0x1752 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x178D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F1 DUP2 DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DE DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP5 DUP3 DUP6 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1978 DUP7 DUP3 DUP8 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1989 DUP7 DUP3 DUP8 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x199A DUP7 DUP3 DUP8 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19AD DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D7 DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A11 JUMPI PUSH2 0x1A10 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1F DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A30 DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A7C DUP3 PUSH2 0x178D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A9B JUMPI PUSH2 0x1A9A PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAE PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABA DUP3 DUP3 PUSH2 0x1A73 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1AE3 DUP3 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 PUSH2 0x1B0D DUP5 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B2E JUMPI PUSH2 0x1B2D PUSH2 0x1A3F JUMP JUMPDEST JUMPDEST PUSH2 0x1B39 DUP5 DUP3 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0x1A3A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B88 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B97 DUP8 DUP3 DUP9 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BA8 DUP8 DUP3 DUP9 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BB9 DUP8 DUP3 DUP9 ADD PUSH2 0x181A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1687 JUMP JUMPDEST JUMPDEST PUSH2 0x1BE6 DUP8 DUP3 DUP9 ADD PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C17 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20646F65736E277420657869737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC8 PUSH1 0x13 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD3 DUP3 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF7 DUP2 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D34 PUSH1 0x1E DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3F DUP3 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D63 DUP2 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E6572206E6F7220617070726F76656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 PUSH1 0x16 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E7420746F207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0C PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E17 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20616C7265616479206D696E746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E78 PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E83 DUP3 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EE8 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0B JUMPI PUSH2 0x1F0A PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F776E6572203D207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F47 PUSH1 0x14 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F52 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F76 DUP2 PUSH2 0x1F3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E204E6F742045786973740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB3 PUSH1 0xF DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBE DUP3 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE2 DUP2 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFF DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x2009 DUP2 DUP6 PUSH2 0x1FE9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2019 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2031 DUP3 DUP6 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x203D DUP3 DUP5 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207F PUSH1 0x9 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x208A DUP3 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20AE DUP2 PUSH2 0x2072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7472616E7366657220746F20746865207A65726F206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x1C DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2137 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x1EAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742045524337323152656365697665720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B PUSH1 0x12 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BA DUP2 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2217 DUP3 PUSH2 0x21F0 JUMP JUMPDEST PUSH2 0x2221 DUP2 DUP6 PUSH2 0x21FB JUMP JUMPDEST SWAP4 POP PUSH2 0x2231 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x223A DUP2 PUSH2 0x178D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x225A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2267 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2274 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2286 DUP2 DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A0 DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x1682 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CA DUP5 DUP3 DUP6 ADD PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xCD 0xAA 0xF9 DIFFICULTY DIV 0xBA REVERT PUSH29 0xE5E5A142B54553458CE17AB56623E7CA0D623B6EB4586364736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1333:9194:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1552:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4123:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4793:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2630:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6206:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7800:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8414:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3165:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2908:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3814:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7388:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9910:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3492:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2307:317;2418:4;2472:25;2457:40;;;:11;:40;;;;:96;;;;2528:25;2513:40;;;:11;:40;;;;2457:96;:160;;;;2584:33;2569:48;;;:11;:48;;;;2457:160;2438:179;;2307:317;;;:::o;1552:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4123:196::-;4190:7;4245:1;4217:30;;:7;:16;4225:7;4217:16;;;;;;;;;;;;;;;;;;;;;:30;;;4209:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4288:15;:24;4304:7;4288:24;;;;;;;;;;;;;;;;;;;;;4281:31;;4123:196;;;:::o;4793:295::-;4864:13;4880:7;:16;4888:7;4880:16;;;;;;;;;;;;;;;;;;;;;4864:32;;4941:5;4927:19;;:10;:19;;;:60;;;;4950:18;:25;4969:5;4950:25;;;;;;;;;;;;;;;:37;4976:10;4950:37;;;;;;;;;;;;;;;;;;;;;;;;;4927:60;4906:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;5053:28;5062:5;5069:2;5073:7;5053:8;:28::i;:::-;4854:234;4793:295;;:::o;2630:185::-;2687:4;2702:11;2766:5;2754:18;2746:26;;2806:1;2799:4;:8;;;2791:17;;;2630:185;;;:::o;6206:329::-;6326:13;6342:16;6350:7;6342;:16::i;:::-;6326:32;;6389:46;6408:5;6415:10;6427:7;6389:18;:46::i;:::-;6368:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;6493:35;6503:5;6510:4;6516:2;6520:7;6493:9;:35::i;:::-;6316:219;6206:329;;;:::o;7800:170::-;7924:39;7941:4;7947:2;7951:7;7924:39;;;;;;;;;;;;:16;:39::i;:::-;7800:170;;;:::o;8414:297::-;8495:1;8481:16;;:2;:16;;;8473:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;8568:1;8540:30;;:7;:16;8548:7;8540:16;;;;;;;;;;;;;;;;;;;;;:30;;;8532:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8623:1;8606:9;:13;8616:2;8606:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;8653:2;8634:7;:16;8642:7;8634:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;8696:7;8692:2;8671:33;;8688:1;8671:33;;;;;;;;;;;;8414:297;;:::o;3165:178::-;3226:13;3259:7;:16;3267:7;3259:16;;;;;;;;;;;;;;;;;;;;;3251:24;;3310:1;3293:19;;:5;:19;;;3285:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3165:178;;;:::o;2908:174::-;2974:4;3015:1;2998:19;;:5;:19;;;2990:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3059:9;:16;3069:5;3059:16;;;;;;;;;;;;;;;;3052:23;;2908:174;;;:::o;1604:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3814:207::-;3945:8;3902:18;:30;3921:10;3902:30;;;;;;;;;;;;;;;:40;3933:8;3902:40;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;3995:8;3968:46;;3983:10;3968:46;;;4005:8;3968:46;;;;;;:::i;:::-;;;;;;;;3814:207;;:::o;7388:370::-;7538:13;7554:16;7562:7;7554;:16::i;:::-;7538:32;;7601:46;7620:5;7627:10;7639:7;7601:18;:46::i;:::-;7580:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;7705:46;7719:5;7726:4;7732:2;7736:7;7745:5;7705:13;:46::i;:::-;7528:230;7388:370;;;;:::o;9910:311::-;9983:13;10044:1;10016:30;;:7;:16;10024:7;10016:16;;;;;;;;;;;;;;;;;;;;;:30;;;10008:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;10077:21;10101:10;:8;:10::i;:::-;10077:34;;10152:1;10134:7;10128:21;:25;:86;;;;;;;;;;;;;;;;;10180:7;10189:18;:7;:16;:18::i;:::-;10163:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10128:86;10121:93;;;9910:311;;;:::o;3492:192::-;3615:4;3642:18;:25;3661:5;3642:25;;;;;;;;;;;;;;;:35;3668:8;3642:35;;;;;;;;;;;;;;;;;;;;;;;;;3635:42;;3492:192;;;;:::o;4448:186::-;4582:2;4555:15;:24;4571:7;4555:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4619:7;4615:2;4599:28;;4608:5;4599:28;;;;;;;;;;;;4448:186;;;:::o;5185:275::-;5311:4;5346:5;5335:16;;:7;:16;;;:67;;;;5395:7;5367:35;;:15;:24;5383:7;5367:24;;;;;;;;;;;;;;;;;;;;;:35;;;5335:67;:117;;;;5418:18;:25;5437:5;5418:25;;;;;;;;;;;;;;;:34;5444:7;5418:34;;;;;;;;;;;;;;;;;;;;;;;;;5335:117;5327:126;;5185:275;;;;;:::o;5681:419::-;5827:5;5819:13;;:4;:13;;;5811:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;5878:1;5864:16;;:2;:16;;;5856:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;5924:36;5933:5;5948:1;5952:7;5924:8;:36::i;:::-;5990:1;5971:9;:15;5981:4;5971:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;6018:1;6001:9;:13;6011:2;6001:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;6048:2;6029:7;:16;6037:7;6029:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;6085:7;6081:2;6066:27;;6075:4;6066:27;;;;;;;;;;;;5681:419;;;;:::o;6984:293::-;7146:35;7156:5;7163:4;7169:2;7173:7;7146:9;:35::i;:::-;7199:48;7222:4;7228:2;7232:7;7241:5;7199:22;:48::i;:::-;7191:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;6984:293;;;;;:::o;10433:92::-;10484:13;10509:9;;;;;;;;;;;;;;10433:92;:::o;637:698:4:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;9330:492:8:-;9477:4;9497:14;9508:2;9497:10;:14::i;:::-;9493:323;;;9722:41;;;9550:213;;;9566:2;9550:36;;;9608:10;9640:4;9666:7;9695:5;9550:168;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:213;;;;9527:236;;;;9493:323;9801:4;9794:11;;9330:492;;;;;;;:::o;12214:916:6:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:329::-;4951:6;5000:2;4988:9;4979:7;4975:23;4971:32;4968:119;;;5006:79;;:::i;:::-;4968:119;5126:1;5151:53;5196:7;5187:6;5176:9;5172:22;5151:53;:::i;:::-;5141:63;;5097:117;4892:329;;;;:::o;5227:619::-;5304:6;5312;5320;5369:2;5357:9;5348:7;5344:23;5340:32;5337:119;;;5375:79;;:::i;:::-;5337:119;5495:1;5520:53;5565:7;5556:6;5545:9;5541:22;5520:53;:::i;:::-;5510:63;;5466:117;5622:2;5648:53;5693:7;5684:6;5673:9;5669:22;5648:53;:::i;:::-;5638:63;;5593:118;5750:2;5776:53;5821:7;5812:6;5801:9;5797:22;5776:53;:::i;:::-;5766:63;;5721:118;5227:619;;;;;:::o;5852:118::-;5939:24;5957:5;5939:24;:::i;:::-;5934:3;5927:37;5852:118;;:::o;5976:222::-;6069:4;6107:2;6096:9;6092:18;6084:26;;6120:71;6188:1;6177:9;6173:17;6164:6;6120:71;:::i;:::-;5976:222;;;;:::o;6204:116::-;6274:21;6289:5;6274:21;:::i;:::-;6267:5;6264:32;6254:60;;6310:1;6307;6300:12;6254:60;6204:116;:::o;6326:133::-;6369:5;6407:6;6394:20;6385:29;;6423:30;6447:5;6423:30;:::i;:::-;6326:133;;;;:::o;6465:468::-;6530:6;6538;6587:2;6575:9;6566:7;6562:23;6558:32;6555:119;;;6593:79;;:::i;:::-;6555:119;6713:1;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6684:117;6840:2;6866:50;6908:7;6899:6;6888:9;6884:22;6866:50;:::i;:::-;6856:60;;6811:115;6465:468;;;;;:::o;6939:117::-;7048:1;7045;7038:12;7062:117;7171:1;7168;7161:12;7185:180;7233:77;7230:1;7223:88;7330:4;7327:1;7320:15;7354:4;7351:1;7344:15;7371:281;7454:27;7476:4;7454:27;:::i;:::-;7446:6;7442:40;7584:6;7572:10;7569:22;7548:18;7536:10;7533:34;7530:62;7527:88;;;7595:18;;:::i;:::-;7527:88;7635:10;7631:2;7624:22;7414:238;7371:281;;:::o;7658:129::-;7692:6;7719:20;;:::i;:::-;7709:30;;7748:33;7776:4;7768:6;7748:33;:::i;:::-;7658:129;;;:::o;7793:307::-;7854:4;7944:18;7936:6;7933:30;7930:56;;;7966:18;;:::i;:::-;7930:56;8004:29;8026:6;8004:29;:::i;:::-;7996:37;;8088:4;8082;8078:15;8070:23;;7793:307;;;:::o;8106:148::-;8204:6;8199:3;8194;8181:30;8245:1;8236:6;8231:3;8227:16;8220:27;8106:148;;;:::o;8260:423::-;8337:5;8362:65;8378:48;8419:6;8378:48;:::i;:::-;8362:65;:::i;:::-;8353:74;;8450:6;8443:5;8436:21;8488:4;8481:5;8477:16;8526:3;8517:6;8512:3;8508:16;8505:25;8502:112;;;8533:79;;:::i;:::-;8502:112;8623:54;8670:6;8665:3;8660;8623:54;:::i;:::-;8343:340;8260:423;;;;;:::o;8702:338::-;8757:5;8806:3;8799:4;8791:6;8787:17;8783:27;8773:122;;8814:79;;:::i;:::-;8773:122;8931:6;8918:20;8956:78;9030:3;9022:6;9015:4;9007:6;9003:17;8956:78;:::i;:::-;8947:87;;8763:277;8702:338;;;;:::o;9046:943::-;9141:6;9149;9157;9165;9214:3;9202:9;9193:7;9189:23;9185:33;9182:120;;;9221:79;;:::i;:::-;9182:120;9341:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;:::i;:::-;9356:63;;9312:117;9468:2;9494:53;9539:7;9530:6;9519:9;9515:22;9494:53;:::i;:::-;9484:63;;9439:118;9596:2;9622:53;9667:7;9658:6;9647:9;9643:22;9622:53;:::i;:::-;9612:63;;9567:118;9752:2;9741:9;9737:18;9724:32;9783:18;9775:6;9772:30;9769:117;;;9805:79;;:::i;:::-;9769:117;9910:62;9964:7;9955:6;9944:9;9940:22;9910:62;:::i;:::-;9900:72;;9695:287;9046:943;;;;;;;:::o;9995:474::-;10063:6;10071;10120:2;10108:9;10099:7;10095:23;10091:32;10088:119;;;10126:79;;:::i;:::-;10088:119;10246:1;10271:53;10316:7;10307:6;10296:9;10292:22;10271:53;:::i;:::-;10261:63;;10217:117;10373:2;10399:53;10444:7;10435:6;10424:9;10420:22;10399:53;:::i;:::-;10389:63;;10344:118;9995:474;;;;;:::o;10475:180::-;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:320;10705:6;10742:1;10736:4;10732:12;10722:22;;10789:1;10783:4;10779:12;10810:18;10800:81;;10866:4;10858:6;10854:17;10844:27;;10800:81;10928:2;10920:6;10917:14;10897:18;10894:38;10891:84;;10947:18;;:::i;:::-;10891:84;10712:269;10661:320;;;:::o;10987:169::-;11127:21;11123:1;11115:6;11111:14;11104:45;10987:169;:::o;11162:366::-;11304:3;11325:67;11389:2;11384:3;11325:67;:::i;:::-;11318:74;;11401:93;11490:3;11401:93;:::i;:::-;11519:2;11514:3;11510:12;11503:19;;11162:366;;;:::o;11534:419::-;11700:4;11738:2;11727:9;11723:18;11715:26;;11787:9;11781:4;11777:20;11773:1;11762:9;11758:17;11751:47;11815:131;11941:4;11815:131;:::i;:::-;11807:139;;11534:419;;;:::o;11959:180::-;12099:32;12095:1;12087:6;12083:14;12076:56;11959:180;:::o;12145:366::-;12287:3;12308:67;12372:2;12367:3;12308:67;:::i;:::-;12301:74;;12384:93;12473:3;12384:93;:::i;:::-;12502:2;12497:3;12493:12;12486:19;;12145:366;;;:::o;12517:419::-;12683:4;12721:2;12710:9;12706:18;12698:26;;12770:9;12764:4;12760:20;12756:1;12745:9;12741:17;12734:47;12798:131;12924:4;12798:131;:::i;:::-;12790:139;;12517:419;;;:::o;12942:172::-;13082:24;13078:1;13070:6;13066:14;13059:48;12942:172;:::o;13120:366::-;13262:3;13283:67;13347:2;13342:3;13283:67;:::i;:::-;13276:74;;13359:93;13448:3;13359:93;:::i;:::-;13477:2;13472:3;13468:12;13461:19;;13120:366;;;:::o;13492:419::-;13658:4;13696:2;13685:9;13681:18;13673:26;;13745:9;13739:4;13735:20;13731:1;13720:9;13716:17;13709:47;13773:131;13899:4;13773:131;:::i;:::-;13765:139;;13492:419;;;:::o;13917:170::-;14057:22;14053:1;14045:6;14041:14;14034:46;13917:170;:::o;14093:366::-;14235:3;14256:67;14320:2;14315:3;14256:67;:::i;:::-;14249:74;;14332:93;14421:3;14332:93;:::i;:::-;14450:2;14445:3;14441:12;14434:19;;14093:366;;;:::o;14465:419::-;14631:4;14669:2;14658:9;14654:18;14646:26;;14718:9;14712:4;14708:20;14704:1;14693:9;14689:17;14682:47;14746:131;14872:4;14746:131;:::i;:::-;14738:139;;14465:419;;;:::o;14890:170::-;15030:22;15026:1;15018:6;15014:14;15007:46;14890:170;:::o;15066:366::-;15208:3;15229:67;15293:2;15288:3;15229:67;:::i;:::-;15222:74;;15305:93;15394:3;15305:93;:::i;:::-;15423:2;15418:3;15414:12;15407:19;;15066:366;;;:::o;15438:419::-;15604:4;15642:2;15631:9;15627:18;15619:26;;15691:9;15685:4;15681:20;15677:1;15666:9;15662:17;15655:47;15719:131;15845:4;15719:131;:::i;:::-;15711:139;;15438:419;;;:::o;15863:180::-;15911:77;15908:1;15901:88;16008:4;16005:1;15998:15;16032:4;16029:1;16022:15;16049:191;16089:3;16108:20;16126:1;16108:20;:::i;:::-;16103:25;;16142:20;16160:1;16142:20;:::i;:::-;16137:25;;16185:1;16182;16178:9;16171:16;;16206:3;16203:1;16200:10;16197:36;;;16213:18;;:::i;:::-;16197:36;16049:191;;;;:::o;16246:170::-;16386:22;16382:1;16374:6;16370:14;16363:46;16246:170;:::o;16422:366::-;16564:3;16585:67;16649:2;16644:3;16585:67;:::i;:::-;16578:74;;16661:93;16750:3;16661:93;:::i;:::-;16779:2;16774:3;16770:12;16763:19;;16422:366;;;:::o;16794:419::-;16960:4;16998:2;16987:9;16983:18;16975:26;;17047:9;17041:4;17037:20;17033:1;17022:9;17018:17;17011:47;17075:131;17201:4;17075:131;:::i;:::-;17067:139;;16794:419;;;:::o;17219:165::-;17359:17;17355:1;17347:6;17343:14;17336:41;17219:165;:::o;17390:366::-;17532:3;17553:67;17617:2;17612:3;17553:67;:::i;:::-;17546:74;;17629:93;17718:3;17629:93;:::i;:::-;17747:2;17742:3;17738:12;17731:19;;17390:366;;;:::o;17762:419::-;17928:4;17966:2;17955:9;17951:18;17943:26;;18015:9;18009:4;18005:20;18001:1;17990:9;17986:17;17979:47;18043:131;18169:4;18043:131;:::i;:::-;18035:139;;17762:419;;;:::o;18187:148::-;18289:11;18326:3;18311:18;;18187:148;;;;:::o;18341:390::-;18447:3;18475:39;18508:5;18475:39;:::i;:::-;18530:89;18612:6;18607:3;18530:89;:::i;:::-;18523:96;;18628:65;18686:6;18681:3;18674:4;18667:5;18663:16;18628:65;:::i;:::-;18718:6;18713:3;18709:16;18702:23;;18451:280;18341:390;;;;:::o;18737:435::-;18917:3;18939:95;19030:3;19021:6;18939:95;:::i;:::-;18932:102;;19051:95;19142:3;19133:6;19051:95;:::i;:::-;19044:102;;19163:3;19156:10;;18737:435;;;;;:::o;19178:159::-;19318:11;19314:1;19306:6;19302:14;19295:35;19178:159;:::o;19343:365::-;19485:3;19506:66;19570:1;19565:3;19506:66;:::i;:::-;19499:73;;19581:93;19670:3;19581:93;:::i;:::-;19699:2;19694:3;19690:12;19683:19;;19343:365;;;:::o;19714:419::-;19880:4;19918:2;19907:9;19903:18;19895:26;;19967:9;19961:4;19957:20;19953:1;19942:9;19938:17;19931:47;19995:131;20121:4;19995:131;:::i;:::-;19987:139;;19714:419;;;:::o;20139:178::-;20279:30;20275:1;20267:6;20263:14;20256:54;20139:178;:::o;20323:366::-;20465:3;20486:67;20550:2;20545:3;20486:67;:::i;:::-;20479:74;;20562:93;20651:3;20562:93;:::i;:::-;20680:2;20675:3;20671:12;20664:19;;20323:366;;;:::o;20695:419::-;20861:4;20899:2;20888:9;20884:18;20876:26;;20948:9;20942:4;20938:20;20934:1;20923:9;20919:17;20912:47;20976:131;21102:4;20976:131;:::i;:::-;20968:139;;20695:419;;;:::o;21120:194::-;21160:4;21180:20;21198:1;21180:20;:::i;:::-;21175:25;;21214:20;21232:1;21214:20;:::i;:::-;21209:25;;21258:1;21255;21251:9;21243:17;;21282:1;21276:4;21273:11;21270:37;;;21287:18;;:::i;:::-;21270:37;21120:194;;;;:::o;21320:168::-;21460:20;21456:1;21448:6;21444:14;21437:44;21320:168;:::o;21494:366::-;21636:3;21657:67;21721:2;21716:3;21657:67;:::i;:::-;21650:74;;21733:93;21822:3;21733:93;:::i;:::-;21851:2;21846:3;21842:12;21835:19;;21494:366;;;:::o;21866:419::-;22032:4;22070:2;22059:9;22055:18;22047:26;;22119:9;22113:4;22109:20;22105:1;22094:9;22090:17;22083:47;22147:131;22273:4;22147:131;:::i;:::-;22139:139;;21866:419;;;:::o;22291:180::-;22339:77;22336:1;22329:88;22436:4;22433:1;22426:15;22460:4;22457:1;22450:15;22477:98;22528:6;22562:5;22556:12;22546:22;;22477:98;;;:::o;22581:168::-;22664:11;22698:6;22693:3;22686:19;22738:4;22733:3;22729:14;22714:29;;22581:168;;;;:::o;22755:373::-;22841:3;22869:38;22901:5;22869:38;:::i;:::-;22923:70;22986:6;22981:3;22923:70;:::i;:::-;22916:77;;23002:65;23060:6;23055:3;23048:4;23041:5;23037:16;23002:65;:::i;:::-;23092:29;23114:6;23092:29;:::i;:::-;23087:3;23083:39;23076:46;;22845:283;22755:373;;;;:::o;23134:640::-;23329:4;23367:3;23356:9;23352:19;23344:27;;23381:71;23449:1;23438:9;23434:17;23425:6;23381:71;:::i;:::-;23462:72;23530:2;23519:9;23515:18;23506:6;23462:72;:::i;:::-;23544;23612:2;23601:9;23597:18;23588:6;23544:72;:::i;:::-;23663:9;23657:4;23653:20;23648:2;23637:9;23633:18;23626:48;23691:76;23762:4;23753:6;23691:76;:::i;:::-;23683:84;;23134:640;;;;;;;:::o;23780:141::-;23836:5;23867:6;23861:13;23852:22;;23883:32;23909:5;23883:32;:::i;:::-;23780:141;;;;:::o;23927:349::-;23996:6;24045:2;24033:9;24024:7;24020:23;24016:32;24013:119;;;24051:79;;:::i;:::-;24013:119;24171:1;24196:63;24251:7;24242:6;24231:9;24227:22;24196:63;:::i;:::-;24186:73;;24142:127;23927:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1793800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_mint(address,uint256)": "infinite",
								"approve(address,uint256)": "31556",
								"balanceOf(address)": "2943",
								"getApproved(uint256)": "5182",
								"isApprovedForAll(address,address)": "infinite",
								"isContract(address)": "3327",
								"name()": "infinite",
								"ownerOf(uint256)": "2998",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "754",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3341",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "26292",
								"_baseURI()": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_isApprovedOrOwner(address,address,uint256)": "4648",
								"_safeTransfer(address,address,address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2146,
									"end": 2257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2219,
									"end": 2224,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2216,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2212,
									"end": 2224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2212,
									"end": 2224,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2250,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2240,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2234,
									"end": 2250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2257,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1716,
									"end": 1722,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1723,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 1799,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1792,
									"end": 1803,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1804,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1780,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1766,
									"end": 1805,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1735,
									"end": 1736,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1741,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1741,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1741,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1840,
									"end": 1846,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1831,
									"end": 1847,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1824,
									"end": 1851,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1672,
									"end": 1858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1958,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2036,
									"end": 2042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1994,
									"end": 2043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1978,
									"end": 2044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 2044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1969,
									"end": 2044,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2065,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2109,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2098,
									"end": 2103,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2094,
									"end": 2110,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2143,
									"end": 2146,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2134,
									"end": 2140,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2129,
									"end": 2132,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2141,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2122,
									"end": 2147,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2150,
									"end": 2229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2280,
									"end": 2283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2275,
									"end": 2278,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2240,
									"end": 2292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1959,
									"end": 2298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 2298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2425,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2432,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2411,
									"end": 2438,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2442,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2558,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2559,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2666,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2655,
									"end": 2661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2640,
									"end": 2646,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2636,
									"end": 2653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2577,
									"end": 2667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2568,
									"end": 2667,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2568,
									"end": 2667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2673,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2673,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2778,
									"end": 2784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2786,
									"end": 2792,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2835,
									"end": 2837,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2823,
									"end": 2832,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2814,
									"end": 2821,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2810,
									"end": 2833,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2806,
									"end": 2838,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2841,
									"end": 2920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2982,
									"end": 2983,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2971,
									"end": 2980,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2967,
									"end": 2984,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2961,
									"end": 2985,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3012,
									"end": 3030,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3001,
									"end": 3031,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3034,
									"end": 3113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3205,
									"end": 3212,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3196,
									"end": 3202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3185,
									"end": 3194,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3181,
									"end": 3203,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3139,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3213,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3213,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3283,
									"end": 3285,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3272,
									"end": 3281,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3268,
									"end": 3286,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3287,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3306,
									"end": 3312,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3333,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3336,
									"end": 3415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3507,
									"end": 3514,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3498,
									"end": 3504,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3487,
									"end": 3496,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3483,
									"end": 3505,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3441,
									"end": 3515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3431,
									"end": 3515,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3431,
									"end": 3515,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3233,
									"end": 3525,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 3532,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3590,
									"end": 3596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3624,
									"end": 3629,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3630,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3538,
									"end": 3637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3643,
									"end": 3823,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3643,
									"end": 3823,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3691,
									"end": 3768,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3688,
									"end": 3689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3681,
									"end": 3769,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3788,
									"end": 3792,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3778,
									"end": 3793,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3812,
									"end": 3816,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3809,
									"end": 3810,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3802,
									"end": 3817,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3910,
									"end": 3911,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3904,
									"end": 3908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3900,
									"end": 3912,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3951,
									"end": 3955,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3947,
									"end": 3959,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3978,
									"end": 3996,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4034,
									"end": 4038,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4026,
									"end": 4032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4022,
									"end": 4039,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4012,
									"end": 4039,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4012,
									"end": 4039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4096,
									"end": 4098,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4088,
									"end": 4094,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4085,
									"end": 4099,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4100,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4115,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3880,
									"end": 4149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 4149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4227,
									"end": 4230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4219,
									"end": 4230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4219,
									"end": 4230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4250,
									"end": 4253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4247,
									"end": 4248,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4240,
									"end": 4254,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4284,
									"end": 4288,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4281,
									"end": 4282,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4271,
									"end": 4289,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4263,
									"end": 4289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4263,
									"end": 4289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4339,
									"end": 4345,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4388,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4381,
									"end": 4383,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4374,
									"end": 4379,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4366,
									"end": 4389,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4356,
									"end": 4389,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4356,
									"end": 4389,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4302,
									"end": 4395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4445,
									"end": 4453,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4495,
									"end": 4500,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4489,
									"end": 4493,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4485,
									"end": 4501,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4464,
									"end": 4501,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4464,
									"end": 4501,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4583,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4633,
									"end": 4634,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4621,
									"end": 4631,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4635,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4686,
									"end": 4752,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4675,
									"end": 4684,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4656,
									"end": 4753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4804,
									"end": 4812,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4793,
									"end": 4802,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4774,
									"end": 4813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4762,
									"end": 4813,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4762,
									"end": 4813,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4846,
									"end": 4850,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4842,
									"end": 4851,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4835,
									"end": 4840,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4831,
									"end": 4852,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4822,
									"end": 4852,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4822,
									"end": 4852,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4895,
									"end": 4899,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4885,
									"end": 4893,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4881,
									"end": 4900,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4874,
									"end": 4879,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4871,
									"end": 4901,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4901,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4901,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4590,
									"end": 4907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4590,
									"end": 4907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4957,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 4984,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 4984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4913,
									"end": 4990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5024,
									"end": 5027,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5045,
									"end": 5050,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5038,
									"end": 5050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5038,
									"end": 5050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5112,
									"end": 5121,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5190,
									"end": 5195,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5172,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5163,
									"end": 5197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5145,
									"end": 5198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5132,
									"end": 5198,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5132,
									"end": 5198,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5253,
									"end": 5256,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5274,
									"end": 5279,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5267,
									"end": 5279,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5267,
									"end": 5279,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5432,
									"end": 5439,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5401,
									"end": 5440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5535,
									"end": 5551,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5511,
									"end": 5552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5509,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5496,
									"end": 5500,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5490,
									"end": 5501,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 5462,
									"end": 5553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5456,
									"end": 5460,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5449,
									"end": 5554,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5367,
									"end": 5560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5291,
									"end": 5560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5566,
									"end": 5639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5722,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5821,
									"end": 5827,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5813,
									"end": 5819,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5807,
									"end": 5811,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5763,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5698,
									"end": 5834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5645,
									"end": 5834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5917,
									"end": 5920,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5907,
									"end": 5921,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6008,
									"end": 6009,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6006,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5971,
									"end": 6010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5944,
									"end": 5945,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5937,
									"end": 5942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5933,
									"end": 5946,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5924,
									"end": 5946,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5924,
									"end": 5946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5840,
									"end": 6026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6133,
									"end": 6135,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6128,
									"end": 6131,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6125,
									"end": 6136,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6199,
									"end": 6204,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 6167,
									"end": 6205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6269,
									"end": 6279,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6251,
									"end": 6280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6241,
									"end": 6249,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6237,
									"end": 6281,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6434,
									"end": 6436,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6422,
									"end": 6432,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6419,
									"end": 6437,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6455,
									"end": 6463,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6463,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6440,
									"end": 6463,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6552,
									"end": 6555,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6534,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6524,
									"end": 6532,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6520,
									"end": 6557,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6507,
									"end": 6518,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6478,
									"end": 6558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6137,
									"end": 6568,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6137,
									"end": 6568,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6635,
									"end": 6643,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6685,
									"end": 6690,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6679,
									"end": 6683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6675,
									"end": 6691,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6748,
									"end": 6754,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6829,
									"end": 6830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6825,
									"end": 6831,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6817,
									"end": 6822,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6814,
									"end": 6815,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6810,
									"end": 6823,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6781,
									"end": 6832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6777,
									"end": 6833,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6862,
									"end": 6866,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6856,
									"end": 6860,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6852,
									"end": 6867,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6842,
									"end": 6867,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6842,
									"end": 6867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6704,
									"end": 6873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 6958,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7125,
									"end": 7128,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7119,
									"end": 7123,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7100,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7092,
									"end": 7129,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7092,
									"end": 7129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7162,
									"end": 7165,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7159,
									"end": 7160,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7155,
									"end": 7166,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7149,
									"end": 7153,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7146,
									"end": 7167,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7138,
									"end": 7167,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7138,
									"end": 7167,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 7173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7328,
									"end": 7331,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 7295,
									"end": 7332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7397,
									"end": 7415,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7389,
									"end": 7395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7386,
									"end": 7416,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 7419,
									"end": 7437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7495,
									"end": 7499,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7489,
									"end": 7500,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 7463,
									"end": 7501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7600,
									"end": 7606,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7594,
									"end": 7598,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 7548,
									"end": 7615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7642,
									"end": 7643,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7666,
									"end": 7670,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7653,
									"end": 7670,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7653,
									"end": 7670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7698,
									"end": 7700,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7690,
									"end": 7696,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7687,
									"end": 7701,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 7716,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8372,
									"end": 8373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8389,
									"end": 8395,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8438,
									"end": 8447,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8429,
									"end": 8448,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8423,
									"end": 8449,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8414,
									"end": 8449,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8414,
									"end": 8449,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8542,
									"end": 8547,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 8489,
									"end": 8556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8483,
									"end": 8487,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8476,
									"end": 8557,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8345,
									"end": 8567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7762,
									"end": 7766,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7758,
									"end": 7767,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7750,
									"end": 7756,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7746,
									"end": 7768,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7828,
									"end": 7832,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7796,
									"end": 7833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7855,
									"end": 7856,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7883,
									"end": 7890,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7880,
									"end": 7881,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7877,
									"end": 7891,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7962,
									"end": 7971,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7957,
									"end": 7960,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7953,
									"end": 7972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7947,
									"end": 7973,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7939,
									"end": 7945,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7932,
									"end": 7974,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8013,
									"end": 8014,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8005,
									"end": 8011,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8001,
									"end": 8015,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7991,
									"end": 8015,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7991,
									"end": 8015,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8060,
									"end": 8062,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8049,
									"end": 8058,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8045,
									"end": 8063,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8032,
									"end": 8063,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8032,
									"end": 8063,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7906,
									"end": 7910,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7899,
									"end": 7911,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7894,
									"end": 7911,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7894,
									"end": 7911,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8105,
									"end": 8111,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8093,
									"end": 8112,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8163,
									"end": 8172,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8158,
									"end": 8161,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8154,
									"end": 8173,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8148,
									"end": 8174,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8248,
									"end": 8252,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8240,
									"end": 8246,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8236,
									"end": 8253,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8225,
									"end": 8234,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 8206,
									"end": 8254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8198,
									"end": 8204,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8191,
									"end": 8255,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8113,
									"end": 8269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8315,
									"end": 8316,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8303,
									"end": 8309,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8299,
									"end": 8313,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8295,
									"end": 8317,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8289,
									"end": 8293,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8282,
									"end": 8318,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7178,
									"end": 8573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 10527,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038cdaaf94404bafd7ce5e5a142b54553458ce17ab56623e7ca0d623b6eb4586364736f6c63430008190033",
									".code": [
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "4E6EC247"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "A22CB465"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "B88D4FDE"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "C87B56DD"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "4E6EC247"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "16279055"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "81812FC"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 10527,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2307,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2307,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2307,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1552,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1552,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4123,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4123,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 4123,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4793,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2630,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2630,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2630,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6206,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6206,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7800,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7800,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 8414,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 8414,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3165,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3165,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3165,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2908,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2908,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2908,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1604,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3814,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3814,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 7388,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7388,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 9910,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 9910,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 9910,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3492,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3492,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3492,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2497,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2457,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4247,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4247,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4247,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4217,
											"end": 4247,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4247,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4209,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4303,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4288,
											"end": 4312,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4887,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4896,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4937,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4950,
											"end": 4987,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4927,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4906,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4906,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5062,
											"end": 5067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5073,
											"end": 5080,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5053,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5081,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5053,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4854,
											"end": 5088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2807,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2808,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2791,
											"end": 2808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 6350,
											"end": 6357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6342,
											"end": 6358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6358,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 6342,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6415,
											"end": 6425,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6389,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6435,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6389,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6368,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6368,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 6503,
											"end": 6508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6518,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6520,
											"end": 6527,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6493,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6528,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 6493,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6316,
											"end": 6535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7941,
											"end": 7945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7958,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7924,
											"end": 7963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 7924,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8481,
											"end": 8483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8473,
											"end": 8522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 8473,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8547,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8556,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8532,
											"end": 8595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8532,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8618,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8606,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8641,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8696,
											"end": 8703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8688,
											"end": 8689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8704,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3266,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3259,
											"end": 3275,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3285,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3285,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 2978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2990,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2990,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1604,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1604,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3983,
											"end": 3993,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4005,
											"end": 4013,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3968,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4014,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 4021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7562,
											"end": 7569,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7554,
											"end": 7570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7570,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7554,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7620,
											"end": 7625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7637,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7646,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7601,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7647,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7601,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7580,
											"end": 7695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7580,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7719,
											"end": 7724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7732,
											"end": 7734,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7745,
											"end": 7750,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7705,
											"end": 7751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7751,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7705,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 9996,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10044,
											"end": 10045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10046,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10016,
											"end": 10046,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10023,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10016,
											"end": 10032,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10046,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10016,
											"end": 10046,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10016,
											"end": 10046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 10008,
											"end": 10066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 10008,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10101,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 10101,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10111,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10101,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10152,
											"end": 10153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10149,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10153,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10180,
											"end": 10187,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 10189,
											"end": 10196,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10189,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 10189,
											"end": 10207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 10163,
											"end": 10208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 10128,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3676,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3642,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4634,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4448,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5335,
											"end": 5351,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5335,
											"end": 5351,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5351,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5402,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5402,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5390,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5402,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5402,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5402,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5335,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5335,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5832,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5832,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5832,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5832,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5811,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5811,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5856,
											"end": 5913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5856,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5959,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5924,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 5991,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5971,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6019,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6001,
											"end": 6010,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6013,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6001,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6092,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6093,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5681,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7156,
											"end": 7161,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7169,
											"end": 7171,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7146,
											"end": 7181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7181,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7146,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 7199,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7247,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7199,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 7191,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 7191,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10525,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 10433,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10497,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10433,
											"end": 10525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 4,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 9508,
											"end": 9510,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9497,
											"end": 9511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 9493,
											"end": 9816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9722,
											"end": 9763,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 9722,
											"end": 9763,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9722,
											"end": 9763,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9586,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9550,
											"end": 9586,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9586,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 9608,
											"end": 9618,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9700,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 9550,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 9550,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 9550,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9527,
											"end": 9763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9527,
											"end": 9763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9527,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9527,
											"end": 9763,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9816,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 9493,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9801,
											"end": 9805,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9794,
											"end": 9805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9794,
											"end": 9805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1911,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 1987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 1991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2140,
											"end": 2147,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2128,
											"end": 2133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2276,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2331,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2402,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2467,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2411,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2501,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2531,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2252,
											"end": 2537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2753,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2771,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3018,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3043,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3173,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3332,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3477,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3672,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3623,
											"end": 3628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3673,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3751,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3740,
											"end": 3775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3740,
											"end": 3775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3892,
											"end": 3897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3874,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4055,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4212,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4205,
											"end": 4210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4202,
											"end": 4237,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4313,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4367,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4480,
											"end": 4486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4523,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4543,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4733,
											"end": 4740,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4722,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4709,
											"end": 4731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4688,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4861,
											"end": 4868,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4816,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 4957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4979,
											"end": 4986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5003,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5087,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4968,
											"end": 5087,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5006,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5006,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5085,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5006,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 5087,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4968,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5196,
											"end": 5203,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5185,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5151,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5371,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5367,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5456,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5337,
											"end": 5456,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5375,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5375,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5456,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5337,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5565,
											"end": 5572,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5520,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5520,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5573,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5693,
											"end": 5700,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5673,
											"end": 5682,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5648,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5638,
											"end": 5701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5638,
											"end": 5701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5801,
											"end": 5810,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5776,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5829,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5721,
											"end": 5839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5970,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5852,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5957,
											"end": 5962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5939,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6120,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6274,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6296,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6310,
											"end": 6311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6447,
											"end": 6452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6423,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6584,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6585,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6590,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6593,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6759,
											"end": 6781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6738,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6899,
											"end": 6905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6866,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 6916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 6916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7050,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7179,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7062,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7161,
											"end": 7173,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7185,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7310,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7230,
											"end": 7231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7320,
											"end": 7335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7359,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 7476,
											"end": 7480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7454,
											"end": 7481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7592,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7595,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7414,
											"end": 7652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7371,
											"end": 7652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7719,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7776,
											"end": 7780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7748,
											"end": 7781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7966,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 8004,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8092,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 8100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8227,
											"end": 8243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8378,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 8362,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8436,
											"end": 8457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8529,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8530,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8533,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8670,
											"end": 8676,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8665,
											"end": 8668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8660,
											"end": 8663,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8623,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8783,
											"end": 8810,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8814,
											"end": 8893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8918,
											"end": 8938,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 9030,
											"end": 9033,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9022,
											"end": 9028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8956,
											"end": 9034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 9034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 9034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8763,
											"end": 9040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 9040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9193,
											"end": 9200,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9212,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9218,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 9221,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9411,
											"end": 9418,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9366,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9470,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9539,
											"end": 9546,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9494,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9598,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9667,
											"end": 9674,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9656,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9643,
											"end": 9665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 9622,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9675,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9754,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9741,
											"end": 9750,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9756,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9802,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9805,
											"end": 9884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9964,
											"end": 9971,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9953,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 9962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 9910,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9046,
											"end": 9989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10120,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10108,
											"end": 10117,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10099,
											"end": 10106,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 10126,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 10316,
											"end": 10323,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10271,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10324,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10217,
											"end": 10334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10375,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10444,
											"end": 10451,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10433,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10399,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10475,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10600,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10520,
											"end": 10521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10610,
											"end": 10625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10641,
											"end": 10642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10743,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10744,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10722,
											"end": 10744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10722,
											"end": 10744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10783,
											"end": 10787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10858,
											"end": 10864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10854,
											"end": 10871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10844,
											"end": 10871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10844,
											"end": 10871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 10931,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10894,
											"end": 10932,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10947,
											"end": 10965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10987,
											"end": 11156,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10987,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11127,
											"end": 11148,
											"name": "PUSH",
											"source": 9,
											"value": "746F6B656E20646F65736E277420657869737400000000000000000000000000"
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11115,
											"end": 11121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11104,
											"end": 11149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10987,
											"end": 11156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10987,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 11384,
											"end": 11387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11325,
											"end": 11392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 11325,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11318,
											"end": 11392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11318,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 11490,
											"end": 11493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 11401,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 11401,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11521,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11514,
											"end": 11517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11510,
											"end": 11522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11738,
											"end": 11740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11715,
											"end": 11741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11715,
											"end": 11741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11787,
											"end": 11796,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11777,
											"end": 11797,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11773,
											"end": 11774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11771,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11758,
											"end": 11775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11941,
											"end": 11945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 11815,
											"end": 11946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11815,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 12139,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 11959,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12099,
											"end": 12131,
											"name": "PUSH",
											"source": 9,
											"value": "6E6F74206F776E6572206E6F7220617070726F76656420666F7220616C6C0000"
										},
										{
											"begin": 12095,
											"end": 12096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12083,
											"end": 12097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12076,
											"end": 12132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 12139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 12139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12145,
											"end": 12511,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12145,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12290,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12308,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 12308,
											"end": 12375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12308,
											"end": 12375,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12308,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12384,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 12473,
											"end": 12476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12384,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 12384,
											"end": 12477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12384,
											"end": 12477,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 12384,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12504,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12497,
											"end": 12500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12493,
											"end": 12505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12145,
											"end": 12511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12145,
											"end": 12511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12145,
											"end": 12511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12145,
											"end": 12511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12936,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 12517,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12723,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12710,
											"end": 12719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12706,
											"end": 12724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12724,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 12779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12780,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12734,
											"end": 12781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12924,
											"end": 12928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12798,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12929,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12798,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12790,
											"end": 12929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12790,
											"end": 12929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12936,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13114,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 12942,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13106,
											"name": "PUSH",
											"source": 9,
											"value": "6E6F74206F776E6572206E6F7220617070726F76656400000000000000000000"
										},
										{
											"begin": 13078,
											"end": 13079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13066,
											"end": 13080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13059,
											"end": 13107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13486,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13120,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13262,
											"end": 13265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 13347,
											"end": 13349,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 13342,
											"end": 13345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13283,
											"end": 13350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13350,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 13283,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13276,
											"end": 13350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13276,
											"end": 13350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 13448,
											"end": 13451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 13359,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13452,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 13359,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13468,
											"end": 13480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13911,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 13492,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 13662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13685,
											"end": 13694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13681,
											"end": 13699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13735,
											"end": 13755,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13729,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13709,
											"end": 13756,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 13899,
											"end": 13903,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13773,
											"end": 13904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13904,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 13773,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 13904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 13904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13917,
											"end": 14087,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 13917,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "PUSH",
											"source": 9,
											"value": "6D696E7420746F207A65726F2061646472657373000000000000000000000000"
										},
										{
											"begin": 14053,
											"end": 14054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14041,
											"end": 14055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14034,
											"end": 14080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13917,
											"end": 14087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13917,
											"end": 14087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14459,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14093,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14256,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 14320,
											"end": 14322,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 14315,
											"end": 14318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 14256,
											"end": 14323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14323,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 14256,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14421,
											"end": 14424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 14332,
											"end": 14425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14425,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14332,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14450,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14434,
											"end": 14453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14434,
											"end": 14453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14884,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 14465,
											"end": 14884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14631,
											"end": 14635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14658,
											"end": 14667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14654,
											"end": 14672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 14672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 14672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 14727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14712,
											"end": 14716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14708,
											"end": 14728,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14704,
											"end": 14705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14693,
											"end": 14702,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14689,
											"end": 14706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14746,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14872,
											"end": 14876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14746,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14746,
											"end": 14877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14746,
											"end": 14877,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14746,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 15060,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 14890,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "PUSH",
											"source": 9,
											"value": "746F6B656E20616C7265616479206D696E746564000000000000000000000000"
										},
										{
											"begin": 15026,
											"end": 15027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15018,
											"end": 15024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15014,
											"end": 15028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15007,
											"end": 15053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 15060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 15060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15432,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15066,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15229,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 15293,
											"end": 15295,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 15288,
											"end": 15291,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15229,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 15229,
											"end": 15296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15229,
											"end": 15296,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 15229,
											"end": 15296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15222,
											"end": 15296,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15222,
											"end": 15296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15305,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 15394,
											"end": 15397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15305,
											"end": 15398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 15305,
											"end": 15398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15305,
											"end": 15398,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 15305,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15423,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15418,
											"end": 15421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15414,
											"end": 15426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15407,
											"end": 15426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15407,
											"end": 15426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15857,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 15438,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15642,
											"end": 15644,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15631,
											"end": 15640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15627,
											"end": 15645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15691,
											"end": 15700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15681,
											"end": 15701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15677,
											"end": 15678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15662,
											"end": 15679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15655,
											"end": 15702,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15719,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 15845,
											"end": 15849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15719,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15719,
											"end": 15850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15719,
											"end": 15850,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 15719,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15711,
											"end": 15850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15711,
											"end": 15850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15857,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15438,
											"end": 15857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15863,
											"end": 16043,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15863,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15911,
											"end": 15988,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15908,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15901,
											"end": 15989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16008,
											"end": 16012,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 16005,
											"end": 16006,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15998,
											"end": 16013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16032,
											"end": 16036,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16029,
											"end": 16030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16037,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16089,
											"end": 16092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16108,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16126,
											"end": 16127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16108,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16108,
											"end": 16128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16108,
											"end": 16128,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16108,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 16160,
											"end": 16161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16142,
											"end": 16162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16162,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 16142,
											"end": 16162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16137,
											"end": 16162,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16137,
											"end": 16162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16185,
											"end": 16186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16187,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16171,
											"end": 16187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16171,
											"end": 16187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16206,
											"end": 16209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16203,
											"end": 16204,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16210,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16233,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 16197,
											"end": 16233,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 16213,
											"end": 16231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16233,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 16197,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16049,
											"end": 16240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16246,
											"end": 16416,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 16246,
											"end": 16416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16386,
											"end": 16408,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572203D207A65726F2061646472657373000000000000000000000000"
										},
										{
											"begin": 16382,
											"end": 16383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16370,
											"end": 16384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16363,
											"end": 16409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16246,
											"end": 16416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16246,
											"end": 16416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16422,
											"end": 16788,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 16422,
											"end": 16788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16564,
											"end": 16567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16585,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 16649,
											"end": 16651,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 16644,
											"end": 16647,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16585,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 16585,
											"end": 16652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16585,
											"end": 16652,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 16585,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16578,
											"end": 16652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16578,
											"end": 16652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16661,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16750,
											"end": 16753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16661,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 16661,
											"end": 16754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16661,
											"end": 16754,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16661,
											"end": 16754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16779,
											"end": 16781,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16422,
											"end": 16788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16422,
											"end": 16788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16422,
											"end": 16788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16422,
											"end": 16788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16794,
											"end": 17213,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 16794,
											"end": 17213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16960,
											"end": 16964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16998,
											"end": 17000,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16987,
											"end": 16996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17047,
											"end": 17056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17037,
											"end": 17057,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17022,
											"end": 17031,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17018,
											"end": 17035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17011,
											"end": 17058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 17075,
											"end": 17206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17206,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17075,
											"end": 17206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17067,
											"end": 17206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17067,
											"end": 17206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16794,
											"end": 17213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16794,
											"end": 17213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16794,
											"end": 17213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16794,
											"end": 17213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17219,
											"end": 17384,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 17219,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17359,
											"end": 17376,
											"name": "PUSH",
											"source": 9,
											"value": "546F6B656E204E6F742045786973740000000000000000000000000000000000"
										},
										{
											"begin": 17355,
											"end": 17356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17343,
											"end": 17357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17336,
											"end": 17377,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17219,
											"end": 17384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17219,
											"end": 17384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17756,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 17390,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17532,
											"end": 17535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17553,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 17617,
											"end": 17619,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 17612,
											"end": 17615,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17553,
											"end": 17620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 17553,
											"end": 17620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17553,
											"end": 17620,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 17553,
											"end": 17620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17629,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 17718,
											"end": 17721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17629,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 17629,
											"end": 17722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17629,
											"end": 17722,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 17629,
											"end": 17722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17747,
											"end": 17749,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17742,
											"end": 17745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17738,
											"end": 17750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17731,
											"end": 17750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17731,
											"end": 17750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 18181,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 17762,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17928,
											"end": 17932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17966,
											"end": 17968,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17955,
											"end": 17964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17951,
											"end": 17969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18015,
											"end": 18024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18009,
											"end": 18013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18005,
											"end": 18025,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17990,
											"end": 17999,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17986,
											"end": 18003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17979,
											"end": 18026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 18169,
											"end": 18173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 18043,
											"end": 18174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18043,
											"end": 18174,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 18043,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18035,
											"end": 18174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18035,
											"end": 18174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 18181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 18181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 18181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18326,
											"end": 18329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18311,
											"end": 18329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18447,
											"end": 18450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18475,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 18508,
											"end": 18513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18475,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 18475,
											"end": 18514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18475,
											"end": 18514,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 18475,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18530,
											"end": 18619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18607,
											"end": 18610,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18530,
											"end": 18619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 18530,
											"end": 18619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18530,
											"end": 18619,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18530,
											"end": 18619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18619,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18628,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18686,
											"end": 18692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18681,
											"end": 18684,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18674,
											"end": 18678,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18667,
											"end": 18672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18663,
											"end": 18679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18628,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 18628,
											"end": 18693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18628,
											"end": 18693,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18628,
											"end": 18693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18718,
											"end": 18724,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18713,
											"end": 18716,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18702,
											"end": 18725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18702,
											"end": 18725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18341,
											"end": 18731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18917,
											"end": 18920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18939,
											"end": 19034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 19030,
											"end": 19033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19021,
											"end": 19027,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18939,
											"end": 19034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 18939,
											"end": 19034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18939,
											"end": 19034,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 18939,
											"end": 19034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18932,
											"end": 19034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18932,
											"end": 19034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 19142,
											"end": 19145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19133,
											"end": 19139,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 19051,
											"end": 19146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19146,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 19051,
											"end": 19146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19044,
											"end": 19146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19044,
											"end": 19146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19163,
											"end": 19166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19156,
											"end": 19166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19156,
											"end": 19166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 19172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19178,
											"end": 19337,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 19178,
											"end": 19337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19318,
											"end": 19329,
											"name": "PUSH",
											"source": 9,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19314,
											"end": 19315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19306,
											"end": 19312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19302,
											"end": 19316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19295,
											"end": 19330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19178,
											"end": 19337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19178,
											"end": 19337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19343,
											"end": 19708,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 19343,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19485,
											"end": 19488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19506,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 19570,
											"end": 19571,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 19565,
											"end": 19568,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19506,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 19506,
											"end": 19572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19506,
											"end": 19572,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 19506,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19499,
											"end": 19572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19499,
											"end": 19572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19581,
											"end": 19674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19670,
											"end": 19673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19581,
											"end": 19674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 19581,
											"end": 19674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19581,
											"end": 19674,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19581,
											"end": 19674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19699,
											"end": 19701,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19694,
											"end": 19697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19690,
											"end": 19702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19343,
											"end": 19708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19343,
											"end": 19708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19343,
											"end": 19708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19343,
											"end": 19708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19714,
											"end": 20133,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 19714,
											"end": 20133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19880,
											"end": 19884,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19918,
											"end": 19920,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19907,
											"end": 19916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19903,
											"end": 19921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19967,
											"end": 19976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19961,
											"end": 19965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19953,
											"end": 19954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 19951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19938,
											"end": 19955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19931,
											"end": 19978,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 20121,
											"end": 20125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 19995,
											"end": 20126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20126,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19995,
											"end": 20126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19987,
											"end": 20126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19714,
											"end": 20133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19714,
											"end": 20133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19714,
											"end": 20133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19714,
											"end": 20133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20317,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 20139,
											"end": 20317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20279,
											"end": 20309,
											"name": "PUSH",
											"source": 9,
											"value": "7472616E7366657220746F20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 20275,
											"end": 20276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20263,
											"end": 20277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20256,
											"end": 20310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20317,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20465,
											"end": 20468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 20550,
											"end": 20552,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 20545,
											"end": 20548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 20486,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 20486,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20479,
											"end": 20553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20479,
											"end": 20553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20651,
											"end": 20654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 20562,
											"end": 20655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20562,
											"end": 20655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20680,
											"end": 20682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20675,
											"end": 20678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 20683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20664,
											"end": 20683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20664,
											"end": 20683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20323,
											"end": 20689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20323,
											"end": 20689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20861,
											"end": 20865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20899,
											"end": 20901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20888,
											"end": 20897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20884,
											"end": 20902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20876,
											"end": 20902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20876,
											"end": 20902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20948,
											"end": 20957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20942,
											"end": 20946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20934,
											"end": 20935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20919,
											"end": 20936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20912,
											"end": 20959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21102,
											"end": 21106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20976,
											"end": 21107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 20976,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20968,
											"end": 21107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20968,
											"end": 21107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20695,
											"end": 21114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20695,
											"end": 21114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21160,
											"end": 21164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21180,
											"end": 21200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21198,
											"end": 21199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21180,
											"end": 21200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 21180,
											"end": 21200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21180,
											"end": 21200,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21180,
											"end": 21200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21175,
											"end": 21200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21175,
											"end": 21200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 21232,
											"end": 21233,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 21214,
											"end": 21234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 21214,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21209,
											"end": 21234,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21209,
											"end": 21234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21258,
											"end": 21259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21255,
											"end": 21256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21251,
											"end": 21260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21243,
											"end": 21260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21243,
											"end": 21260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21282,
											"end": 21283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21276,
											"end": 21280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21273,
											"end": 21284,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 21270,
											"end": 21307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 21270,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21270,
											"end": 21307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21287,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 21287,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 21287,
											"end": 21305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21287,
											"end": 21305,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 21287,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21270,
											"end": 21307,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21270,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21320,
											"end": 21488,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 21320,
											"end": 21488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21460,
											"end": 21480,
											"name": "PUSH",
											"source": 9,
											"value": "6E6F742045524337323152656365697665720000000000000000000000000000"
										},
										{
											"begin": 21456,
											"end": 21457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21448,
											"end": 21454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21437,
											"end": 21481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21320,
											"end": 21488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21320,
											"end": 21488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21860,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 21494,
											"end": 21860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21636,
											"end": 21639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21657,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 21721,
											"end": 21723,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 21716,
											"end": 21719,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21657,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 21657,
											"end": 21724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21657,
											"end": 21724,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 21657,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21650,
											"end": 21724,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21650,
											"end": 21724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21733,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 21822,
											"end": 21825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21733,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 21733,
											"end": 21826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21733,
											"end": 21826,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 21733,
											"end": 21826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21851,
											"end": 21853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21846,
											"end": 21849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21842,
											"end": 21854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21835,
											"end": 21854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21835,
											"end": 21854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21494,
											"end": 21860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 22285,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 21866,
											"end": 22285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22032,
											"end": 22036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22070,
											"end": 22072,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22059,
											"end": 22068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22047,
											"end": 22073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22047,
											"end": 22073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22119,
											"end": 22128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22113,
											"end": 22117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22109,
											"end": 22129,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22105,
											"end": 22106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22094,
											"end": 22103,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22090,
											"end": 22107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22083,
											"end": 22130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22147,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22273,
											"end": 22277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22147,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 22147,
											"end": 22278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22147,
											"end": 22278,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22147,
											"end": 22278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22139,
											"end": 22278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22139,
											"end": 22278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 22285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 22285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 22285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 22285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22291,
											"end": 22471,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 22291,
											"end": 22471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22339,
											"end": 22416,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22336,
											"end": 22337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22329,
											"end": 22417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22436,
											"end": 22440,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 22433,
											"end": 22434,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22426,
											"end": 22441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22460,
											"end": 22464,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 22457,
											"end": 22458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22450,
											"end": 22465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22477,
											"end": 22575,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 22477,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22528,
											"end": 22534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22562,
											"end": 22567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22556,
											"end": 22568,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22477,
											"end": 22575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22477,
											"end": 22575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22477,
											"end": 22575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22477,
											"end": 22575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22664,
											"end": 22675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22693,
											"end": 22696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22686,
											"end": 22705,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22738,
											"end": 22742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22733,
											"end": 22736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22729,
											"end": 22743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22714,
											"end": 22743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22714,
											"end": 22743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22581,
											"end": 22749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22841,
											"end": 22844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22869,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 22901,
											"end": 22906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22869,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 22869,
											"end": 22907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22869,
											"end": 22907,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 22869,
											"end": 22907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22923,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 22986,
											"end": 22992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22981,
											"end": 22984,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22923,
											"end": 22993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22923,
											"end": 22993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22923,
											"end": 22993,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 22923,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22916,
											"end": 22993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22916,
											"end": 22993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23002,
											"end": 23067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 23060,
											"end": 23066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23055,
											"end": 23058,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 23048,
											"end": 23052,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23041,
											"end": 23046,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 23037,
											"end": 23053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23002,
											"end": 23067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 23002,
											"end": 23067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23002,
											"end": 23067,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 23002,
											"end": 23067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23092,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23114,
											"end": 23120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23092,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 23092,
											"end": 23121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23092,
											"end": 23121,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23092,
											"end": 23121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23087,
											"end": 23090,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23083,
											"end": 23122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23076,
											"end": 23122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23076,
											"end": 23122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22845,
											"end": 23128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22755,
											"end": 23128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23329,
											"end": 23333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23367,
											"end": 23370,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 23356,
											"end": 23365,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23352,
											"end": 23371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23344,
											"end": 23371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23344,
											"end": 23371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23381,
											"end": 23452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 23449,
											"end": 23450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23438,
											"end": 23447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23434,
											"end": 23451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23425,
											"end": 23431,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 23381,
											"end": 23452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 23381,
											"end": 23452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23381,
											"end": 23452,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 23381,
											"end": 23452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23462,
											"end": 23534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23530,
											"end": 23532,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23519,
											"end": 23528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23515,
											"end": 23533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23506,
											"end": 23512,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 23462,
											"end": 23534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 23462,
											"end": 23534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23462,
											"end": 23534,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23462,
											"end": 23534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23544,
											"end": 23616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23612,
											"end": 23614,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23597,
											"end": 23615,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23588,
											"end": 23594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 23544,
											"end": 23616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 23544,
											"end": 23616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23544,
											"end": 23616,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23544,
											"end": 23616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23663,
											"end": 23672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23657,
											"end": 23661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23653,
											"end": 23673,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23648,
											"end": 23650,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 23637,
											"end": 23646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23633,
											"end": 23651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23626,
											"end": 23674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 23762,
											"end": 23766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23753,
											"end": 23759,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 23691,
											"end": 23767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23767,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 23691,
											"end": 23767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23683,
											"end": 23767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23683,
											"end": 23767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23134,
											"end": 23774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 23841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23867,
											"end": 23873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23861,
											"end": 23874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23852,
											"end": 23874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23852,
											"end": 23874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23883,
											"end": 23915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 23909,
											"end": 23914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23883,
											"end": 23915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 23883,
											"end": 23915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23883,
											"end": 23915,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 23883,
											"end": 23915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23780,
											"end": 23921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23996,
											"end": 24002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24045,
											"end": 24047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24033,
											"end": 24042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24024,
											"end": 24031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 24020,
											"end": 24043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24016,
											"end": 24048,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 24013,
											"end": 24132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24013,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 24013,
											"end": 24132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24051,
											"end": 24130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 24051,
											"end": 24130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 24051,
											"end": 24130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24051,
											"end": 24130,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 24051,
											"end": 24130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24013,
											"end": 24132,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 24013,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24171,
											"end": 24172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24196,
											"end": 24259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 24251,
											"end": 24258,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 24242,
											"end": 24248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24231,
											"end": 24240,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24227,
											"end": 24249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24196,
											"end": 24259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 24196,
											"end": 24259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24196,
											"end": 24259,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 24196,
											"end": 24259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24186,
											"end": 24259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24186,
											"end": 24259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24142,
											"end": 24269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23927,
											"end": 24276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/34_ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_mint(address,uint256)": "4e6ec247",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isContract(address)": "16279055",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"stateVariables\":{\"name\":{\"details\":\"Returns the token collection name.\"},\"symbol\":{\"details\":\"Returns the token collection symbol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_mint(address,uint256)\":{\"notice\":\"\\u94f8\\u9020\\u51fd\\u6570\\u3002\\u901a\\u8fc7\\u8c03\\u6574_balances\\u548c_owners\\u53d8\\u91cf\\u6765\\u94f8\\u9020tokenId\\u5e76\\u8f6c\\u8d26\\u7ed9 to\\uff0c\\u540c\\u65f6\\u91ca\\u653eTransfer\\u4e8b\\u4ef6\\u3002\\u94f8\\u9020\\u51fd\\u6570\\u3002\\u901a\\u8fc7\\u8c03\\u6574_balances\\u548c_owners\\u53d8\\u91cf\\u6765\\u94f8\\u9020tokenId\\u5e76\\u8f6c\\u8d26\\u7ed9 to\\uff0c\\u540c\\u65f6\\u91ca\\u653eTransfer\\u4e8b\\u4ef6\\u3002 \\u8fd9\\u4e2amint\\u51fd\\u6570\\u6240\\u6709\\u4eba\\u90fd\\u80fd\\u8c03\\u7528\\uff0c\\u5b9e\\u9645\\u4f7f\\u7528\\u9700\\u8981\\u5f00\\u53d1\\u4eba\\u5458\\u91cd\\u5199\\uff0c\\u52a0\\u4e0a\\u4e00\\u4e9b\\u6761\\u4ef6\\u3002 \\u6761\\u4ef6: 1. tokenId\\u5c1a\\u4e0d\\u5b58\\u5728\\u3002 2. to\\u4e0d\\u662f0\\u5730\\u5740.\"},\"constructor\":{\"notice\":\"\\u6784\\u9020\\u51fd\\u6570\\uff0c\\u521d\\u59cb\\u5316`name` \\u548c`symbol` .\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"\\u5b9e\\u73b0IERC721\\u7684safeTransferFrom\\uff0c\\u5b89\\u5168\\u8f6c\\u8d26\\uff0c\\u8c03\\u7528\\u4e86_safeTransfer\\u51fd\\u6570\\u3002\"},\"tokenURI(uint256)\":{\"notice\":\"\\u5b9e\\u73b0IERC721Metadata\\u7684tokenURI\\u51fd\\u6570\\uff0c\\u67e5\\u8be2metadata\\u3002\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/34_ERC721.sol\":\"ERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/34_ERC721.sol\":{\"keccak256\":\"0x82f6e2c170d140dd8d8261aebb12ad51541ff6fe2127259c8417a4c3f89cebc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e3b738f1b4a51a41849eccf5baf3935a7fe661ec2982258d238f0ddee5785\",\"dweb:/ipfs/QmNW6nE69DvYwcJsq7fhuYABSHBC31sm1uGSkSQSxzr45K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1861,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1864,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1868,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1872,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1876,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1882,
								"contract": "contracts/34_ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_mint(address,uint256)": {
								"notice": "铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。 这个mint函数所有人都能调用，实际使用需要开发人员重写，加上一些条件。 条件: 1. tokenId尚不存在。 2. to不是0地址."
							},
							"constructor": {
								"notice": "构造函数，初始化`name` 和`symbol` ."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "实现IERC721的safeTransferFrom，安全转账，调用了_safeTransfer函数。"
							},
							"tokenURI(uint256)": {
								"notice": "实现IERC721Metadata的tokenURI函数，查询metadata。"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							682
						],
						"IERC721": [
							116
						]
					},
					"id": 117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 117,
							"sourceUnit": 683,
							"src": "134:62:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 682,
										"src": "142:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC165",
										"nameLocations": [
											"287:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 682,
										"src": "287:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116,
								682
							],
							"name": "IERC721",
							"nameLocation": "276:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "400:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "409:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "431:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "451:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:0"
									},
									"src": "394:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 24,
									"name": "Approval",
									"nameLocation": "587:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "596:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "619:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "645:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:0"
									},
									"src": "581:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 33,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "819:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "842:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:0"
									},
									"src": "798:85:0"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "989:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1027:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:0"
									},
									"scope": 116,
									"src": "970:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:0"
									},
									"scope": 116,
									"src": "1186:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1860:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1874:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1903:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:0"
									},
									"scope": 116,
									"src": "1834:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2675:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2689:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:0"
									},
									"scope": 116,
									"src": "2649:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3506:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:0"
									},
									"scope": 116,
									"src": "3470:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4024:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:0"
									},
									"scope": 116,
									"src": "4007:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4415:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:0"
									},
									"scope": 116,
									"src": "4388:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4668:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:0"
									},
									"scope": 116,
									"src": "4607:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4861:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4876:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4917:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:0"
									},
									"scope": 116,
									"src": "4835:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 117,
							"src": "266:4659:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "108:4818:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "867:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "893:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "915:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "940:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "984:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 130,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:1"
									},
									"scope": 134,
									"src": "832:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 135,
							"src": "295:699:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							116
						],
						"IERC721Metadata": [
							162
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 117,
							"src": "153:39:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 116,
										"src": "161:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 140,
										"name": "IERC721",
										"nameLocations": [
											"357:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "357:7:2"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								116,
								682
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "473:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:2"
									},
									"scope": 162,
									"src": "434:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "600:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:2"
									},
									"scope": 162,
									"src": "559:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:2"
									},
									"scope": 162,
									"src": "716:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "328:463:2",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "127:665:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							415
						]
					},
					"id": 416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 415,
							"linearizedBaseContracts": [
								415
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 170,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 175,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 178,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$415",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$415",
																		"typeString": "library Address"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 191,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 200,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 196,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$415",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$415",
																					"typeString": "library Address"
																				}
																			],
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 194,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 193,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 199,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													203,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 218,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 202,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 210,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 204,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 206,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 211,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 216,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 215,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 415,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 229,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 228,
												"id": 234,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 415,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 250,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$415",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$415",
																		"typeString": "library Address"
																	}
																],
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 253,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 263,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 262,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 258,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$415",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$415",
																					"typeString": "library Address"
																				}
																			],
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 255,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 261,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													265,
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 247,
												"id": 280,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 415,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 306,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 415,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													319,
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [
														{
															"id": 324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 317,
												"id": 332,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 415,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 346,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 371,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 353,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 357,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 368,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 367,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 364,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 337,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 363,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 175,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 366,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 369,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 345,
															"id": 370,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 348,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 415,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 391,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 383,
															"id": 392,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 415,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 402,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 411,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 408,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 410,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 412,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "berlin",
															"externalReferences": [
																{
																	"declaration": 399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 406,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 415,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 416,
							"src": "195:6066:3",
							"usedErrors": [
								170,
								175,
								178
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1736
						],
						"SignedMath": [
							1841
						],
						"Strings": [
							670
						]
					},
					"id": 671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 417,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 1737,
							"src": "127:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 418,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1736,
										"src": "135:4:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 1842,
							"src": "165:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 420,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1841,
										"src": "173:10:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 422,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 670,
							"linearizedBaseContracts": [
								670
							],
							"name": "Strings",
							"nameLocation": "259:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 425,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "273:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 423,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 428,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "335:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:4",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 435,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "505:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "520:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:4"
									},
									"src": "470:66:4"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "708:627:4",
										"statements": [
											{
												"id": 481,
												"nodeType": "UncheckedBlock",
												"src": "718:611:4",
												"statements": [
													{
														"assignments": [
															444
														],
														"declarations": [
															{
																"constant": false,
																"id": 444,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 481,
																"src": "742:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 443,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "770:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 445,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "759:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1736_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1556,
																	"src": "759:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:4"
													},
													{
														"assignments": [
															453
														],
														"declarations": [
															{
																"constant": false,
																"id": 453,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 481,
																"src": "794:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 452,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 458,
														"initialValue": {
															"arguments": [
																{
																	"id": 456,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "828:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 454,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:4"
													},
													{
														"assignments": [
															460
														],
														"declarations": [
															{
																"constant": false,
																"id": 460,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 481,
																"src": "849:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 459,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 461,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:4"
													},
													{
														"AST": {
															"nativeSrc": "930:67:4",
															"nodeType": "YulBlock",
															"src": "930:67:4",
															"statements": [
																{
																	"nativeSrc": "948:35:4",
																	"nodeType": "YulAssignment",
																	"src": "948:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:4",
																						"nodeType": "YulLiteral",
																						"src": "971:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:4"
																				},
																				"nativeSrc": "967:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:4"
																		},
																		"nativeSrc": "955:28:4",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "berlin",
														"externalReferences": [
															{
																"declaration": 453,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:4",
																"valueSize": 1
															},
															{
																"declaration": 444,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:4",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:4",
																"valueSize": 1
															}
														],
														"id": 462,
														"nodeType": "InlineAssembly",
														"src": "921:76:4"
													},
													{
														"body": {
															"id": 477,
															"nodeType": "Block",
															"src": "1023:269:4",
															"statements": [
																{
																	"expression": {
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:4",
																		"subExpression": {
																			"id": 464,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "1041:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 466,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:4"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:4",
																		"nodeType": "YulBlock",
																		"src": "1124:86:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:4"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:4",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:4"
																									},
																									"nativeSrc": "1164:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:4"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:4"
																							},
																							"nativeSrc": "1159:32:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:4",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:4"
																					},
																					"nativeSrc": "1146:46:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:4"
																				},
																				"nativeSrc": "1146:46:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "berlin",
																	"externalReferences": [
																		{
																			"declaration": 425,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 460,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 438,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 467,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:4"
																},
																{
																	"expression": {
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "1227:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 471,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "1260:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 476,
																	"nodeType": "IfStatement",
																	"src": "1256:21:4",
																	"trueBody": {
																		"id": 475,
																		"nodeType": "Break",
																		"src": "1272:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 478,
														"nodeType": "WhileStatement",
														"src": "1010:282:4"
													},
													{
														"expression": {
															"id": 479,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1312:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 442,
														"id": 480,
														"nodeType": "Return",
														"src": "1305:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "693:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:4"
									},
									"scope": 670,
									"src": "637:698:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1511:92:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1542:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:4",
															"trueExpression": {
																"hexValue": "2d",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "1588:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 501,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "1573:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1841_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:4",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1840,
																		"src": "1573:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 500,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "1564:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 491,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:4",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 490,
												"id": 507,
												"nodeType": "Return",
												"src": "1521:75:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:4",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1459:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 485,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1496:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:4"
									},
									"scope": 670,
									"src": "1435:168:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "1782:100:4",
										"statements": [
											{
												"id": 527,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "1835:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 521,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "1854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 519,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "1842:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1736_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1678,
																			"src": "1842:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 517,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	529,
																	612,
																	632
																],
																"referencedDeclaration": 612,
																"src": "1823:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 516,
														"id": 526,
														"nodeType": "Return",
														"src": "1816:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1729:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1767:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:4"
									},
									"scope": 670,
									"src": "1708:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2095:435:4",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "2105:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"id": 541,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "2126:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:4"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "2141:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 548,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "2177:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:4"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 554,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2198:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 556,
														"indexExpression": {
															"hexValue": "30",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:4"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2223:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 562,
														"indexExpression": {
															"hexValue": "31",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:4"
											},
											{
												"body": {
													"id": 594,
													"nodeType": "Block",
													"src": "2293:95:4",
													"statements": [
														{
															"expression": {
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 580,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "2307:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 582,
																	"indexExpression": {
																		"id": 581,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2314:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 583,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2319:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 584,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 540,
																			"src": "2330:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 589,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:4"
														},
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 590,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "2361:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2281:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"initializationExpression": {
													"assignments": [
														567
													],
													"declarations": [
														{
															"constant": false,
															"id": 567,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 595,
															"src": "2253:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 566,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 573,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 569,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "2269:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:4"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:4",
														"subExpression": {
															"id": 577,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "2290:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 579,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 596,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2401:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "2397:96:4",
												"trueBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "2418:75:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 600,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "2468:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 601,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "2475:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 599,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2439:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 603,
															"nodeType": "RevertStatement",
															"src": "2432:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2516:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 538,
												"id": 610,
												"nodeType": "Return",
												"src": "2502:21:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2080:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:4"
									},
									"scope": 670,
									"src": "2005:525:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2762:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 625,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "2807:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 623,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 621,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2815:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 620,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529,
															612,
															632
														],
														"referencedDeclaration": 612,
														"src": "2779:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 619,
												"id": 630,
												"nodeType": "Return",
												"src": "2772:58:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2710:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2747:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:4"
									},
									"scope": 670,
									"src": "2689:148:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "2992:104:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 644,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "3015:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 642,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 649,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "3034:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 647,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 656,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "3063:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 654,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 653,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 662,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "3086:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 660,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 659,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 641,
												"id": 667,
												"nodeType": "Return",
												"src": "3002:87:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:4",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2929:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2946:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:4"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "2986:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:4"
									},
									"scope": 670,
									"src": "2914:182:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 671,
							"src": "251:2847:4",
							"usedErrors": [
								435
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							682
						]
					},
					"id": 683,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 672,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 673,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 682,
							"linearizedBaseContracts": [
								682
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 675,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 682,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 683,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1736
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 684,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 685,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "Math",
							"nameLocation": "211:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:6",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 688,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:6"
									},
									"src": "277:29:6"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 693,
									"members": [
										{
											"id": 689,
											"name": "Floor",
											"nameLocation": "336:5:6",
											"nodeType": "EnumValue",
											"src": "336:5:6"
										},
										{
											"id": 690,
											"name": "Ceil",
											"nameLocation": "379:4:6",
											"nodeType": "EnumValue",
											"src": "379:4:6"
										},
										{
											"id": 691,
											"name": "Trunc",
											"nameLocation": "421:5:6",
											"nodeType": "EnumValue",
											"src": "421:5:6"
										},
										{
											"id": 692,
											"name": "Expand",
											"nameLocation": "451:6:6",
											"nodeType": "EnumValue",
											"src": "451:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:6",
									"nodeType": "EnumDefinition",
									"src": "312:169:6"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "661:140:6",
										"statements": [
											{
												"id": 723,
												"nodeType": "UncheckedBlock",
												"src": "671:124:6",
												"statements": [
													{
														"assignments": [
															706
														],
														"declarations": [
															{
																"constant": false,
																"id": 706,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 723,
																"src": "695:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 710,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "707:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "711:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 711,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 712,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 718,
														"nodeType": "IfStatement",
														"src": "726:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 704,
															"id": 717,
															"nodeType": "Return",
															"src": "737:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 720,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 721,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 704,
														"id": 722,
														"nodeType": "Return",
														"src": "768:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "646:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:6"
									},
									"scope": 1736,
									"src": "585:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "984:113:6",
										"statements": [
											{
												"id": 751,
												"nodeType": "UncheckedBlock",
												"src": "994:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 737,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "1022:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 738,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "1026:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 744,
														"nodeType": "IfStatement",
														"src": "1018:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 736,
															"id": 743,
															"nodeType": "Return",
															"src": "1029:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 746,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "1074:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 747,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 749,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 736,
														"id": 750,
														"nodeType": "Return",
														"src": "1060:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "924:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:6"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:6"
									},
									"scope": 1736,
									"src": "908:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1283:417:6",
										"statements": [
											{
												"id": 793,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1551:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "1547:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 764,
															"id": 771,
															"nodeType": "Return",
															"src": "1559:16:6"
														}
													},
													{
														"assignments": [
															774
														],
														"declarations": [
															{
																"constant": false,
																"id": 774,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 793,
																"src": "1589:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 773,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 778,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 776,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 779,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "1624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 780,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "1628:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 788,
														"nodeType": "IfStatement",
														"src": "1620:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 786,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 764,
															"id": 787,
															"nodeType": "Return",
															"src": "1636:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 790,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "1681:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 791,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 764,
														"id": 792,
														"nodeType": "Return",
														"src": "1667:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:6"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:6"
									},
									"scope": 1736,
									"src": "1207:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "1887:114:6",
										"statements": [
											{
												"id": 821,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "1925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 814,
														"nodeType": "IfStatement",
														"src": "1921:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 806,
															"id": 813,
															"nodeType": "Return",
															"src": "1933:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1978:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 817,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "1982:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 819,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 806,
														"id": 820,
														"nodeType": "Return",
														"src": "1964:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1827:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:6"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1872:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1878:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:6"
									},
									"scope": 1736,
									"src": "1811:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "2198:114:6",
										"statements": [
											{
												"id": 849,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 835,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "2236:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 842,
														"nodeType": "IfStatement",
														"src": "2232:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 834,
															"id": 841,
															"nodeType": "Return",
															"src": "2244:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 844,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "2289:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 845,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "2293:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 847,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 834,
														"id": 848,
														"nodeType": "Return",
														"src": "2275:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:6"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:6"
									},
									"scope": 1736,
									"src": "2122:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "2449:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 861,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2466:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 862,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2478:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:6",
													"trueExpression": {
														"id": 864,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2474:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 867,
												"nodeType": "Return",
												"src": "2459:20:6"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:6"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:6"
									},
									"scope": 1736,
									"src": "2382:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "2624:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 879,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 880,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2645:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 883,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2653:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:6",
													"trueExpression": {
														"id": 882,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2649:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 885,
												"nodeType": "Return",
												"src": "2634:20:6"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2570:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2581:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:6"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2615:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:6"
									},
									"scope": 1736,
									"src": "2557:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2845:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 897,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 898,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "2904:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 900,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 901,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2910:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "2914:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 904,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 896,
												"id": 908,
												"nodeType": "Return",
												"src": "2892:28:6"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2802:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:6"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2836:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:6"
									},
									"scope": 1736,
									"src": "2774:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "3219:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "3229:127:6",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "3241:115:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 923,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "3340:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 924,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "3344:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 919,
															"id": 926,
															"nodeType": "Return",
															"src": "3333:12:6"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 929,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3444:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 933,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "3458:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 936,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 937,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 942,
												"nodeType": "Return",
												"src": "3437:35:6"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3165:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3176:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3210:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:6"
									},
									"scope": 1736,
									"src": "3148:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "3901:4018:6",
										"statements": [
											{
												"id": 1068,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:6",
												"statements": [
													{
														"assignments": [
															957
														],
														"declarations": [
															{
																"constant": false,
																"id": 957,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "4232:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 956,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "4248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 959,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "4252:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:6"
													},
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "4312:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 964,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:6"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:6",
															"nodeType": "YulBlock",
															"src": "4392:122:6",
															"statements": [
																{
																	"nativeSrc": "4410:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:6"
																				},
																				"nativeSrc": "4433:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		},
																		"nativeSrc": "4420:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:6",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:6",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:6"
																				},
																				"nativeSrc": "4486:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "berlin",
														"externalReferences": [
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 947,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:6",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:6",
																"valueSize": 1
															}
														],
														"id": 965,
														"nodeType": "InlineAssembly",
														"src": "4383:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 974,
														"nodeType": "IfStatement",
														"src": "4591:368:6",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "4607:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 969,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "4925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 970,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "4933:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 955,
																	"id": 972,
																	"nodeType": "Return",
																	"src": "4918:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 975,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "5065:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 976,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "5080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 982,
														"nodeType": "IfStatement",
														"src": "5061:88:6",
														"trueBody": {
															"id": 981,
															"nodeType": "Block",
															"src": "5087:62:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 978,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "5112:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 980,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:6"
																}
															]
														}
													},
													{
														"assignments": [
															984
														],
														"declarations": [
															{
																"constant": false,
																"id": 984,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "5404:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 983,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 985,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:6"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:6",
															"nodeType": "YulBlock",
															"src": "5444:291:6",
															"statements": [
																{
																	"nativeSrc": "5513:38:6",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:6"
																		},
																		"nativeSrc": "5526:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:6",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:6"
																				},
																				"nativeSrc": "5653:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:6"
																		},
																		"nativeSrc": "5642:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:6",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:6"
																		},
																		"nativeSrc": "5700:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "berlin",
														"externalReferences": [
															{
																"declaration": 951,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:6",
																"valueSize": 1
															},
															{
																"declaration": 984,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 984,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:6",
																"valueSize": 1
															},
															{
																"declaration": 984,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:6",
																"valueSize": 1
															},
															{
																"declaration": 947,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:6",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:6",
																"valueSize": 1
															}
														],
														"id": 986,
														"nodeType": "InlineAssembly",
														"src": "5435:300:6"
													},
													{
														"assignments": [
															988
														],
														"declarations": [
															{
																"constant": false,
																"id": 988,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "5939:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 995,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "5954:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 991,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "5973:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 993,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:6"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:6",
															"nodeType": "YulBlock",
															"src": "6008:362:6",
															"statements": [
																{
																	"nativeSrc": "6073:37:6",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:6"
																		},
																		"nativeSrc": "6088:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:6",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:6"
																		},
																		"nativeSrc": "6186:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:6",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:6"
																						},
																						"nativeSrc": "6333:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:6"
																				},
																				"nativeSrc": "6329:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:6"
																		},
																		"nativeSrc": "6325:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "berlin",
														"externalReferences": [
															{
																"declaration": 951,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:6",
																"valueSize": 1
															},
															{
																"declaration": 951,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:6",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:6",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:6",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:6",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:6",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:6",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:6",
																"valueSize": 1
															}
														],
														"id": 996,
														"nodeType": "InlineAssembly",
														"src": "5999:371:6"
													},
													{
														"expression": {
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 997,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "6436:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 998,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "6445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 999,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "6453:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1002,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:6"
													},
													{
														"assignments": [
															1004
														],
														"declarations": [
															{
																"constant": false,
																"id": 1004,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "6775:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1003,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1006,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "6798:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:6"
													},
													{
														"expression": {
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1012,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1014,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7046:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1015,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:6"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1020,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7100:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1022,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7115:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1023,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:6"
													},
													{
														"expression": {
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1030,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1031,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1035,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:6"
													},
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7255:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7269:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:6"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7310:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7325:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7339:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:6"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7381:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7396:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1055,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7410:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:6"
													},
													{
														"expression": {
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "7851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7860:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1062,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:6"
													},
													{
														"expression": {
															"id": 1066,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "7896:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 1067,
														"nodeType": "Return",
														"src": "7889:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:6"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3885:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:6"
									},
									"scope": 1736,
									"src": "3803:4116:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "8161:192:6",
										"statements": [
											{
												"assignments": [
													1086
												],
												"declarations": [
													{
														"constant": false,
														"id": 1086,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "8171:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1085,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [
														{
															"id": 1088,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "8195:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1089,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "8198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1090,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "8201:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1070,
															1113
														],
														"referencedDeclaration": 1070,
														"src": "8188:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1094,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "8244:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$693",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$693",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1093,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "8227:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$693_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1097,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "8264:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1098,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "8267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1099,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "8270:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1096,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "8223:101:6",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "8288:36:6",
													"statements": [
														{
															"expression": {
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1104,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "8302:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1110,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1086,
													"src": "8340:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1111,
												"nodeType": "Return",
												"src": "8333:13:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8067:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8078:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8089:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8110:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1078,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "8110:8:6"
													},
													"referencedDeclaration": 693,
													"src": "8110:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8152:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:6"
									},
									"scope": 1736,
									"src": "8051:302:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "8644:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "8658:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "8654:45:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "8666:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1120,
															"id": 1125,
															"nodeType": "Return",
															"src": "8680:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "9378:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1132,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "9406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1131,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1392,
																			1427
																		],
																		"referencedDeclaration": 1392,
																		"src": "9401:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1136,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:6"
											},
											{
												"id": 1223,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:6",
												"statements": [
													{
														"expression": {
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1139,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "9839:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1140,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "9849:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1141,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9858:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1142,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "9862:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1145,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1149,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:6"
													},
													{
														"expression": {
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1150,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "9888:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1151,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "9898:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1152,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1153,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "9911:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1156,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1160,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:6"
													},
													{
														"expression": {
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1161,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "9937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1162,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "9947:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1163,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9956:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1164,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "9960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1167,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1171,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:6"
													},
													{
														"expression": {
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1172,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "9986:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1173,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "9996:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1174,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10005:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1175,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "10009:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1178,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1182,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:6"
													},
													{
														"expression": {
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1183,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10035:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1184,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "10045:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1185,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10054:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1186,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "10058:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1189,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1193,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:6"
													},
													{
														"expression": {
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1194,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10084:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1195,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "10094:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1196,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10103:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1197,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "10107:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1200,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1204,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:6"
													},
													{
														"expression": {
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1205,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10133:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1206,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "10143:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1207,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10152:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1208,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "10156:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1211,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1215,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1217,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "10193:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1218,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "10201:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1219,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "10205:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1216,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "10189:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1120,
														"id": 1222,
														"nodeType": "Return",
														"src": "10182:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "8601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:6"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "8635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:6"
									},
									"scope": 1736,
									"src": "8587:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "10405:164:6",
										"statements": [
											{
												"id": 1258,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:6",
												"statements": [
													{
														"assignments": [
															1237
														],
														"declarations": [
															{
																"constant": false,
																"id": 1237,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1258,
																"src": "10439:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1241,
														"initialValue": {
															"arguments": [
																{
																	"id": 1239,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "10461:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1238,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1225,
																	1260
																],
																"referencedDeclaration": 1225,
																"src": "10456:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1242,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "10484:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1244,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1231,
																						"src": "10511:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1243,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "10494:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$693_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1246,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1237,
																						"src": "10524:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1247,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1237,
																						"src": "10533:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1249,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1228,
																					"src": "10542:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1235,
														"id": 1257,
														"nodeType": "Return",
														"src": "10477:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "10343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "10354:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1229,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "10354:8:6"
													},
													"referencedDeclaration": 693,
													"src": "10354:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:6"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "10396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:6"
									},
									"scope": 1736,
									"src": "10329:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "10760:922:6",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "10770:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"hexValue": "30",
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:6"
											},
											{
												"id": 1388,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "10826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1286,
														"nodeType": "IfStatement",
														"src": "10822:99:6",
														"trueBody": {
															"id": 1285,
															"nodeType": "Block",
															"src": "10844:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "10862:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1280,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:6"
																},
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "10893:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "10938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1301,
														"nodeType": "IfStatement",
														"src": "10934:96:6",
														"trueBody": {
															"id": 1300,
															"nodeType": "Block",
															"src": "10955:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "10973:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1295,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:6"
																},
																{
																	"expression": {
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1299,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11047:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1316,
														"nodeType": "IfStatement",
														"src": "11043:96:6",
														"trueBody": {
															"id": 1315,
															"nodeType": "Block",
															"src": "11064:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "11082:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:6"
																},
																{
																	"expression": {
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11112:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1314,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11156:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1331,
														"nodeType": "IfStatement",
														"src": "11152:96:6",
														"trueBody": {
															"id": 1330,
															"nodeType": "Block",
															"src": "11173:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "11191:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1325,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:6"
																},
																{
																	"expression": {
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11221:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1329,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11265:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1346,
														"nodeType": "IfStatement",
														"src": "11261:93:6",
														"trueBody": {
															"id": 1345,
															"nodeType": "Block",
															"src": "11281:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "11299:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:6"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11328:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11371:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1361,
														"nodeType": "IfStatement",
														"src": "11367:93:6",
														"trueBody": {
															"id": 1360,
															"nodeType": "Block",
															"src": "11387:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "11405:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1355,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:6"
																},
																{
																	"expression": {
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11434:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1359,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1362,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11477:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1376,
														"nodeType": "IfStatement",
														"src": "11473:93:6",
														"trueBody": {
															"id": 1375,
															"nodeType": "Block",
															"src": "11493:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "11511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1370,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:6"
																},
																{
																	"expression": {
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1371,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11540:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1374,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "11583:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "11579:64:6",
														"trueBody": {
															"id": 1386,
															"nodeType": "Block",
															"src": "11599:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1382,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "11617:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1385,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1389,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1269,
													"src": "11669:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1390,
												"nodeType": "Return",
												"src": "11662:13:6"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "10713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:6"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "10751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:6"
									},
									"scope": 1736,
									"src": "10699:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "11915:168:6",
										"statements": [
											{
												"id": 1425,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:6",
												"statements": [
													{
														"assignments": [
															1404
														],
														"declarations": [
															{
																"constant": false,
																"id": 1404,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1425,
																"src": "11949:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1408,
														"initialValue": {
															"arguments": [
																{
																	"id": 1406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "11971:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1405,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1392,
																	1427
																],
																"referencedDeclaration": 1392,
																"src": "11966:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "11998:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1411,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1398,
																						"src": "12025:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1410,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "12008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$693_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1414,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1404,
																						"src": "12043:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1416,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1395,
																					"src": "12052:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1402,
														"id": 1424,
														"nodeType": "Return",
														"src": "11991:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "11849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "11864:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1396,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "11864:8:6"
													},
													"referencedDeclaration": 693,
													"src": "11864:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:6"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "11906:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:6"
									},
									"scope": 1736,
									"src": "11835:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "12276:854:6",
										"statements": [
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "12286:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"hexValue": "30",
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:6"
											},
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12342:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1455,
														"nodeType": "IfStatement",
														"src": "12338:103:6",
														"trueBody": {
															"id": 1454,
															"nodeType": "Block",
															"src": "12361:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12379:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1449,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:6"
																},
																{
																	"expression": {
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12414:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1453,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1456,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1472,
														"nodeType": "IfStatement",
														"src": "12454:103:6",
														"trueBody": {
															"id": 1471,
															"nodeType": "Block",
															"src": "12477:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12495:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:6"
																},
																{
																	"expression": {
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1467,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12530:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1470,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12574:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1489,
														"nodeType": "IfStatement",
														"src": "12570:103:6",
														"trueBody": {
															"id": 1488,
															"nodeType": "Block",
															"src": "12593:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1483,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:6"
																},
																{
																	"expression": {
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1484,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12646:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1490,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12690:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1506,
														"nodeType": "IfStatement",
														"src": "12686:100:6",
														"trueBody": {
															"id": 1505,
															"nodeType": "Block",
															"src": "12708:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1495,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12726:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:6"
																},
																{
																	"expression": {
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12760:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1504,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12803:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1523,
														"nodeType": "IfStatement",
														"src": "12799:100:6",
														"trueBody": {
															"id": 1522,
															"nodeType": "Block",
															"src": "12821:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12839:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:6"
																},
																{
																	"expression": {
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1518,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12873:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1521,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "12916:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "12912:100:6",
														"trueBody": {
															"id": 1539,
															"nodeType": "Block",
															"src": "12934:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1529,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "12952:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:6"
																},
																{
																	"expression": {
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "12986:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "13029:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1551,
														"nodeType": "IfStatement",
														"src": "13025:66:6",
														"trueBody": {
															"id": 1550,
															"nodeType": "Block",
															"src": "13047:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "13065:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1549,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1553,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "13117:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1434,
												"id": 1554,
												"nodeType": "Return",
												"src": "13110:13:6"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "12229:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:6"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "12267:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:6"
									},
									"scope": 1736,
									"src": "12214:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "13365:170:6",
										"statements": [
											{
												"id": 1589,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:6",
												"statements": [
													{
														"assignments": [
															1568
														],
														"declarations": [
															{
																"constant": false,
																"id": 1568,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1589,
																"src": "13399:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1572,
														"initialValue": {
															"arguments": [
																{
																	"id": 1570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "13422:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1569,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1556,
																	1591
																],
																"referencedDeclaration": 1556,
																"src": "13416:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "13449:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1575,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1562,
																						"src": "13476:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1574,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "13459:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$693_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1578,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1568,
																						"src": "13495:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1580,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1559,
																					"src": "13504:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1566,
														"id": 1588,
														"nodeType": "Return",
														"src": "13442:76:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "13299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "13314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1560,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "13314:8:6"
													},
													"referencedDeclaration": 693,
													"src": "13314:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:6"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "13356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:6"
									},
									"scope": 1736,
									"src": "13284:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "13855:600:6",
										"statements": [
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1677,
														"src": "13865:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"hexValue": "30",
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:6"
											},
											{
												"id": 1674,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "13921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1617,
														"nodeType": "IfStatement",
														"src": "13917:98:6",
														"trueBody": {
															"id": 1616,
															"nodeType": "Block",
															"src": "13939:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1608,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "13957:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1611,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:6"
																},
																{
																	"expression": {
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1612,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "13988:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1615,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1618,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "14032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1632,
														"nodeType": "IfStatement",
														"src": "14028:95:6",
														"trueBody": {
															"id": 1631,
															"nodeType": "Block",
															"src": "14049:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "14067:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1626,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:6"
																},
																{
																	"expression": {
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1627,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "14097:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1630,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1633,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "14140:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1647,
														"nodeType": "IfStatement",
														"src": "14136:95:6",
														"trueBody": {
															"id": 1646,
															"nodeType": "Block",
															"src": "14157:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1638,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "14175:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1641,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:6"
																},
																{
																	"expression": {
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1642,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "14205:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "14248:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1662,
														"nodeType": "IfStatement",
														"src": "14244:95:6",
														"trueBody": {
															"id": 1661,
															"nodeType": "Block",
															"src": "14265:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1653,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "14283:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1656,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:6"
																},
																{
																	"expression": {
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "14313:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1660,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "14356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1673,
														"nodeType": "IfStatement",
														"src": "14352:64:6",
														"trueBody": {
															"id": 1672,
															"nodeType": "Block",
															"src": "14372:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "14390:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1671,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1675,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1600,
													"src": "14442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1598,
												"id": 1676,
												"nodeType": "Return",
												"src": "14435:13:6"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "13808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:6"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "13846:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:6"
									},
									"scope": 1736,
									"src": "13792:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "14692:177:6",
										"statements": [
											{
												"id": 1714,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:6",
												"statements": [
													{
														"assignments": [
															1690
														],
														"declarations": [
															{
																"constant": false,
																"id": 1690,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1714,
																"src": "14726:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1689,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1694,
														"initialValue": {
															"arguments": [
																{
																	"id": 1692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "14750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1691,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1678,
																	1716
																],
																"referencedDeclaration": 1678,
																"src": "14743:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "14777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1697,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1684,
																						"src": "14804:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$693",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1696,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "14787:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$693_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1699,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1702,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1700,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1690,
																									"src": "14823:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1701,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1703,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1705,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1681,
																					"src": "14838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1711,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1688,
														"id": 1713,
														"nodeType": "Return",
														"src": "14770:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "14626:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "14641:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1682,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "14641:8:6"
													},
													"referencedDeclaration": 693,
													"src": "14641:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:6"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "14683:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:6"
									},
									"scope": 1736,
									"src": "14610:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "15067:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1727,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "15090:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$693",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$693",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1725,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1733,
												"nodeType": "Return",
												"src": "15077:31:6"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "15019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$693",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "15019:8:6"
													},
													"referencedDeclaration": 693,
													"src": "15019:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$693",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:6"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "15061:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:6"
									},
									"scope": 1736,
									"src": "14993:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1737,
							"src": "203:14914:6",
							"usedErrors": [
								688
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1841
						]
					},
					"id": 1842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1739,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1841,
							"linearizedBaseContracts": [
								1841
							],
							"name": "SignedMath",
							"nameLocation": "224:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "376:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1749,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "393:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1750,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "397:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1753,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "405:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:7",
													"trueExpression": {
														"id": 1752,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "401:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1755,
												"nodeType": "Return",
												"src": "386:20:7"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "325:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1741,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "335:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:7"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "368:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1746,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:7"
									},
									"scope": 1841,
									"src": "312:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "555:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1767,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1768,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "576:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1771,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "584:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:7",
													"trueExpression": {
														"id": 1770,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "580:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1773,
												"nodeType": "Return",
												"src": "565:20:7"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "504:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1759,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "514:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1761,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:7"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "547:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:7"
									},
									"scope": 1841,
									"src": "491:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "797:162:7",
										"statements": [
											{
												"assignments": [
													1786
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "859:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1785,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1799,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "871:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1788,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "875:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1790,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1791,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1778,
																				"src": "882:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1792,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "886:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1794,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1800,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "911:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1805,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1786,
																						"src": "931:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1803,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1801,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1810,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1778,
																				"src": "945:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1811,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "949:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1813,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1815,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1817,
												"nodeType": "Return",
												"src": "904:48:7"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "746:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1777,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "756:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1779,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:7"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "789:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:7"
									},
									"scope": 1841,
									"src": "729:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1103:158:7",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1829,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "1228:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:7",
																		"subExpression": {
																			"id": 1833,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "1242:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:7",
																	"trueExpression": {
																		"id": 1832,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "1237:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1826,
														"id": 1837,
														"nodeType": "Return",
														"src": "1213:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1061:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1821,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:7"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1094:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:7"
									},
									"scope": 1841,
									"src": "1048:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1842,
							"src": "216:1047:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:7"
				},
				"id": 7
			},
			"contracts/34_ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/34_ERC721.sol",
					"exportedSymbols": {
						"Address": [
							415
						],
						"ERC721": [
							2527
						],
						"IERC165": [
							682
						],
						"IERC721": [
							116
						],
						"IERC721Metadata": [
							162
						],
						"IERC721Receiver": [
							134
						],
						"Math": [
							1736
						],
						"SignedMath": [
							1841
						],
						"Strings": [
							670
						]
					},
					"id": 2528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2528,
							"sourceUnit": 117,
							"src": "1024:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2528,
							"sourceUnit": 135,
							"src": "1083:66:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 1846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2528,
							"sourceUnit": 163,
							"src": "1150:77:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2528,
							"sourceUnit": 416,
							"src": "1228:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2528,
							"sourceUnit": 671,
							"src": "1280:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1849,
										"name": "IERC721",
										"nameLocations": [
											"1352:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "1352:7:8"
									},
									"id": 1850,
									"nodeType": "InheritanceSpecifier",
									"src": "1352:7:8"
								},
								{
									"baseName": {
										"id": 1851,
										"name": "IERC721Metadata",
										"nameLocations": [
											"1361:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "1361:15:8"
									},
									"id": 1852,
									"nodeType": "InheritanceSpecifier",
									"src": "1361:15:8"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2527,
							"linearizedBaseContracts": [
								2527,
								162,
								116,
								682
							],
							"name": "ERC721",
							"nameLocation": "1342:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1855,
									"libraryName": {
										"id": 1853,
										"name": "Address",
										"nameLocations": [
											"1388:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 415,
										"src": "1388:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1382:26:8",
									"typeName": {
										"id": 1854,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1400:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1858,
									"libraryName": {
										"id": 1856,
										"name": "Strings",
										"nameLocations": [
											"1485:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 670,
										"src": "1485:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1479:26:8",
									"typeName": {
										"id": 1857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1497:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										147
									],
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1861,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1575:4:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1860,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1566:8:8"
									},
									"scope": 2527,
									"src": "1552:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1859,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1552:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										153
									],
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1864,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1627:6:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1618:8:8"
									},
									"scope": 2527,
									"src": "1604:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1862,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1604:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1868,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1724:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1691:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1867,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1865,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1699:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1691:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1866,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1707:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1872,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1821:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1788:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1871,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1869,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1796:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1788:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1870,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1807:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1876,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1917:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1884:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1875,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1873,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1892:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1884:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1874,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1900:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1882,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2053:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "2000:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1881,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1877,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2008:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2000:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1880,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1878,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2027:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2019:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1879,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2038:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "2202:55:8",
										"statements": [
											{
												"expression": {
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1890,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "2212:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1891,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "2219:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2212:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "2212:12:8"
											},
											{
												"expression": {
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1894,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2234:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1895,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "2243:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2234:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "2234:16:8"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "2078:63:8",
										"text": " 构造函数，初始化`name` 和`symbol` ."
									},
									"id": 1899,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2172:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2158:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2193:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2179:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2179:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:44:8"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:0:8"
									},
									"scope": 2527,
									"src": "2146:111:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "2428:196:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1907,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "2457:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1909,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "2477:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$116_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$116_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1908,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2472:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2472:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$116",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2486:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2472:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2457:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "2513:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1915,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "2533:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$682_$",
																				"typeString": "type(contract IERC165)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$682_$",
																				"typeString": "type(contract IERC165)"
																			}
																		],
																		"id": 1914,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2528:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2528:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$682",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2542:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2528:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2513:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2457:96:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1920,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "2569:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1922,
																		"name": "IERC721Metadata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2589:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$162_$",
																			"typeString": "type(contract IERC721Metadata)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$162_$",
																			"typeString": "type(contract IERC721Metadata)"
																		}
																	],
																	"id": 1921,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2584:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2584:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$162",
																	"typeString": "type(contract IERC721Metadata)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2606:11:8",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2584:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2569:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2457:160:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1927,
												"nodeType": "Return",
												"src": "2438:179:8"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2316:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1903,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2392:8:8"
									},
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2341:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2334:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2334:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:20:8"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2418:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2418:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:6:8"
									},
									"scope": 2527,
									"src": "2307:317:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "2692:123:8",
										"statements": [
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "2709:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1945,
														"src": "2702:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1936,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2702:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1938,
												"nodeType": "VariableDeclarationStatement",
												"src": "2702:11:8"
											},
											{
												"AST": {
													"nativeSrc": "2732:50:8",
													"nodeType": "YulBlock",
													"src": "2732:50:8",
													"statements": [
														{
															"nativeSrc": "2746:26:8",
															"nodeType": "YulAssignment",
															"src": "2746:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nativeSrc": "2766:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "2754:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "2754:11:8"
																},
																"nativeSrc": "2754:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2754:18:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2746:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2746:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 1931,
														"isOffset": false,
														"isSlot": false,
														"src": "2766:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1937,
														"isOffset": false,
														"isSlot": false,
														"src": "2746:4:8",
														"valueSize": 1
													}
												],
												"id": 1939,
												"nodeType": "InlineAssembly",
												"src": "2723:59:8"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1940,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "2799:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2806:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2799:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1943,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2798:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1935,
												"id": 1944,
												"nodeType": "Return",
												"src": "2791:17:8"
											}
										]
									},
									"functionSelector": "16279055",
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "2639:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2658:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2650:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:15:8"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2687:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2687:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:6:8"
									},
									"scope": 2527,
									"src": "2630:185:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "2980:102:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1955,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "2998:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3007:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3007:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3007:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2998:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f776e6572203d207a65726f2061646472657373",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3019:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8",
																"typeString": "literal_string \"owner = zero address\""
															},
															"value": "owner = zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_842041bfe54be909512138a4f7040890611ae6f36314c55100efacf9ad59eda8",
																"typeString": "literal_string \"owner = zero address\""
															}
														],
														"id": 1954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2990:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2990:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "2990:52:8"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1964,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "3059:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1966,
													"indexExpression": {
														"id": 1965,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "3069:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3059:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1953,
												"id": 1967,
												"nodeType": "Return",
												"src": "3052:23:8"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2917:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1950,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2956:8:8"
									},
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2935:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2927:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:15:8"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2974:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2974:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:6:8"
									},
									"scope": 2527,
									"src": "2908:174:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "3241:102:8",
										"statements": [
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1977,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "3251:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1978,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "3259:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1980,
														"indexExpression": {
															"id": 1979,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3267:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3259:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3251:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "3251:24:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "3293:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3310:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3302:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3302:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3302:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3293:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20646f65736e2774206578697374",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3314:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
																"typeString": "literal_string \"token doesn't exist\""
															},
															"value": "token doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
																"typeString": "literal_string \"token doesn't exist\""
															}
														],
														"id": 1983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "3285:51:8"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3174:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1973,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3208:8:8"
									},
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3187:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3182:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3182:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:14:8"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3234:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3226:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:15:8"
									},
									"scope": 2527,
									"src": "3165:178:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										115
									],
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "3625:59:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2004,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "3642:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2006,
														"indexExpression": {
															"id": 2005,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "3661:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3642:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2008,
													"indexExpression": {
														"id": 2007,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "3668:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3642:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2009,
												"nodeType": "Return",
												"src": "3635:42:8"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3501:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2000,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3589:8:8"
									},
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3526:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3518:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3541:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3533:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:33:8"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3615:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3615:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:6:8"
									},
									"scope": 2527,
									"src": "3492:192:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "3892:129:8",
										"statements": [
											{
												"expression": {
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2019,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "3902:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2023,
															"indexExpression": {
																"expression": {
																	"id": 2020,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3921:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3925:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3921:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3902:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2024,
														"indexExpression": {
															"id": 2022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "3933:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3902:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2025,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "3945:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3902:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "3902:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2029,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3983:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3987:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3983:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "3995:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2032,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "4005:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2028,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3968:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3968:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "EmitStatement",
												"src": "3963:51:8"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3823:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3883:8:8"
									},
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3849:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "3841:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3864:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "3859:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3859:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3840:33:8"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3892:0:8"
									},
									"scope": 2527,
									"src": "3814:207:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										105
									],
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "4199:120:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2045,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "4217:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2047,
																"indexExpression": {
																	"id": 2046,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "4225:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4217:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4245:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4237:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2048,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4237:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4237:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4217:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20646f65736e2774206578697374",
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
																"typeString": "literal_string \"token doesn't exist\""
															},
															"value": "token doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c84eed0a6644f5a7354ec927cedae14a4c91d38a501e30babdb96627607972b",
																"typeString": "literal_string \"token doesn't exist\""
															}
														],
														"id": 2044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4209:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "4209:62:8"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2056,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "4288:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2058,
													"indexExpression": {
														"id": 2057,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "4304:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4288:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2059,
												"nodeType": "Return",
												"src": "4281:31:8"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4132:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2040,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4172:8:8"
									},
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4144:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4144:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4143:14:8"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4190:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4189:9:8"
									},
									"scope": 2527,
									"src": "4123:196:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "4545:89:8",
										"statements": [
											{
												"expression": {
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2070,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "4555:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2072,
														"indexExpression": {
															"id": 2071,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "4571:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4555:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2073,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "4582:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4555:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "4555:29:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "4608:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "4615:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "4619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2076,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "4599:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4599:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "EmitStatement",
												"src": "4594:33:8"
											}
										]
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4457:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4483:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "4475:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4506:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "4498:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4523:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "4518:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4518:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:71:8"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4545:0:8"
									},
									"scope": 2527,
									"src": "4448:186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "4854:234:8",
										"statements": [
											{
												"assignments": [
													2092
												],
												"declarations": [
													{
														"constant": false,
														"id": 2092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4872:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2118,
														"src": "4864:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4864:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2096,
												"initialValue": {
													"baseExpression": {
														"id": 2093,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "4880:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2095,
													"indexExpression": {
														"id": 2094,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "4888:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4880:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4864:32:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2098,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4927:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4931:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4927:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2100,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "4941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4927:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2102,
																		"name": "_operatorApprovals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "4950:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 2104,
																	"indexExpression": {
																		"id": 2103,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2092,
																		"src": "4969:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4950:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2107,
																"indexExpression": {
																	"expression": {
																		"id": 2105,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4976:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4980:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4976:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4950:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4927:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63",
																"typeString": "literal_string \"not owner nor approved for all\""
															},
															"value": "not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e9e6150df4c9e576c90f529ebe8ecd17bf3a04a9d4e8cf23737828c33f74b63",
																"typeString": "literal_string \"not owner nor approved for all\""
															}
														],
														"id": 2097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4906:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4906:137:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "4906:137:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2113,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "5062:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2114,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "5069:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2115,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "5073:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2112,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "5053:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "5053:28:8"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4802:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2089,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4845:8:8"
									},
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4818:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "4810:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4827:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "4822:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4822:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4809:26:8"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4854:0:8"
									},
									"scope": 2527,
									"src": "4793:295:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "5317:143:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2130,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5335:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2131,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "5346:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5335:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2133,
																			"name": "_tokenApprovals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "5367:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 2135,
																		"indexExpression": {
																			"id": 2134,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "5383:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5367:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2136,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5395:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5367:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5335:67:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2139,
																		"name": "_operatorApprovals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "5418:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 2141,
																	"indexExpression": {
																		"id": 2140,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "5437:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5418:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2143,
																"indexExpression": {
																	"id": 2142,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "5444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5418:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5335:117:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2145,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5334:119:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2146,
												"nodeType": "Return",
												"src": "5327:126:8"
											}
										]
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "5194:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5230:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5222:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5253:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5245:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5275:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5270:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5270:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5212:76:8"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5311:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5311:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:6:8"
									},
									"scope": 2527,
									"src": "5185:275:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "5801:299:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2160,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "5819:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2161,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "5827:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5819:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5834:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 2159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5811:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5811:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "5811:35:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2167,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "5864:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5870:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2168,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5870:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5870:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5864:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5882:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
																"typeString": "literal_string \"transfer to the zero address\""
															},
															"value": "transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28d7a2278eef6b97b115358f049a1a3d3d7d04273936a984bb0924c2b0a5d0e1",
																"typeString": "literal_string \"transfer to the zero address\""
															}
														],
														"id": 2166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5856:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "5856:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2177,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "5933:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5948:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5940:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2178,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5940:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5940:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2182,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "5952:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2176,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "5924:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5924:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "5924:36:8"
											},
											{
												"expression": {
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2185,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "5971:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2187,
														"indexExpression": {
															"id": 2186,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "5981:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5971:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5990:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5971:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "5971:20:8"
											},
											{
												"expression": {
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2191,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "6001:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2193,
														"indexExpression": {
															"id": 2192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "6011:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6001:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6018:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6001:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "6001:18:8"
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2197,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "6029:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2199,
														"indexExpression": {
															"id": 2198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "6037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6029:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2200,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "6048:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6029:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "6029:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2204,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "6075:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2205,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "6081:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2206,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "6085:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2203,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "6066:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6066:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2208,
												"nodeType": "EmitStatement",
												"src": "6061:32:8"
											}
										]
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5690:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5717:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "5709:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5740:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "5732:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5762:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "5754:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5779:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "5774:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5774:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5699:93:8"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5801:0:8"
									},
									"scope": 2527,
									"src": "5681:419:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "6316:219:8",
										"statements": [
											{
												"assignments": [
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6334:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2243,
														"src": "6326:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2220,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6326:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2225,
												"initialValue": {
													"arguments": [
														{
															"id": 2223,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "6350:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2222,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "6342:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6342:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6326:32:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2228,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "6408:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2229,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6415:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6419:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6415:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2231,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "6427:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2227,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "6389:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) view returns (bool)"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6389:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572206e6f7220617070726f766564",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6449:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
																"typeString": "literal_string \"not owner nor approved\""
															},
															"value": "not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
																"typeString": "literal_string \"not owner nor approved\""
															}
														],
														"id": 2226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6368:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6368:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "6368:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "6503:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "6510:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "6516:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2240,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "6520:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "6493:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "6493:35:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6215:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6307:8:8"
									},
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6245:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "6237:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6267:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "6259:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6284:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "6279:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6279:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:70:8"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6316:0:8"
									},
									"scope": 2527,
									"src": "6206:329:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "7136:141:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2259,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "7156:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2260,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "7163:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "7169:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2262,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2253,
															"src": "7173:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2258,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "7146:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7146:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2264,
												"nodeType": "ExpressionStatement",
												"src": "7146:35:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2267,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "7222:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2268,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "7228:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2269,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "7232:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2270,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "7241:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2266,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "7199:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7199:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74204552433732315265636569766572",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7249:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149",
																"typeString": "literal_string \"not ERC721Receiver\""
															},
															"value": "not ERC721Receiver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc9e966a992a3a41790613011a8a70c1bcfa6c3dc0a58d9e9ed68f6a42ef4149",
																"typeString": "literal_string \"not ERC721Receiver\""
															}
														],
														"id": 2265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7191:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7191:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "7191:79:8"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "6541:438:8",
										"text": " 安全转账，安全地将 tokenId 代币从 from 转移到 to，会检查合约接收者是否了解 ERC721 协议，以防止代币被永久锁定。调用了_transfer函数和_checkOnERC721Received函数。条件：\n from 不能是0地址.\n to 不能是0地址.\n tokenId 代币必须存在，并且被 from拥有.\n 如果 to 是智能合约, 他必须支持 IERC721Receiver-onERC721Received."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6993:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7024:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "7016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7047:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "7039:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7069:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "7061:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7086:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "7081:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7081:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7116:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "7103:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7103:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:121:8"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:8"
									},
									"scope": 2527,
									"src": "6984:293:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "7528:230:8",
										"statements": [
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7546:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2313,
														"src": "7538:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2289,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7538:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"arguments": [
														{
															"id": 2292,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "7562:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2291,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "7554:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7554:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7538:32:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2297,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "7620:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2298,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7627:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7631:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7627:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2300,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "7639:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2296,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "7601:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) view returns (bool)"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7601:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572206e6f7220617070726f766564",
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7661:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
																"typeString": "literal_string \"not owner nor approved\""
															},
															"value": "not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18e601c67f7aa8495377affa64661dcafd5976d6c14b07bfaf943c928a426f3f",
																"typeString": "literal_string \"not owner nor approved\""
															}
														],
														"id": 2295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7580:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7580:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2304,
												"nodeType": "ExpressionStatement",
												"src": "7580:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2306,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "7719:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2307,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "7726:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7732:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2309,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "7736:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2310,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "7745:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2305,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "7705:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7705:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "7705:46:8"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "7283:100:8",
										"text": " 实现IERC721的safeTransferFrom，安全转账，调用了_safeTransfer函数。"
									},
									"functionSelector": "b88d4fde",
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7397:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7519:8:8"
									},
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7431:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "7423:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7423:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7453:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "7445:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7445:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7470:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "7465:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7465:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7500:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "7487:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7487:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7413:98:8"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7528:0:8"
									},
									"scope": 2527,
									"src": "7388:370:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										71
									],
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "7914:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2325,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "7941:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2326,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "7947:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2327,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "7951:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7960:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2324,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "7924:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7924:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "7924:39:8"
											}
										]
									},
									"functionSelector": "42842e0e",
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7809:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7905:8:8"
									},
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7843:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7835:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7835:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7865:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7857:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7882:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7877:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7877:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7825:70:8"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7914:0:8"
									},
									"scope": 2527,
									"src": "7800:170:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "8463:248:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2341,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2335,
																"src": "8481:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8495:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8487:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8487:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8487:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8481:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e7420746f207a65726f2061646472657373",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8499:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481",
																"typeString": "literal_string \"mint to zero address\""
															},
															"value": "mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_568e262bd5aa3a754944c427dcb1c615cb90c0572e9f497fa91ae4064ffcc481",
																"typeString": "literal_string \"mint to zero address\""
															}
														],
														"id": 2340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8473:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8473:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "8473:49:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2351,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "8540:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2353,
																"indexExpression": {
																	"id": 2352,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "8548:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8540:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8568:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8560:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8540:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20616c7265616479206d696e746564",
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8572:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582",
																"typeString": "literal_string \"token already minted\""
															},
															"value": "token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2547936e1aa3d957901ab236edb7b8d7386b0029d25abf48449346142595582",
																"typeString": "literal_string \"token already minted\""
															}
														],
														"id": 2350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8532:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8532:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "8532:63:8"
											},
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2362,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "8606:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2364,
														"indexExpression": {
															"id": 2363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "8616:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8606:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8623:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8606:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "8606:18:8"
											},
											{
												"expression": {
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2368,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "8634:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2370,
														"indexExpression": {
															"id": 2369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "8642:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8634:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2371,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2335,
														"src": "8653:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8634:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "8634:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "8692:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2380,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "8696:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2374,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8671:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "EmitStatement",
												"src": "8666:38:8"
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "7976:433:8",
										"text": " 铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。铸造函数。通过调整_balances和_owners变量来铸造tokenId并转账给 to，同时释放Transfer事件。\n 这个mint函数所有人都能调用，实际使用需要开发人员重写，加上一些条件。\n 条件:\n 1. tokenId尚不存在。\n 2. to不是0地址."
									},
									"functionSelector": "4e6ec247",
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8423:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8437:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "8429:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8446:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "8441:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8441:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:26:8"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8463:0:8"
									},
									"scope": 2527,
									"src": "8414:297:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "8896:273:8",
										"statements": [
											{
												"assignments": [
													2390
												],
												"declarations": [
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8914:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2432,
														"src": "8906:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8906:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2394,
												"initialValue": {
													"arguments": [
														{
															"id": 2392,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "8930:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2391,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "8922:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8922:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8906:32:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2396,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8956:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8960:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8956:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2398,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "8970:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8956:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572206f6620746f6b656e",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8977:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac4584685c4dcf32175674b4213c778529751085cdf7fe43cce6efede80d9c58",
																"typeString": "literal_string \"not owner of token\""
															},
															"value": "not owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac4584685c4dcf32175674b4213c778529751085cdf7fe43cce6efede80d9c58",
																"typeString": "literal_string \"not owner of token\""
															}
														],
														"id": 2395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8948:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8948:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "8948:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2404,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9018:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9033:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9025:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9025:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9025:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2409,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "9037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2403,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "9009:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9009:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "9009:36:8"
											},
											{
												"expression": {
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2412,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "9056:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2414,
														"indexExpression": {
															"id": 2413,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9066:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9056:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9076:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9056:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "9056:21:8"
											},
											{
												"expression": {
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9087:23:8",
													"subExpression": {
														"baseExpression": {
															"id": 2418,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "9094:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2420,
														"indexExpression": {
															"id": 2419,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "9102:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9094:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "9087:23:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9135:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9150:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9142:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2425,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9142:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9142:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "9154:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2423,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9126:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9126:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2431,
												"nodeType": "EmitStatement",
												"src": "9121:41:8"
											}
										]
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8859:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8870:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "8865:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8865:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8864:14:8"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8896:0:8"
									},
									"scope": 2527,
									"src": "8850:319:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "9483:339:8",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "9508:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2446,
														"name": "isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "9497:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2467,
													"nodeType": "Block",
													"src": "9780:36:8",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9801:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2445,
															"id": 2466,
															"nodeType": "Return",
															"src": "9794:11:8"
														}
													]
												},
												"id": 2468,
												"nodeType": "IfStatement",
												"src": "9493:323:8",
												"trueBody": {
													"id": 2464,
													"nodeType": "Block",
													"src": "9513:261:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2453,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9608:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9612:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9608:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2455,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9640:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2456,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2439,
																			"src": "9666:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2457,
																			"name": "_data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "9695:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2450,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2437,
																					"src": "9566:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2449,
																				"name": "IERC721Receiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 134,
																				"src": "9550:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$134_$",
																					"typeString": "type(contract IERC721Receiver)"
																				}
																			},
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9550:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721Receiver_$134",
																				"typeString": "contract IERC721Receiver"
																			}
																		},
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9570:16:8",
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 133,
																		"src": "9550:36:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																		}
																	},
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9550:168:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 2459,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 134,
																			"src": "9722:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$134_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "9738:16:8",
																		"memberName": "onERC721Received",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 133,
																		"src": "9722:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																			"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9755:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "9722:41:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "9550:213:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2445,
															"id": 2463,
															"nodeType": "Return",
															"src": "9527:236:8"
														}
													]
												}
											}
										]
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "9339:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9379:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "9371:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9371:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9401:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "9393:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9393:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9418:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "9413:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9413:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9448:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "9435:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9435:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9361:98:8"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "9477:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9477:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9476:6:8"
									},
									"scope": 2527,
									"src": "9330:492:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "9998:223:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2480,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "10016:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2482,
																"indexExpression": {
																	"id": 2481,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "10024:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10016:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10036:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2483,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10036:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10036:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10016:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e204e6f74204578697374",
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10048:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21",
																"typeString": "literal_string \"Token Not Exist\""
															},
															"value": "Token Not Exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af2064a63880a419edb9183af92c84bae4bf77739dae713ad3b99a559831ed21",
																"typeString": "literal_string \"Token Not Exist\""
															}
														],
														"id": 2479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10008:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10008:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "10008:58:8"
											},
											{
												"assignments": [
													2492
												],
												"declarations": [
													{
														"constant": false,
														"id": 2492,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10091:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2516,
														"src": "10077:21:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2491,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10077:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2495,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2493,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2526,
														"src": "10101:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10101:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10077:34:8"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2498,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "10134:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2496,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10128:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10128:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10143:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10128:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10152:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10128:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10212:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10128:86:8",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2507,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "10180:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2508,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2473,
																				"src": "10189:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10197:8:8",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 483,
																			"src": "10189:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10189:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2505,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10163:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10167:12:8",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10163:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10163:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10156:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2503,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10156:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10156:53:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2478,
												"id": 2515,
												"nodeType": "Return",
												"src": "10121:93:8"
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "9828:77:8",
										"text": " 实现IERC721Metadata的tokenURI函数，查询metadata。"
									},
									"functionSelector": "c87b56dd",
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9919:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9965:8:8"
									},
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9936:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "9928:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9927:17:8"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "9983:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9983:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9982:15:8"
									},
									"scope": 2527,
									"src": "9910:311:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2525,
										"nodeType": "Block",
										"src": "10499:26:8",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10516:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2522,
												"id": 2524,
												"nodeType": "Return",
												"src": "10509:9:8"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "10227:201:8",
										"text": " 计算{tokenURI}的BaseURI，tokenURI就是把baseURI和tokenId拼接在一起，需要开发重写。\n BAYC的baseURI为ipfs://QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/ "
									},
									"id": 2526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10442:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10450:2:8"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "10484:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10484:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10483:15:8"
									},
									"scope": 2527,
									"src": "10433:92:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2528,
							"src": "1333:9194:8",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "32:10495:8"
				},
				"id": 8
			}
		}
	}
}